{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupingSheet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GroupingSheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupingSheet = ({\n  segmentValues = []\n}) => {\n  _s();\n  // 그룹 상태 관리\n  const [groups, setGroups] = useState([{\n    id: 'unprocessed',\n    name: '미처리',\n    items: [],\n    isDefault: true\n  }]);\n\n  // 값들의 그룹 할당 상태 관리\n  const [valueGroups, setValueGroups] = useState({});\n\n  // 새 그룹명 입력 상태\n  const [newGroupName, setNewGroupName] = useState('');\n\n  // 선택된 그룹 관리\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n\n  // 컴포넌트 마운트시 미처리 그룹에 모든 분절값 추가\n  useEffect(() => {\n    if (segmentValues.length > 0) {\n      // 초기 상태에서 모든 값은 미처리 그룹에 할당\n      const initialValueGroups = {};\n      segmentValues.forEach(value => {\n        initialValueGroups[value] = 'unprocessed';\n      });\n      setValueGroups(initialValueGroups);\n\n      // 미처리 그룹에 값 할당\n      setGroups(prevGroups => {\n        const updatedGroups = [...prevGroups];\n        const unprocessedGroup = updatedGroups.find(g => g.id === 'unprocessed');\n        if (unprocessedGroup) {\n          unprocessedGroup.items = [...segmentValues];\n        }\n        return updatedGroups;\n      });\n    }\n  }, [segmentValues]);\n\n  // 새 그룹 추가 함수\n  const addNewGroup = () => {\n    if (!newGroupName.trim()) return;\n    const newGroupId = `group-${Date.now()}`;\n    const newGroup = {\n      id: newGroupId,\n      name: newGroupName.trim(),\n      items: [],\n      isDefault: false\n    };\n    setGroups([...groups, newGroup]);\n    setNewGroupName('');\n\n    // 새 그룹 추가 후 자동으로 선택\n    setSelectedGroupId(newGroupId);\n  };\n\n  // 그룹 선택 함수\n  const selectGroup = groupId => {\n    setSelectedGroupId(groupId === selectedGroupId ? null : groupId);\n  };\n\n  // 값을 그룹에 할당하는 함수\n  const assignToGroup = (value, groupId) => {\n    // 같은 그룹으로 이동이면 무시\n    if (valueGroups[value] === groupId) return;\n\n    // 현재 할당된 그룹에서 제거\n    const currentGroupId = valueGroups[value];\n    if (currentGroupId) {\n      setGroups(prevGroups => {\n        return prevGroups.map(group => {\n          if (group.id === currentGroupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item !== value)\n            };\n          }\n          return group;\n        });\n      });\n    }\n\n    // 새 그룹에 추가\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            items: [...group.items, value]\n          };\n        }\n        return group;\n      });\n    });\n\n    // 값의 그룹 매핑 업데이트\n    setValueGroups({\n      ...valueGroups,\n      [value]: groupId\n    });\n  };\n\n  // 아이템 클릭 핸들러\n  const handleItemClick = (value, currentGroupId) => {\n    // 선택된 그룹이 없으면 무시 (미처리 그룹이 아닌 다른 그룹의 아이템은 클릭할 수 없음)\n    if (!selectedGroupId || currentGroupId !== 'unprocessed' && selectedGroupId !== 'unprocessed') return;\n\n    // 미처리 항목을 클릭한 경우, 선택된 그룹으로 이동\n    if (currentGroupId === 'unprocessed' && selectedGroupId !== 'unprocessed') {\n      assignToGroup(value, selectedGroupId);\n    }\n    // 그룹 항목을 클릭한 경우, 미처리로 이동 (미처리가 선택된 경우에만)\n    else if (currentGroupId !== 'unprocessed' && selectedGroupId === 'unprocessed') {\n      assignToGroup(value, 'unprocessed');\n    }\n  };\n\n  // 그룹 삭제 함수\n  const deleteGroup = (groupId, e) => {\n    // 이벤트 전파 방지\n    e.stopPropagation();\n    if (groupId === 'unprocessed') return; // 미처리 그룹은 삭제 불가\n\n    // 해당 그룹에 있던 모든 값을 미처리로 이동\n    const groupToDelete = groups.find(g => g.id === groupId);\n    if (groupToDelete) {\n      groupToDelete.items.forEach(value => {\n        assignToGroup(value, 'unprocessed');\n      });\n    }\n\n    // 그룹 삭제\n    setGroups(groups.filter(g => g.id !== groupId));\n\n    // 삭제된 그룹이 선택된 그룹이었으면 선택 해제\n    if (selectedGroupId === groupId) {\n      setSelectedGroupId(null);\n    }\n  };\n\n  // 그룹명 변경 함수\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  const startEditingGroupName = (group, e) => {\n    // 이벤트 전파 방지 (그룹 선택과 충돌방지)\n    e.stopPropagation();\n    if (group.isDefault) return; // 미처리 그룹명은 변경 불가\n    setEditingGroupId(group.id);\n    setEditingGroupName(group.name);\n  };\n  const saveGroupName = () => {\n    if (!editingGroupName.trim()) return;\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === editingGroupId) {\n          return {\n            ...group,\n            name: editingGroupName.trim()\n          };\n        }\n        return group;\n      });\n    });\n    setEditingGroupId(null);\n    setEditingGroupName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouping-sheet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-group-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newGroupName,\n        onChange: e => setNewGroupName(e.target.value),\n        placeholder: \"\\uC0C8 \\uADF8\\uB8F9 \\uC774\\uB984\",\n        className: \"new-group-input\",\n        onKeyDown: e => e.key === 'Enter' && addNewGroup()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-group-btn\",\n        onClick: addNewGroup,\n        disabled: !newGroupName.trim(),\n        children: \"\\uC0C8 \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouping-help\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"1. \\uADF8\\uB8F9 \\uD5E4\\uB354\\uB97C \\uD074\\uB9AD\\uD558\\uC5EC \\uADF8\\uB8F9\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694. 2. \\uBBF8\\uCC98\\uB9AC \\uD56D\\uBAA9\\uC744 \\uD074\\uB9AD\\uD558\\uBA74 \\uC120\\uD0DD\\uB41C \\uADF8\\uB8F9\\uC5D0 \\uCD94\\uAC00\\uB429\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"grouping-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: groups.map(group => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: `group-header ${selectedGroupId === group.id ? 'selected-group-header' : ''}`,\n              onClick: () => selectGroup(group.id),\n              children: editingGroupId === group.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-name-edit\",\n                onClick: e => e.stopPropagation(),\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editingGroupName,\n                  onChange: e => setEditingGroupName(e.target.value),\n                  onBlur: saveGroupName,\n                  onKeyDown: e => e.key === 'Enter' && saveGroupName(),\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"group-name\",\n                  onClick: e => startEditingGroupName(group, e),\n                  title: group.isDefault ? \"미처리 그룹명은 변경할 수 없습니다\" : \"클릭하여 그룹명 변경\",\n                  children: [group.name, \" (\", group.items.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), !group.isDefault && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-group-btn\",\n                  onClick: e => deleteGroup(group.id, e),\n                  title: \"\\uADF8\\uB8F9 \\uC0AD\\uC81C\",\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, group.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: groups.map(group => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `group-column ${selectedGroupId === group.id ? 'selected-group' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-items\",\n                children: [group.items.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `group-item ${selectedGroupId === 'unprocessed' && group.id !== 'unprocessed' || selectedGroupId !== 'unprocessed' && group.id === 'unprocessed' ? 'clickable' : ''}`,\n                  onClick: () => handleItemClick(value, group.id),\n                  children: value\n                }, `${group.id}-${value}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this)), group.items.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"empty-group-message\",\n                  children: group.id === 'unprocessed' ? '미처리 항목이 없습니다' : '미처리 항목을 클릭하여 추가하세요'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)\n            }, group.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupingSheet, \"mStQaHuvwdJl39xP4wigRy94vlc=\");\n_c = GroupingSheet;\nexport default GroupingSheet;\nvar _c;\n$RefreshReg$(_c, \"GroupingSheet\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GroupingSheet","segmentValues","_s","groups","setGroups","id","name","items","isDefault","valueGroups","setValueGroups","newGroupName","setNewGroupName","selectedGroupId","setSelectedGroupId","length","initialValueGroups","forEach","value","prevGroups","updatedGroups","unprocessedGroup","find","g","addNewGroup","trim","newGroupId","Date","now","newGroup","selectGroup","groupId","assignToGroup","currentGroupId","map","group","filter","item","handleItemClick","deleteGroup","e","stopPropagation","groupToDelete","editingGroupId","setEditingGroupId","editingGroupName","setEditingGroupName","startEditingGroupName","saveGroupName","className","children","type","onChange","target","placeholder","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onBlur","autoFocus","title","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupingSheet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GroupingSheet.css';\n\nconst GroupingSheet = ({ segmentValues = [] }) => {\n  // 그룹 상태 관리\n  const [groups, setGroups] = useState([\n    { id: 'unprocessed', name: '미처리', items: [], isDefault: true }\n  ]);\n  \n  // 값들의 그룹 할당 상태 관리\n  const [valueGroups, setValueGroups] = useState({});\n  \n  // 새 그룹명 입력 상태\n  const [newGroupName, setNewGroupName] = useState('');\n  \n  // 선택된 그룹 관리\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n  \n  // 컴포넌트 마운트시 미처리 그룹에 모든 분절값 추가\n  useEffect(() => {\n    if (segmentValues.length > 0) {\n      // 초기 상태에서 모든 값은 미처리 그룹에 할당\n      const initialValueGroups = {};\n      segmentValues.forEach(value => {\n        initialValueGroups[value] = 'unprocessed';\n      });\n      \n      setValueGroups(initialValueGroups);\n      \n      // 미처리 그룹에 값 할당\n      setGroups(prevGroups => {\n        const updatedGroups = [...prevGroups];\n        const unprocessedGroup = updatedGroups.find(g => g.id === 'unprocessed');\n        if (unprocessedGroup) {\n          unprocessedGroup.items = [...segmentValues];\n        }\n        return updatedGroups;\n      });\n    }\n  }, [segmentValues]);\n  \n  // 새 그룹 추가 함수\n  const addNewGroup = () => {\n    if (!newGroupName.trim()) return;\n    \n    const newGroupId = `group-${Date.now()}`;\n    const newGroup = {\n      id: newGroupId,\n      name: newGroupName.trim(),\n      items: [],\n      isDefault: false\n    };\n    \n    setGroups([...groups, newGroup]);\n    setNewGroupName('');\n    \n    // 새 그룹 추가 후 자동으로 선택\n    setSelectedGroupId(newGroupId);\n  };\n  \n  // 그룹 선택 함수\n  const selectGroup = (groupId) => {\n    setSelectedGroupId(groupId === selectedGroupId ? null : groupId);\n  };\n  \n  // 값을 그룹에 할당하는 함수\n  const assignToGroup = (value, groupId) => {\n    // 같은 그룹으로 이동이면 무시\n    if (valueGroups[value] === groupId) return;\n    \n    // 현재 할당된 그룹에서 제거\n    const currentGroupId = valueGroups[value];\n    if (currentGroupId) {\n      setGroups(prevGroups => {\n        return prevGroups.map(group => {\n          if (group.id === currentGroupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item !== value)\n            };\n          }\n          return group;\n        });\n      });\n    }\n    \n    // 새 그룹에 추가\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            items: [...group.items, value]\n          };\n        }\n        return group;\n      });\n    });\n    \n    // 값의 그룹 매핑 업데이트\n    setValueGroups({\n      ...valueGroups,\n      [value]: groupId\n    });\n  };\n  \n  // 아이템 클릭 핸들러\n  const handleItemClick = (value, currentGroupId) => {\n    // 선택된 그룹이 없으면 무시 (미처리 그룹이 아닌 다른 그룹의 아이템은 클릭할 수 없음)\n    if (!selectedGroupId || (currentGroupId !== 'unprocessed' && selectedGroupId !== 'unprocessed')) return;\n    \n    // 미처리 항목을 클릭한 경우, 선택된 그룹으로 이동\n    if (currentGroupId === 'unprocessed' && selectedGroupId !== 'unprocessed') {\n      assignToGroup(value, selectedGroupId);\n    }\n    // 그룹 항목을 클릭한 경우, 미처리로 이동 (미처리가 선택된 경우에만)\n    else if (currentGroupId !== 'unprocessed' && selectedGroupId === 'unprocessed') {\n      assignToGroup(value, 'unprocessed');\n    }\n  };\n  \n  // 그룹 삭제 함수\n  const deleteGroup = (groupId, e) => {\n    // 이벤트 전파 방지\n    e.stopPropagation();\n    \n    if (groupId === 'unprocessed') return; // 미처리 그룹은 삭제 불가\n    \n    // 해당 그룹에 있던 모든 값을 미처리로 이동\n    const groupToDelete = groups.find(g => g.id === groupId);\n    if (groupToDelete) {\n      groupToDelete.items.forEach(value => {\n        assignToGroup(value, 'unprocessed');\n      });\n    }\n    \n    // 그룹 삭제\n    setGroups(groups.filter(g => g.id !== groupId));\n    \n    // 삭제된 그룹이 선택된 그룹이었으면 선택 해제\n    if (selectedGroupId === groupId) {\n      setSelectedGroupId(null);\n    }\n  };\n  \n  // 그룹명 변경 함수\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  \n  const startEditingGroupName = (group, e) => {\n    // 이벤트 전파 방지 (그룹 선택과 충돌방지)\n    e.stopPropagation();\n    \n    if (group.isDefault) return; // 미처리 그룹명은 변경 불가\n    setEditingGroupId(group.id);\n    setEditingGroupName(group.name);\n  };\n  \n  const saveGroupName = () => {\n    if (!editingGroupName.trim()) return;\n    \n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === editingGroupId) {\n          return {\n            ...group,\n            name: editingGroupName.trim()\n          };\n        }\n        return group;\n      });\n    });\n    \n    setEditingGroupId(null);\n    setEditingGroupName('');\n  };\n  \n  return (\n    <div className=\"grouping-sheet\">\n      {/* 새 그룹 추가 영역 */}\n      <div className=\"add-group-area\">\n        <input\n          type=\"text\"\n          value={newGroupName}\n          onChange={(e) => setNewGroupName(e.target.value)}\n          placeholder=\"새 그룹 이름\"\n          className=\"new-group-input\"\n          onKeyDown={(e) => e.key === 'Enter' && addNewGroup()}\n        />\n        <button \n          className=\"add-group-btn\"\n          onClick={addNewGroup}\n          disabled={!newGroupName.trim()}\n        >\n          새 그룹 추가\n        </button>\n      </div>\n      \n      {/* 도움말 */}\n      <div className=\"grouping-help\">\n        <p>\n          1. 그룹 헤더를 클릭하여 그룹을 선택하세요. 2. 미처리 항목을 클릭하면 선택된 그룹에 추가됩니다.\n        </p>\n      </div>\n      \n      {/* 엑셀 시트 스타일의 테이블 */}\n      <div className=\"sheet-container\">\n        <table className=\"grouping-table\">\n          <thead>\n            <tr>\n              {groups.map(group => (\n                <th \n                  key={group.id} \n                  className={`group-header ${selectedGroupId === group.id ? 'selected-group-header' : ''}`}\n                  onClick={() => selectGroup(group.id)}\n                >\n                  {editingGroupId === group.id ? (\n                    <div className=\"group-name-edit\" onClick={(e) => e.stopPropagation()}>\n                      <input\n                        type=\"text\"\n                        value={editingGroupName}\n                        onChange={(e) => setEditingGroupName(e.target.value)}\n                        onBlur={saveGroupName}\n                        onKeyDown={(e) => e.key === 'Enter' && saveGroupName()}\n                        autoFocus\n                      />\n                    </div>\n                  ) : (\n                    <div className=\"group-title\">\n                      <span \n                        className=\"group-name\"\n                        onClick={(e) => startEditingGroupName(group, e)}\n                        title={group.isDefault ? \"미처리 그룹명은 변경할 수 없습니다\" : \"클릭하여 그룹명 변경\"}\n                      >\n                        {group.name} ({group.items.length})\n                      </span>\n                      {!group.isDefault && (\n                        <button \n                          className=\"delete-group-btn\"\n                          onClick={(e) => deleteGroup(group.id, e)}\n                          title=\"그룹 삭제\"\n                        >\n                          ✕\n                        </button>\n                      )}\n                    </div>\n                  )}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {groups.map(group => (\n                <td \n                  key={group.id}\n                  className={`group-column ${selectedGroupId === group.id ? 'selected-group' : ''}`}\n                >\n                  <div className=\"group-items\">\n                    {group.items.map(value => (\n                      <div \n                        key={`${group.id}-${value}`}\n                        className={`group-item ${(selectedGroupId === 'unprocessed' && group.id !== 'unprocessed') || (selectedGroupId !== 'unprocessed' && group.id === 'unprocessed') ? 'clickable' : ''}`}\n                        onClick={() => handleItemClick(value, group.id)}\n                      >\n                        {value}\n                      </div>\n                    ))}\n                    {group.items.length === 0 && (\n                      <div className=\"empty-group-message\">\n                        {group.id === 'unprocessed' ? \n                          '미처리 항목이 없습니다' : \n                          '미처리 항목을 클릭하여 추가하세요'}\n                      </div>\n                    )}\n                  </div>\n                </td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupingSheet; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}