{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupingSheet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GroupingSheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupingSheet = ({\n  segmentValues = []\n}) => {\n  _s();\n  // 기본 빈 그룹들 생성 (미처리 + 추가 빈 그룹들)\n  const [groups, setGroups] = useState([{\n    id: 'unprocessed',\n    name: '미처리',\n    items: [],\n    isDefault: true,\n    isEditable: false\n  }, {\n    id: 'group-1',\n    name: '그룹 1',\n    items: [],\n    isDefault: false,\n    isEditable: true\n  }, {\n    id: 'group-2',\n    name: '그룹 2',\n    items: [],\n    isDefault: false,\n    isEditable: true\n  }, {\n    id: 'group-3',\n    name: '그룹 3',\n    items: [],\n    isDefault: false,\n    isEditable: true\n  }]);\n\n  // 값들의 그룹 할당 상태 관리\n  const [valueGroups, setValueGroups] = useState({});\n\n  // 선택된 그룹 관리\n  const [selectedGroupId, setSelectedGroupId] = useState('group-1');\n\n  // 각 그룹별 정렬 상태 관리\n  const [sortStates, setSortStates] = useState({});\n\n  // 컴포넌트 마운트시 미처리 그룹에 모든 분절값 추가\n  useEffect(() => {\n    if (segmentValues.length > 0) {\n      // 초기 상태에서 모든 값은 미처리 그룹에 할당\n      const initialValueGroups = {};\n      segmentValues.forEach(value => {\n        initialValueGroups[value] = 'unprocessed';\n      });\n      setValueGroups(initialValueGroups);\n\n      // 미처리 그룹에 값 할당\n      setGroups(prevGroups => {\n        const updatedGroups = [...prevGroups];\n        const unprocessedGroup = updatedGroups.find(g => g.id === 'unprocessed');\n        if (unprocessedGroup) {\n          unprocessedGroup.items = [...segmentValues];\n        }\n        return updatedGroups;\n      });\n\n      // 각 그룹의 정렬 상태 초기화\n      const initialSortStates = {};\n      groups.forEach(group => {\n        initialSortStates[group.id] = {\n          type: 'none' // 'firstAsc', 'firstDesc', 'lastAsc', 'lastDesc'\n        };\n      });\n      setSortStates(initialSortStates);\n    }\n  }, [segmentValues]);\n\n  // 그룹 선택 함수\n  const selectGroup = groupId => {\n    if (groupId !== 'unprocessed') {\n      setSelectedGroupId(groupId);\n    }\n  };\n\n  // 값을 그룹에 할당하는 함수\n  const assignToGroup = (value, groupId) => {\n    // 같은 그룹으로 이동이면 무시\n    if (valueGroups[value] === groupId) return;\n\n    // 현재 할당된 그룹에서 제거\n    const currentGroupId = valueGroups[value];\n    if (currentGroupId) {\n      setGroups(prevGroups => {\n        return prevGroups.map(group => {\n          if (group.id === currentGroupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item !== value)\n            };\n          }\n          return group;\n        });\n      });\n    }\n\n    // 새 그룹에 추가\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            items: [...group.items, value]\n          };\n        }\n        return group;\n      });\n    });\n\n    // 값의 그룹 매핑 업데이트\n    setValueGroups({\n      ...valueGroups,\n      [value]: groupId\n    });\n  };\n\n  // 아이템 클릭 핸들러\n  const handleItemClick = (value, currentGroupId) => {\n    // 미처리 항목을 클릭한 경우, 선택된 그룹으로 이동\n    if (currentGroupId === 'unprocessed' && selectedGroupId !== 'unprocessed') {\n      assignToGroup(value, selectedGroupId);\n    }\n    // 다른 그룹의 항목을 클릭한 경우, 미처리로 되돌림\n    else if (currentGroupId !== 'unprocessed') {\n      assignToGroup(value, 'unprocessed');\n    }\n  };\n\n  // 그룹명 변경 함수\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  const startEditingGroupName = (group, e) => {\n    // 이벤트 전파 방지 (그룹 선택과 충돌방지)\n    e.stopPropagation();\n    if (!group.isEditable) return; // 수정 불가 그룹은 변경 불가\n    setEditingGroupId(group.id);\n    setEditingGroupName(group.name);\n  };\n  const saveGroupName = () => {\n    if (!editingGroupName.trim()) return;\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === editingGroupId) {\n          return {\n            ...group,\n            name: editingGroupName.trim()\n          };\n        }\n        return group;\n      });\n    });\n    setEditingGroupId(null);\n    setEditingGroupName('');\n  };\n\n  // 그룹 추가 함수\n  const addGroup = () => {\n    const newGroupId = `group-${Date.now()}`;\n    const newGroup = {\n      id: newGroupId,\n      name: `그룹 ${groups.length}`,\n      items: [],\n      isDefault: false,\n      isEditable: true\n    };\n    setGroups([...groups, newGroup]);\n\n    // 새 그룹의 정렬 상태 초기화\n    setSortStates(prevStates => ({\n      ...prevStates,\n      [newGroupId]: {\n        type: 'none'\n      }\n    }));\n  };\n\n  // 정렬 함수\n  const sortItems = (groupId, sortType) => {\n    setSortStates(prevStates => ({\n      ...prevStates,\n      [groupId]: {\n        type: sortType\n      }\n    }));\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          const sortedItems = [...group.items];\n          switch (sortType) {\n            case 'firstAsc':\n              sortedItems.sort((a, b) => a.localeCompare(b));\n              break;\n            case 'firstDesc':\n              sortedItems.sort((a, b) => b.localeCompare(a));\n              break;\n            case 'lastAsc':\n              sortedItems.sort((a, b) => {\n                const aLast = a.charAt(a.length - 1);\n                const bLast = b.charAt(b.length - 1);\n                return aLast.localeCompare(bLast) || a.localeCompare(b);\n              });\n              break;\n            case 'lastDesc':\n              sortedItems.sort((a, b) => {\n                const aLast = a.charAt(a.length - 1);\n                const bLast = b.charAt(b.length - 1);\n                return bLast.localeCompare(aLast) || b.localeCompare(a);\n              });\n              break;\n            default:\n              break;\n          }\n          return {\n            ...group,\n            items: sortedItems\n          };\n        }\n        return group;\n      });\n    });\n  };\n\n  // 현재 정렬 상태에 따른 아이콘 표시\n  const getSortIcon = (groupId, type) => {\n    var _sortStates$groupId;\n    const currentSort = (_sortStates$groupId = sortStates[groupId]) === null || _sortStates$groupId === void 0 ? void 0 : _sortStates$groupId.type;\n    return currentSort === type ? '✓' : '';\n  };\n\n  // 렌더링시 그룹 순서 보장 (미처리 항상 첫번째)\n  const orderedGroups = [...groups].sort((a, b) => {\n    if (a.id === 'unprocessed') return -1;\n    if (b.id === 'unprocessed') return 1;\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouping-sheet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouping-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-group-btn\",\n        onClick: addGroup,\n        children: \"\\uC0C8 \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouping-grid\",\n        children: orderedGroups.map(group => {\n          var _sortStates$group$id, _sortStates$group$id2, _sortStates$group$id3, _sortStates$group$id4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `group-header ${selectedGroupId === group.id ? 'selected-group-header' : ''} ${group.id === 'unprocessed' ? 'unprocessed-header' : ''}`,\n              onClick: () => selectGroup(group.id),\n              children: [editingGroupId === group.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-name-edit\",\n                onClick: e => e.stopPropagation(),\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editingGroupName,\n                  onChange: e => setEditingGroupName(e.target.value),\n                  onBlur: saveGroupName,\n                  onKeyDown: e => e.key === 'Enter' && saveGroupName(),\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"group-name\",\n                  onClick: e => startEditingGroupName(group, e),\n                  title: !group.isEditable ? \"이 그룹명은 변경할 수 없습니다\" : \"클릭하여 그룹명 변경\",\n                  children: [group.name, \" (\", group.items.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sort-buttons\",\n                onClick: e => e.stopPropagation(),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sort-options\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `sort-btn ${((_sortStates$group$id = sortStates[group.id]) === null || _sortStates$group$id === void 0 ? void 0 : _sortStates$group$id.type) === 'firstAsc' ? 'active' : ''}`,\n                    onClick: () => sortItems(group.id, 'firstAsc'),\n                    title: \"\\uC55E\\uAE00\\uC790\\uC21C A-Z\",\n                    children: [\"A\\u2192Z \", getSortIcon(group.id, 'firstAsc')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `sort-btn ${((_sortStates$group$id2 = sortStates[group.id]) === null || _sortStates$group$id2 === void 0 ? void 0 : _sortStates$group$id2.type) === 'firstDesc' ? 'active' : ''}`,\n                    onClick: () => sortItems(group.id, 'firstDesc'),\n                    title: \"\\uC55E\\uAE00\\uC790\\uC21C Z-A\",\n                    children: [\"Z\\u2192A \", getSortIcon(group.id, 'firstDesc')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `sort-btn ${((_sortStates$group$id3 = sortStates[group.id]) === null || _sortStates$group$id3 === void 0 ? void 0 : _sortStates$group$id3.type) === 'lastAsc' ? 'active' : ''}`,\n                    onClick: () => sortItems(group.id, 'lastAsc'),\n                    title: \"\\uB4B7\\uAE00\\uC790\\uC21C A-Z\",\n                    children: [\"\\uB05DA\\u2192Z \", getSortIcon(group.id, 'lastAsc')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `sort-btn ${((_sortStates$group$id4 = sortStates[group.id]) === null || _sortStates$group$id4 === void 0 ? void 0 : _sortStates$group$id4.type) === 'lastDesc' ? 'active' : ''}`,\n                    onClick: () => sortItems(group.id, 'lastDesc'),\n                    title: \"\\uB4B7\\uAE00\\uC790\\uC21C Z-A\",\n                    children: [\"\\uB05DZ\\u2192A \", getSortIcon(group.id, 'lastDesc')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `group-column ${selectedGroupId === group.id ? 'selected-group' : ''} ${group.id === 'unprocessed' ? 'unprocessed-column' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-items\",\n                children: [group.items.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `group-item ${group.id === 'unprocessed' || group.id !== 'unprocessed' ? 'clickable' : ''}`,\n                  onClick: () => handleItemClick(value, group.id),\n                  children: value\n                }, `${group.id}-${value}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this)), group.items.length === 0 && group.id !== 'unprocessed' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"empty-group-message\",\n                  children: \"\\uBBF8\\uCC98\\uB9AC \\uD56D\\uBAA9\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC774 \\uADF8\\uB8F9\\uC5D0 \\uCD94\\uAC00\\uD558\\uC138\\uC694\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, group.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupingSheet, \"5IAEgmskKLHqbgxEOjOyBNR8130=\");\n_c = GroupingSheet;\nexport default GroupingSheet;\nvar _c;\n$RefreshReg$(_c, \"GroupingSheet\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GroupingSheet","segmentValues","_s","groups","setGroups","id","name","items","isDefault","isEditable","valueGroups","setValueGroups","selectedGroupId","setSelectedGroupId","sortStates","setSortStates","length","initialValueGroups","forEach","value","prevGroups","updatedGroups","unprocessedGroup","find","g","initialSortStates","group","type","selectGroup","groupId","assignToGroup","currentGroupId","map","filter","item","handleItemClick","editingGroupId","setEditingGroupId","editingGroupName","setEditingGroupName","startEditingGroupName","e","stopPropagation","saveGroupName","trim","addGroup","newGroupId","Date","now","newGroup","prevStates","sortItems","sortType","sortedItems","sort","a","b","localeCompare","aLast","charAt","bLast","getSortIcon","_sortStates$groupId","currentSort","orderedGroups","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_sortStates$group$id","_sortStates$group$id2","_sortStates$group$id3","_sortStates$group$id4","onChange","target","onBlur","onKeyDown","key","autoFocus","title","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupingSheet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GroupingSheet.css';\n\nconst GroupingSheet = ({ segmentValues = [] }) => {\n  // 기본 빈 그룹들 생성 (미처리 + 추가 빈 그룹들)\n  const [groups, setGroups] = useState([\n    { id: 'unprocessed', name: '미처리', items: [], isDefault: true, isEditable: false },\n    { id: 'group-1', name: '그룹 1', items: [], isDefault: false, isEditable: true },\n    { id: 'group-2', name: '그룹 2', items: [], isDefault: false, isEditable: true },\n    { id: 'group-3', name: '그룹 3', items: [], isDefault: false, isEditable: true }\n  ]);\n  \n  // 값들의 그룹 할당 상태 관리\n  const [valueGroups, setValueGroups] = useState({});\n  \n  // 선택된 그룹 관리\n  const [selectedGroupId, setSelectedGroupId] = useState('group-1');\n  \n  // 각 그룹별 정렬 상태 관리\n  const [sortStates, setSortStates] = useState({});\n  \n  // 컴포넌트 마운트시 미처리 그룹에 모든 분절값 추가\n  useEffect(() => {\n    if (segmentValues.length > 0) {\n      // 초기 상태에서 모든 값은 미처리 그룹에 할당\n      const initialValueGroups = {};\n      segmentValues.forEach(value => {\n        initialValueGroups[value] = 'unprocessed';\n      });\n      \n      setValueGroups(initialValueGroups);\n      \n      // 미처리 그룹에 값 할당\n      setGroups(prevGroups => {\n        const updatedGroups = [...prevGroups];\n        const unprocessedGroup = updatedGroups.find(g => g.id === 'unprocessed');\n        if (unprocessedGroup) {\n          unprocessedGroup.items = [...segmentValues];\n        }\n        return updatedGroups;\n      });\n      \n      // 각 그룹의 정렬 상태 초기화\n      const initialSortStates = {};\n      groups.forEach(group => {\n        initialSortStates[group.id] = {\n          type: 'none', // 'firstAsc', 'firstDesc', 'lastAsc', 'lastDesc'\n        };\n      });\n      setSortStates(initialSortStates);\n    }\n  }, [segmentValues]);\n  \n  // 그룹 선택 함수\n  const selectGroup = (groupId) => {\n    if (groupId !== 'unprocessed') {\n      setSelectedGroupId(groupId);\n    }\n  };\n  \n  // 값을 그룹에 할당하는 함수\n  const assignToGroup = (value, groupId) => {\n    // 같은 그룹으로 이동이면 무시\n    if (valueGroups[value] === groupId) return;\n    \n    // 현재 할당된 그룹에서 제거\n    const currentGroupId = valueGroups[value];\n    if (currentGroupId) {\n      setGroups(prevGroups => {\n        return prevGroups.map(group => {\n          if (group.id === currentGroupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item !== value)\n            };\n          }\n          return group;\n        });\n      });\n    }\n    \n    // 새 그룹에 추가\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            items: [...group.items, value]\n          };\n        }\n        return group;\n      });\n    });\n    \n    // 값의 그룹 매핑 업데이트\n    setValueGroups({\n      ...valueGroups,\n      [value]: groupId\n    });\n  };\n  \n  // 아이템 클릭 핸들러\n  const handleItemClick = (value, currentGroupId) => {\n    // 미처리 항목을 클릭한 경우, 선택된 그룹으로 이동\n    if (currentGroupId === 'unprocessed' && selectedGroupId !== 'unprocessed') {\n      assignToGroup(value, selectedGroupId);\n    }\n    // 다른 그룹의 항목을 클릭한 경우, 미처리로 되돌림\n    else if (currentGroupId !== 'unprocessed') {\n      assignToGroup(value, 'unprocessed');\n    }\n  };\n  \n  // 그룹명 변경 함수\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  \n  const startEditingGroupName = (group, e) => {\n    // 이벤트 전파 방지 (그룹 선택과 충돌방지)\n    e.stopPropagation();\n    \n    if (!group.isEditable) return; // 수정 불가 그룹은 변경 불가\n    setEditingGroupId(group.id);\n    setEditingGroupName(group.name);\n  };\n  \n  const saveGroupName = () => {\n    if (!editingGroupName.trim()) return;\n    \n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === editingGroupId) {\n          return {\n            ...group,\n            name: editingGroupName.trim()\n          };\n        }\n        return group;\n      });\n    });\n    \n    setEditingGroupId(null);\n    setEditingGroupName('');\n  };\n  \n  // 그룹 추가 함수\n  const addGroup = () => {\n    const newGroupId = `group-${Date.now()}`;\n    const newGroup = {\n      id: newGroupId,\n      name: `그룹 ${groups.length}`,\n      items: [],\n      isDefault: false,\n      isEditable: true\n    };\n    \n    setGroups([...groups, newGroup]);\n    \n    // 새 그룹의 정렬 상태 초기화\n    setSortStates(prevStates => ({\n      ...prevStates,\n      [newGroupId]: { type: 'none' }\n    }));\n  };\n  \n  // 정렬 함수\n  const sortItems = (groupId, sortType) => {\n    setSortStates(prevStates => ({\n      ...prevStates,\n      [groupId]: { type: sortType }\n    }));\n    \n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          const sortedItems = [...group.items];\n          \n          switch (sortType) {\n            case 'firstAsc':\n              sortedItems.sort((a, b) => a.localeCompare(b));\n              break;\n            case 'firstDesc':\n              sortedItems.sort((a, b) => b.localeCompare(a));\n              break;\n            case 'lastAsc':\n              sortedItems.sort((a, b) => {\n                const aLast = a.charAt(a.length - 1);\n                const bLast = b.charAt(b.length - 1);\n                return aLast.localeCompare(bLast) || a.localeCompare(b);\n              });\n              break;\n            case 'lastDesc':\n              sortedItems.sort((a, b) => {\n                const aLast = a.charAt(a.length - 1);\n                const bLast = b.charAt(b.length - 1);\n                return bLast.localeCompare(aLast) || b.localeCompare(a);\n              });\n              break;\n            default:\n              break;\n          }\n          \n          return {\n            ...group,\n            items: sortedItems\n          };\n        }\n        return group;\n      });\n    });\n  };\n  \n  // 현재 정렬 상태에 따른 아이콘 표시\n  const getSortIcon = (groupId, type) => {\n    const currentSort = sortStates[groupId]?.type;\n    return currentSort === type ? '✓' : '';\n  };\n  \n  // 렌더링시 그룹 순서 보장 (미처리 항상 첫번째)\n  const orderedGroups = [...groups].sort((a, b) => {\n    if (a.id === 'unprocessed') return -1;\n    if (b.id === 'unprocessed') return 1;\n    return 0;\n  });\n  \n  return (\n    <div className=\"grouping-sheet\">\n      \n      {/* 버튼 영역 */}\n      <div className=\"grouping-actions\">\n        <button className=\"add-group-btn\" onClick={addGroup}>새 그룹 추가</button>\n      </div>\n      \n      {/* 그리드 컨테이너로 변경 */}\n      <div className=\"sheet-container\">\n        <div className=\"grouping-grid\">\n          {/* 그룹별 열 생성 (미처리는 항상 첫번째) */}\n          {orderedGroups.map(group => (\n            <div key={group.id} className=\"group-col\">\n              {/* 그룹 헤더 */}\n              <div \n                className={`group-header ${selectedGroupId === group.id ? 'selected-group-header' : ''} ${group.id === 'unprocessed' ? 'unprocessed-header' : ''}`}\n                onClick={() => selectGroup(group.id)}\n              >\n                {editingGroupId === group.id ? (\n                  <div className=\"group-name-edit\" onClick={(e) => e.stopPropagation()}>\n                    <input\n                      type=\"text\"\n                      value={editingGroupName}\n                      onChange={(e) => setEditingGroupName(e.target.value)}\n                      onBlur={saveGroupName}\n                      onKeyDown={(e) => e.key === 'Enter' && saveGroupName()}\n                      autoFocus\n                    />\n                  </div>\n                ) : (\n                  <div className=\"group-title\">\n                    <span \n                      className=\"group-name\"\n                      onClick={(e) => startEditingGroupName(group, e)}\n                      title={!group.isEditable ? \"이 그룹명은 변경할 수 없습니다\" : \"클릭하여 그룹명 변경\"}\n                    >\n                      {group.name} ({group.items.length})\n                    </span>\n                  </div>\n                )}\n                \n                {/* 정렬 버튼 */}\n                <div className=\"sort-buttons\" onClick={(e) => e.stopPropagation()}>\n                  <div className=\"sort-options\">\n                    <button \n                      className={`sort-btn ${sortStates[group.id]?.type === 'firstAsc' ? 'active' : ''}`}\n                      onClick={() => sortItems(group.id, 'firstAsc')}\n                      title=\"앞글자순 A-Z\"\n                    >\n                      A→Z {getSortIcon(group.id, 'firstAsc')}\n                    </button>\n                    <button \n                      className={`sort-btn ${sortStates[group.id]?.type === 'firstDesc' ? 'active' : ''}`}\n                      onClick={() => sortItems(group.id, 'firstDesc')}\n                      title=\"앞글자순 Z-A\"\n                    >\n                      Z→A {getSortIcon(group.id, 'firstDesc')}\n                    </button>\n                    <button \n                      className={`sort-btn ${sortStates[group.id]?.type === 'lastAsc' ? 'active' : ''}`}\n                      onClick={() => sortItems(group.id, 'lastAsc')}\n                      title=\"뒷글자순 A-Z\"\n                    >\n                      끝A→Z {getSortIcon(group.id, 'lastAsc')}\n                    </button>\n                    <button \n                      className={`sort-btn ${sortStates[group.id]?.type === 'lastDesc' ? 'active' : ''}`}\n                      onClick={() => sortItems(group.id, 'lastDesc')}\n                      title=\"뒷글자순 Z-A\"\n                    >\n                      끝Z→A {getSortIcon(group.id, 'lastDesc')}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              {/* 그룹 콘텐츠 */}\n              <div \n                className={`group-column ${selectedGroupId === group.id ? 'selected-group' : ''} ${group.id === 'unprocessed' ? 'unprocessed-column' : ''}`}\n              >\n                <div className=\"group-items\">\n                  {group.items.map(value => (\n                    <div \n                      key={`${group.id}-${value}`}\n                      className={`group-item ${(group.id === 'unprocessed' || group.id !== 'unprocessed') ? 'clickable' : ''}`}\n                      onClick={() => handleItemClick(value, group.id)}\n                    >\n                      {value}\n                    </div>\n                  ))}\n                  {group.items.length === 0 && group.id !== 'unprocessed' && (\n                    <div className=\"empty-group-message\">\n                      미처리 항목을 클릭하여 이 그룹에 추가하세요\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupingSheet; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}