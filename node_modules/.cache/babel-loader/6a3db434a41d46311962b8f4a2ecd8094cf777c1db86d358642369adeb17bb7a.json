{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/FileExplorerColumn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FileExplorerColumn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorerColumn = () => {\n  _s();\n  const [files, setFiles] = useState([{\n    id: '1',\n    name: 'Documents',\n    type: 'folder',\n    isOpen: true,\n    children: [{\n      id: '2',\n      name: 'Report.pdf',\n      type: 'file'\n    }, {\n      id: '3',\n      name: 'Data.xlsx',\n      type: 'file'\n    }, {\n      id: '4',\n      name: 'Projects',\n      type: 'folder',\n      isOpen: false,\n      children: [{\n        id: '5',\n        name: 'Project A',\n        type: 'file'\n      }, {\n        id: '6',\n        name: 'Project B',\n        type: 'file'\n      }]\n    }]\n  }, {\n    id: '7',\n    name: 'Images',\n    type: 'folder',\n    isOpen: false,\n    children: [{\n      id: '8',\n      name: 'profile.jpg',\n      type: 'file'\n    }, {\n      id: '9',\n      name: 'background.png',\n      type: 'file'\n    }]\n  }]);\n  const toggleFolder = id => {\n    setFiles(prevFiles => {\n      const updateNode = nodes => {\n        return nodes.map(node => {\n          if (node.id === id) {\n            return {\n              ...node,\n              isOpen: !node.isOpen\n            };\n          }\n          if (node.children) {\n            return {\n              ...node,\n              children: updateNode(node.children)\n            };\n          }\n          return node;\n        });\n      };\n      return updateNode(prevFiles);\n    });\n  };\n  const renderTree = nodes => {\n    return nodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tree-item ${node.type}`,\n        onClick: () => node.type === 'folder' && toggleFolder(node.id),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon\",\n          children: node.type === 'folder' ? node.isOpen ? 'üìÇ' : 'üìÅ' : 'üìÑ'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: node.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), node.type === 'folder' && node.isOpen && node.children && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-children\",\n        children: renderTree(node.children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column file-explorer-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"File Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-view\",\n      children: renderTree(files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(FileExplorerColumn, \"y6lsQCO2Kcz1aiFCkBZW2bZvG6Y=\");\n_c = FileExplorerColumn;\nexport default FileExplorerColumn;\nvar _c;\n$RefreshReg$(_c, \"FileExplorerColumn\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileExplorerColumn","_s","files","setFiles","id","name","type","isOpen","children","toggleFolder","prevFiles","updateNode","nodes","map","node","renderTree","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/FileExplorerColumn.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FileExplorerColumn.css';\n\nconst FileExplorerColumn = () => {\n  const [files, setFiles] = useState([\n    {\n      id: '1',\n      name: 'Documents',\n      type: 'folder',\n      isOpen: true,\n      children: [\n        { id: '2', name: 'Report.pdf', type: 'file' },\n        { id: '3', name: 'Data.xlsx', type: 'file' },\n        {\n          id: '4',\n          name: 'Projects',\n          type: 'folder',\n          isOpen: false,\n          children: [\n            { id: '5', name: 'Project A', type: 'file' },\n            { id: '6', name: 'Project B', type: 'file' }\n          ]\n        }\n      ]\n    },\n    {\n      id: '7',\n      name: 'Images',\n      type: 'folder',\n      isOpen: false,\n      children: [\n        { id: '8', name: 'profile.jpg', type: 'file' },\n        { id: '9', name: 'background.png', type: 'file' }\n      ]\n    }\n  ]);\n\n  const toggleFolder = (id) => {\n    setFiles(prevFiles => {\n      const updateNode = (nodes) => {\n        return nodes.map(node => {\n          if (node.id === id) {\n            return { ...node, isOpen: !node.isOpen };\n          }\n          if (node.children) {\n            return { ...node, children: updateNode(node.children) };\n          }\n          return node;\n        });\n      };\n      return updateNode(prevFiles);\n    });\n  };\n\n  const renderTree = (nodes) => {\n    return nodes.map(node => (\n      <div key={node.id} className=\"tree-node\">\n        <div \n          className={`tree-item ${node.type}`}\n          onClick={() => node.type === 'folder' && toggleFolder(node.id)}\n        >\n          <span className=\"icon\">\n            {node.type === 'folder' ? (node.isOpen ? 'üìÇ' : 'üìÅ') : 'üìÑ'}\n          </span>\n          <span className=\"name\">{node.name}</span>\n        </div>\n        {node.type === 'folder' && node.isOpen && node.children && (\n          <div className=\"tree-children\">\n            {renderTree(node.children)}\n          </div>\n        )}\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"column file-explorer-column\">\n      <h3>File Explorer</h3>\n      <div className=\"search-box\">\n        <input type=\"text\" placeholder=\"Search files...\" />\n      </div>\n      <div className=\"tree-view\">\n        {renderTree(files)}\n      </div>\n    </div>\n  );\n};\n\nexport default FileExplorerColumn; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}