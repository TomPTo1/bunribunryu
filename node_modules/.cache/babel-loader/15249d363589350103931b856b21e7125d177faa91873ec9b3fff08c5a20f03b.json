{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport HeaderList from './components/HeaderList';\nimport HeaderSimilarityList from './components/HeaderSimilarityList';\nimport HeaderCombinationList from './components/HeaderCombinationList';\nimport HeaderCombinationTextList from './components/HeaderCombinationTextList';\nimport PathNavigation from './components/PathNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedChannel, setSelectedChannel] = useState(null);\n  const [selectedHeader, setSelectedHeader] = useState(null);\n  const [selectedCombination, setSelectedCombination] = useState(null);\n  const [similarityGroups, setSimilarityGroups] = useState([]);\n  const [viewMode, setViewMode] = useState('edit'); // 'edit' or 'browse'\n\n  const handleChannelSelect = channel => {\n    setSelectedChannel(channel);\n    setSelectedHeader(null); // Reset header selection when changing channel\n    setSelectedCombination(null); // Reset combination selection\n  };\n  const handleHeaderSelect = header => {\n    setSelectedHeader(header);\n    setSelectedCombination(null); // Reset combination selection when changing header\n  };\n  const handleCombinationSelect = combination => {\n    setSelectedCombination(combination);\n  };\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n  };\n  const handleSimilarityGroupUpdate = (group, representative) => {\n    if (group.length > 0) {\n      // Check if we already have a group with this representative\n      const existingGroupIndex = similarityGroups.findIndex(g => g.representative === representative);\n      if (existingGroupIndex >= 0) {\n        // Update existing group\n        const updatedGroups = [...similarityGroups];\n        updatedGroups[existingGroupIndex] = {\n          items: group,\n          representative: representative\n        };\n        setSimilarityGroups(updatedGroups);\n        console.log('유사군 업데이트됨:', updatedGroups);\n      } else {\n        // Add new group\n        const newGroups = [...similarityGroups, {\n          items: group,\n          representative: representative\n        }];\n        setSimilarityGroups(newGroups);\n        console.log('새 유사군 추가됨:', newGroups);\n      }\n    }\n  };\n  const handleRemoveGroup = groupIndex => {\n    const updatedGroups = similarityGroups.filter((_, index) => index !== groupIndex);\n    setSimilarityGroups(updatedGroups);\n    console.log('유사군 삭제됨:', updatedGroups);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-content\",\n      children: [/*#__PURE__*/_jsxDEV(PathNavigation, {\n        selectedChannel: selectedChannel,\n        selectedHeader: selectedHeader,\n        selectedCombination: selectedCombination,\n        onChannelSelect: handleChannelSelect,\n        onHeaderSelect: handleHeaderSelect,\n        onCombinationSelect: handleCombinationSelect,\n        viewMode: viewMode,\n        onViewModeChange: handleViewModeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), viewMode === 'edit' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns-container\",\n        children: [/*#__PURE__*/_jsxDEV(HeaderList, {\n          channel: selectedChannel,\n          onHeaderSelect: handleHeaderSelect,\n          selectedHeader: selectedHeader,\n          similarityGroups: similarityGroups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HeaderSimilarityList, {\n          channel: selectedChannel,\n          selectedHeader: selectedHeader,\n          onSimilarityGroupUpdate: handleSimilarityGroupUpdate,\n          groups: similarityGroups,\n          onRemoveGroup: handleRemoveGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HeaderCombinationList, {\n          channel: selectedChannel,\n          selectedHeader: selectedHeader,\n          onCombinationSelect: handleCombinationSelect,\n          selectedCombination: selectedCombination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HeaderCombinationTextList, {\n          channel: selectedChannel,\n          selectedCombination: selectedCombination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), viewMode === 'browse' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"browse-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AkdxCwiFwktcuWDTyGWA+AKMokM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","HeaderList","HeaderSimilarityList","HeaderCombinationList","HeaderCombinationTextList","PathNavigation","jsxDEV","_jsxDEV","App","_s","selectedChannel","setSelectedChannel","selectedHeader","setSelectedHeader","selectedCombination","setSelectedCombination","similarityGroups","setSimilarityGroups","viewMode","setViewMode","handleChannelSelect","channel","handleHeaderSelect","header","handleCombinationSelect","combination","handleViewModeChange","mode","handleSimilarityGroupUpdate","group","representative","length","existingGroupIndex","findIndex","g","updatedGroups","items","console","log","newGroups","handleRemoveGroup","groupIndex","filter","_","index","className","children","onChannelSelect","onHeaderSelect","onCombinationSelect","onViewModeChange","fileName","_jsxFileName","lineNumber","columnNumber","onSimilarityGroupUpdate","groups","onRemoveGroup","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport HeaderList from './components/HeaderList';\nimport HeaderSimilarityList from './components/HeaderSimilarityList';\nimport HeaderCombinationList from './components/HeaderCombinationList';\nimport HeaderCombinationTextList from './components/HeaderCombinationTextList';\nimport PathNavigation from './components/PathNavigation';\n\nfunction App() {\n  const [selectedChannel, setSelectedChannel] = useState(null);\n  const [selectedHeader, setSelectedHeader] = useState(null);\n  const [selectedCombination, setSelectedCombination] = useState(null);\n  const [similarityGroups, setSimilarityGroups] = useState([]);\n  const [viewMode, setViewMode] = useState('edit'); // 'edit' or 'browse'\n\n  const handleChannelSelect = (channel) => {\n    setSelectedChannel(channel);\n    setSelectedHeader(null); // Reset header selection when changing channel\n    setSelectedCombination(null); // Reset combination selection\n  };\n\n  const handleHeaderSelect = (header) => {\n    setSelectedHeader(header);\n    setSelectedCombination(null); // Reset combination selection when changing header\n  };\n\n  const handleCombinationSelect = (combination) => {\n    setSelectedCombination(combination);\n  };\n\n  const handleViewModeChange = (mode) => {\n    setViewMode(mode);\n  };\n\n  const handleSimilarityGroupUpdate = (group, representative) => {\n    if (group.length > 0) {\n      // Check if we already have a group with this representative\n      const existingGroupIndex = similarityGroups.findIndex(\n        g => g.representative === representative\n      );\n\n      if (existingGroupIndex >= 0) {\n        // Update existing group\n        const updatedGroups = [...similarityGroups];\n        updatedGroups[existingGroupIndex] = { \n          items: group, \n          representative: representative \n        };\n        setSimilarityGroups(updatedGroups);\n        console.log('유사군 업데이트됨:', updatedGroups);\n      } else {\n        // Add new group\n        const newGroups = [\n          ...similarityGroups, \n          { \n            items: group, \n            representative: representative \n          }\n        ];\n        setSimilarityGroups(newGroups);\n        console.log('새 유사군 추가됨:', newGroups);\n      }\n    }\n  };\n\n  const handleRemoveGroup = (groupIndex) => {\n    const updatedGroups = similarityGroups.filter((_, index) => index !== groupIndex);\n    setSimilarityGroups(updatedGroups);\n    console.log('유사군 삭제됨:', updatedGroups);\n  };\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-content\">\n        <PathNavigation \n          selectedChannel={selectedChannel}\n          selectedHeader={selectedHeader}\n          selectedCombination={selectedCombination}\n          onChannelSelect={handleChannelSelect}\n          onHeaderSelect={handleHeaderSelect}\n          onCombinationSelect={handleCombinationSelect}\n          viewMode={viewMode}\n          onViewModeChange={handleViewModeChange}\n        />\n        {viewMode === 'edit' && (\n          <div className=\"columns-container\">\n            <HeaderList \n              channel={selectedChannel} \n              onHeaderSelect={handleHeaderSelect} \n              selectedHeader={selectedHeader}\n              similarityGroups={similarityGroups}\n            />\n            <HeaderSimilarityList \n              channel={selectedChannel} \n              selectedHeader={selectedHeader}\n              onSimilarityGroupUpdate={handleSimilarityGroupUpdate}\n              groups={similarityGroups}\n              onRemoveGroup={handleRemoveGroup}\n            />\n            <HeaderCombinationList \n              channel={selectedChannel} \n              selectedHeader={selectedHeader}\n              onCombinationSelect={handleCombinationSelect}\n              selectedCombination={selectedCombination}\n            />\n            <HeaderCombinationTextList \n              channel={selectedChannel} \n              selectedCombination={selectedCombination} \n            />\n          </div>\n        )}\n        {viewMode === 'browse' && (\n          <div className=\"browse-container\">\n            {/* Empty container for browse mode */}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}