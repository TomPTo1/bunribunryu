{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupPanel.js\";\nimport React from 'react';\nimport './SeparationClassifier.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupPanel = ({\n  groupData\n}) => {\n  if (!groupData || !groupData.substrings || !groupData.groups) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\uADF8\\uB8F9\\uD654\\uB41C \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 부분문자열로 그룹화된 항목들을 트리뷰 형태로 표시\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uBD80\\uBD84\\uBB38\\uC790\\uC5F4 \\uADF8\\uB8F9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-view\",\n      children: [groupData.ungrouped && groupData.ungrouped.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-group-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"group-name\",\n            children: \"\\uADF8\\uB8F9\\uD654\\uB418\\uC9C0 \\uC54A\\uC74C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"group-count\",\n            children: [\"(\", groupData.ungrouped.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tree-items\",\n          children: groupData.ungrouped.map((value, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"tree-item\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value-tag\",\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), groupData.substrings.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-group-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"group-name\",\n            children: item.substring\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"group-count\",\n            children: [\"(\", item.count, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tree-items\",\n          children: groupData.groups[item.substring] && groupData.groups[item.substring].map((value, valueIdx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"tree-item\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value-tag\",\n              children: value.includes(item.substring) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [value.indexOf(item.substring) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value-prefix\",\n                  children: value.substring(0, value.indexOf(item.substring))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value-highlight\",\n                  children: item.substring\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 25\n                }, this), value.indexOf(item.substring) + item.substring.length < value.length && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value-suffix\",\n                  children: value.substring(value.indexOf(item.substring) + item.substring.length)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true) : value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)\n          }, valueIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = GroupPanel;\nexport default GroupPanel;\nvar _c;\n$RefreshReg$(_c, \"GroupPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupPanel","groupData","substrings","groups","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ungrouped","length","map","value","idx","item","substring","count","valueIdx","includes","indexOf","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupPanel.js"],"sourcesContent":["import React from 'react';\nimport './SeparationClassifier.css';\n\nconst GroupPanel = ({ groupData }) => {\n  if (!groupData || !groupData.substrings || !groupData.groups) {\n    return <div className=\"no-data\">그룹화된 데이터가 없습니다</div>;\n  }\n  \n  // 부분문자열로 그룹화된 항목들을 트리뷰 형태로 표시\n  return (\n    <div className=\"group-panel\">\n      <h3>부분문자열 그룹</h3>\n      \n      <div className=\"tree-view\">\n        {/* 그룹화되지 않은 항목 */}\n        {groupData.ungrouped && groupData.ungrouped.length > 0 && (\n          <div className=\"tree-group\">\n            <div className=\"tree-group-header\">\n              <span className=\"group-name\">그룹화되지 않음</span>\n              <span className=\"group-count\">({groupData.ungrouped.length})</span>\n            </div>\n            <ul className=\"tree-items\">\n              {groupData.ungrouped.map((value, idx) => (\n                <li key={idx} className=\"tree-item\">\n                  <span className=\"value-tag\">{value}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        \n        {/* 부분문자열로 그룹화된 항목들 */}\n        {groupData.substrings.map((item, idx) => (\n          <div key={idx} className=\"tree-group\">\n            <div className=\"tree-group-header\">\n              <span className=\"group-name\">{item.substring}</span>\n              <span className=\"group-count\">({item.count})</span>\n            </div>\n            <ul className=\"tree-items\">\n              {groupData.groups[item.substring] && groupData.groups[item.substring].map((value, valueIdx) => (\n                <li key={valueIdx} className=\"tree-item\">\n                  <span className=\"value-tag\">\n                    {/* 부분문자열을 강조 표시 */}\n                    {value.includes(item.substring) ? (\n                      <>\n                        {value.indexOf(item.substring) > 0 && (\n                          <span className=\"value-prefix\">\n                            {value.substring(0, value.indexOf(item.substring))}\n                          </span>\n                        )}\n                        <span className=\"value-highlight\">\n                          {item.substring}\n                        </span>\n                        {value.indexOf(item.substring) + item.substring.length < value.length && (\n                          <span className=\"value-suffix\">\n                            {value.substring(value.indexOf(item.substring) + item.substring.length)}\n                          </span>\n                        )}\n                      </>\n                    ) : value}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GroupPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}