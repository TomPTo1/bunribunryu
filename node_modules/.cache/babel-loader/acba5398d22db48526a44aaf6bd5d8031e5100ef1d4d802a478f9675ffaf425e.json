{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderCombinationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { fetchHeaderCombinationList } from '../services/api';\nimport MiningView from './MiningView';\nimport './Column.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderCombinationList = ({\n  channel,\n  selectedHeader,\n  onCombinationSelect,\n  selectedCombination,\n  onHeaderSearch,\n  onHeaderSimilarityRequest\n}) => {\n  _s();\n  const [combinationHeaders, setCombinationHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('combination'); // 'combination' or 'mining'\n  const [testMode, setTestMode] = useState(false); // Add test mode state\n\n  // New state for filtering and sorting\n  const [uniqueItems, setUniqueItems] = useState([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [excludedFilters, setExcludedFilters] = useState([]);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n  useEffect(() => {\n    const getCombinationHeaders = async () => {\n      // Test mode can work without channel or header selection\n      if (!testMode && (!channel || !selectedHeader)) return;\n      setLoading(true);\n      try {\n        if (testMode) {\n          // Use sample data in test mode\n          const response = await import('../sample_data/header_combination.json');\n          console.log('Using sample data for combination headers:', response);\n          setCombinationHeaders(response.list || []);\n        } else if (channel && selectedHeader) {\n          // Use API in normal mode only if channel and header are selected\n          const headers = Array.isArray(selectedHeader) ? selectedHeader : [selectedHeader];\n          const response = await fetchHeaderCombinationList(channel, headers);\n          console.log('Combination headers response:', response);\n          setCombinationHeaders(response.list || []);\n        } else {\n          // Clear data if test mode is turned off and no channel/header is selected\n          setCombinationHeaders([]);\n        }\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCombinationHeaders();\n  }, [channel, selectedHeader, testMode]);\n\n  // Extract unique items and count their frequency when combinationHeaders changes\n  useEffect(() => {\n    if (combinationHeaders.length === 0) {\n      setUniqueItems([]);\n      return;\n    }\n    const itemFrequency = {};\n\n    // Count frequency of each unique item\n    combinationHeaders.forEach(item => {\n      if (!item.header_group) return;\n      const headers = item.header_group.split('|');\n      headers.forEach(header => {\n        if (header) {\n          if (itemFrequency[header]) {\n            itemFrequency[header]++;\n          } else {\n            itemFrequency[header] = 1;\n          }\n        }\n      });\n    });\n\n    // Convert to array and sort by frequency (descending)\n    const sortedItems = Object.entries(itemFrequency).map(([name, count]) => ({\n      name,\n      count\n    })).sort((a, b) => b.count - a.count);\n    setUniqueItems(sortedItems);\n  }, [combinationHeaders]);\n  const handleCombinationClick = combination => {\n    if (onCombinationSelect) {\n      onCombinationSelect(combination);\n    }\n  };\n\n  // Handle right-click on tag to search and get similarity\n  const handleTagRightClick = (e, header) => {\n    e.preventDefault(); // Prevent default context menu\n    e.stopPropagation(); // Don't trigger parent's click\n\n    // Call parent handlers if they exist\n    if (onHeaderSearch) {\n      onHeaderSearch(header);\n    }\n    if (onHeaderSimilarityRequest) {\n      onHeaderSimilarityRequest(header);\n    }\n  };\n\n  // Toggle filter specifically for clicking tags in the combination list items\n  // This is a simpler version that only toggles between active and not active\n  const toggleItemFilter = item => {\n    // If already in active filters, remove it\n    if (activeFilters.includes(item)) {\n      setActiveFilters(activeFilters.filter(filter => filter !== item));\n    }\n    // If in excluded filters, remove from excluded first\n    else if (excludedFilters.includes(item)) {\n      setExcludedFilters(excludedFilters.filter(filter => filter !== item));\n      // And then add to active filters\n      setActiveFilters([...activeFilters, item]);\n    }\n    // If not in any filters, add to active\n    else {\n      setActiveFilters([...activeFilters, item]);\n    }\n  };\n\n  // Reset all filters\n  const resetFilters = () => {\n    setActiveFilters([]);\n    setExcludedFilters([]);\n  };\n\n  // Function to render header_group as tags\n  const renderHeaderGroupAsTags = headerGroup => {\n    if (!headerGroup) return null;\n    const headers = headerGroup.split('|');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-tags\",\n      children: headers.map((header, index) => {\n        const isActive = activeFilters.includes(header);\n        const isExcluded = excludedFilters.includes(header);\n        const className = `similarity-tag ${isActive ? 'active' : ''} ${isExcluded ? 'filtered-out' : ''}`;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: className,\n          onClick: e => {\n            e.stopPropagation(); // Don't trigger parent's click\n            toggleItemFilter(header); // Use the simpler toggle for combination list\n          },\n          onContextMenu: e => {\n            handleTagRightClick(e, header);\n          },\n          children: header\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  };\n  const toggleTestMode = () => {\n    const newTestMode = !testMode;\n    setTestMode(newTestMode);\n\n    // Log the test mode state change\n    console.log(`Test mode ${newTestMode ? 'enabled' : 'disabled'}`);\n\n    // Clear combination data when turning off test mode if no channel/header selected\n    if (!newTestMode && (!channel || !selectedHeader)) {\n      setCombinationHeaders([]);\n    }\n  };\n\n  // Filter and sort the combination headers\n  const filteredAndSortedCombinations = useMemo(() => {\n    if (!combinationHeaders.length) return [];\n\n    // Filter combinations based on activeFilters and excludedFilters\n    let filtered = [...combinationHeaders];\n    if (activeFilters.length > 0 || excludedFilters.length > 0) {\n      filtered = combinationHeaders.filter(item => {\n        if (!item.header_group) return false;\n        const headers = item.header_group.split('|');\n\n        // Check if ALL active filters are included (AND logic)\n        const containsAllActive = activeFilters.length === 0 || activeFilters.every(filter => headers.includes(filter));\n\n        // Check if NONE of the excluded filters are included (NOT logic)\n        const containsNoExcluded = excludedFilters.length === 0 || !excludedFilters.some(filter => headers.includes(filter));\n        return containsAllActive && containsNoExcluded;\n      });\n    }\n\n    // Sort combinations: first by number of items (ascending), then alphabetically\n    return filtered.sort((a, b) => {\n      // Count items in each combination\n      const aCount = a.header_group ? a.header_group.split('|').length : 0;\n      const bCount = b.header_group ? b.header_group.split('|').length : 0;\n\n      // First sort by count (ascending)\n      if (aCount !== bCount) {\n        return aCount - bCount;\n      }\n\n      // Then sort alphabetically\n      return a.header_group.localeCompare(b.header_group);\n    });\n  }, [combinationHeaders, activeFilters, excludedFilters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"column-title\",\n        children: !testMode && selectedHeader ? `헤더명 조합 목록: ${selectedHeader}` : '헤더명 조합 목록'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-mode-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Test Mode \", testMode ? 'ON' : 'OFF']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: testMode,\n            onChange: toggleTestMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'combination' ? 'active' : ''}`,\n        onClick: () => setActiveTab('combination'),\n        children: \"\\uC870\\uD569\\uBDF0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'mining' ? 'active' : ''}`,\n        onClick: () => setActiveTab('mining'),\n        children: \"\\uB9C8\\uC774\\uB2DD\\uBDF0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), activeTab === 'combination' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-header\",\n          onClick: () => setIsFilterOpen(!isFilterOpen),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD0DC\\uADF8 \\uD544\\uD130 \", activeFilters.length > 0 || excludedFilters.length > 0 ? `(${activeFilters.length + excludedFilters.length})` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-toggle-btn\",\n            children: isFilterOpen ? '▲' : '▼'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), isFilterOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD074\\uB9AD: \\uD3EC\\uD568(AND) \\u2192 \\uC81C\\uC678(NOT) \\u2192 \\uD574\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), (activeFilters.length > 0 || excludedFilters.length > 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reset-filters-btn\",\n              onClick: resetFilters,\n              children: \"\\uCD08\\uAE30\\uD654\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-tags\",\n            children: uniqueItems.map((item, index) => {\n              const isActive = activeFilters.includes(item.name);\n              const isExcluded = excludedFilters.includes(item.name);\n              const className = `filter-tag ${isActive ? 'active' : ''} ${isExcluded ? 'excluded' : ''}`;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: className,\n                onClick: () => toggleItemFilter(item.name),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag-text\",\n                  children: [item.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag-count\",\n                    children: [\"(\", item.count, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"\\uC5D0\\uB7EC: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this) : filteredAndSortedCombinations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-count\",\n          children: [filteredAndSortedCombinations.length, \"\\uAC1C \\uC870\\uD569 \", combinationHeaders.length !== filteredAndSortedCombinations.length ? `(전체 ${combinationHeaders.length}개 중)` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this), filteredAndSortedCombinations.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `column-item ${selectedCombination === item.header_group ? 'selected' : ''}`,\n          onClick: () => handleCombinationClick(item.header_group),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-count-badge\",\n            children: item.header_group ? item.header_group.split('|').length : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this), renderHeaderGroupAsTags(item.header_group)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: activeFilters.length > 0 || excludedFilters.length > 0 ? \"필터 조건에 맞는 결과가 없습니다.\" : testMode ? \"테스트 모드가 활성화되었습니다.\" : \"채널과 헤더를 선택해주세요.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MiningView, {\n      combinationHeaders: combinationHeaders,\n      loading: loading,\n      error: error,\n      testMode: testMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderCombinationList, \"a5ZkRc63LsKdmooBcUrVKO+KVy4=\");\n_c = HeaderCombinationList;\nexport default HeaderCombinationList;\nvar _c;\n$RefreshReg$(_c, \"HeaderCombinationList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","fetchHeaderCombinationList","MiningView","jsxDEV","_jsxDEV","HeaderCombinationList","channel","selectedHeader","onCombinationSelect","selectedCombination","onHeaderSearch","onHeaderSimilarityRequest","_s","combinationHeaders","setCombinationHeaders","loading","setLoading","error","setError","activeTab","setActiveTab","testMode","setTestMode","uniqueItems","setUniqueItems","activeFilters","setActiveFilters","excludedFilters","setExcludedFilters","isFilterOpen","setIsFilterOpen","getCombinationHeaders","response","console","log","list","headers","Array","isArray","err","message","length","itemFrequency","forEach","item","header_group","split","header","sortedItems","Object","entries","map","name","count","sort","a","b","handleCombinationClick","combination","handleTagRightClick","e","preventDefault","stopPropagation","toggleItemFilter","includes","filter","resetFilters","renderHeaderGroupAsTags","headerGroup","className","children","index","isActive","isExcluded","onClick","onContextMenu","fileName","_jsxFileName","lineNumber","columnNumber","toggleTestMode","newTestMode","filteredAndSortedCombinations","filtered","containsAllActive","every","containsNoExcluded","some","aCount","bCount","localeCompare","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderCombinationList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { fetchHeaderCombinationList } from '../services/api';\nimport MiningView from './MiningView';\nimport './Column.css';\n\nconst HeaderCombinationList = ({ channel, selectedHeader, onCombinationSelect, selectedCombination, onHeaderSearch, onHeaderSimilarityRequest }) => {\n  const [combinationHeaders, setCombinationHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('combination'); // 'combination' or 'mining'\n  const [testMode, setTestMode] = useState(false); // Add test mode state\n  \n  // New state for filtering and sorting\n  const [uniqueItems, setUniqueItems] = useState([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [excludedFilters, setExcludedFilters] = useState([]);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  useEffect(() => {\n    const getCombinationHeaders = async () => {\n      // Test mode can work without channel or header selection\n      if (!testMode && (!channel || !selectedHeader)) return;\n      \n      setLoading(true);\n      try {\n        if (testMode) {\n          // Use sample data in test mode\n          const response = await import('../sample_data/header_combination.json');\n          console.log('Using sample data for combination headers:', response);\n          setCombinationHeaders(response.list || []);\n        } else if (channel && selectedHeader) {\n          // Use API in normal mode only if channel and header are selected\n          const headers = Array.isArray(selectedHeader) ? selectedHeader : [selectedHeader];\n          const response = await fetchHeaderCombinationList(channel, headers);\n          console.log('Combination headers response:', response);\n          setCombinationHeaders(response.list || []);\n        } else {\n          // Clear data if test mode is turned off and no channel/header is selected\n          setCombinationHeaders([]);\n        }\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCombinationHeaders();\n  }, [channel, selectedHeader, testMode]);\n\n  // Extract unique items and count their frequency when combinationHeaders changes\n  useEffect(() => {\n    if (combinationHeaders.length === 0) {\n      setUniqueItems([]);\n      return;\n    }\n\n    const itemFrequency = {};\n    \n    // Count frequency of each unique item\n    combinationHeaders.forEach(item => {\n      if (!item.header_group) return;\n      \n      const headers = item.header_group.split('|');\n      headers.forEach(header => {\n        if (header) {\n          if (itemFrequency[header]) {\n            itemFrequency[header]++;\n          } else {\n            itemFrequency[header] = 1;\n          }\n        }\n      });\n    });\n    \n    // Convert to array and sort by frequency (descending)\n    const sortedItems = Object.entries(itemFrequency)\n      .map(([name, count]) => ({ name, count }))\n      .sort((a, b) => b.count - a.count);\n    \n    setUniqueItems(sortedItems);\n  }, [combinationHeaders]);\n\n  const handleCombinationClick = (combination) => {\n    if (onCombinationSelect) {\n      onCombinationSelect(combination);\n    }\n  };\n\n  // Handle right-click on tag to search and get similarity\n  const handleTagRightClick = (e, header) => {\n    e.preventDefault(); // Prevent default context menu\n    e.stopPropagation(); // Don't trigger parent's click\n    \n    // Call parent handlers if they exist\n    if (onHeaderSearch) {\n      onHeaderSearch(header);\n    }\n    \n    if (onHeaderSimilarityRequest) {\n      onHeaderSimilarityRequest(header);\n    }\n  };\n\n  // Toggle filter specifically for clicking tags in the combination list items\n  // This is a simpler version that only toggles between active and not active\n  const toggleItemFilter = (item) => {\n    // If already in active filters, remove it\n    if (activeFilters.includes(item)) {\n      setActiveFilters(activeFilters.filter(filter => filter !== item));\n    } \n    // If in excluded filters, remove from excluded first\n    else if (excludedFilters.includes(item)) {\n      setExcludedFilters(excludedFilters.filter(filter => filter !== item));\n      // And then add to active filters\n      setActiveFilters([...activeFilters, item]);\n    }\n    // If not in any filters, add to active\n    else {\n      setActiveFilters([...activeFilters, item]);\n    }\n  };\n\n  // Reset all filters\n  const resetFilters = () => {\n    setActiveFilters([]);\n    setExcludedFilters([]);\n  };\n\n  // Function to render header_group as tags\n  const renderHeaderGroupAsTags = (headerGroup) => {\n    if (!headerGroup) return null;\n    \n    const headers = headerGroup.split('|');\n    return (\n      <div className=\"header-tags\">\n        {headers.map((header, index) => {\n          const isActive = activeFilters.includes(header);\n          const isExcluded = excludedFilters.includes(header);\n          const className = `similarity-tag ${isActive ? 'active' : ''} ${isExcluded ? 'filtered-out' : ''}`;\n          \n          return (\n            <span \n              key={index} \n              className={className}\n              onClick={(e) => {\n                e.stopPropagation(); // Don't trigger parent's click\n                toggleItemFilter(header); // Use the simpler toggle for combination list\n              }}\n              onContextMenu={(e) => {\n                handleTagRightClick(e, header);\n              }}\n            >\n              {header}\n            </span>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const toggleTestMode = () => {\n    const newTestMode = !testMode;\n    setTestMode(newTestMode);\n    \n    // Log the test mode state change\n    console.log(`Test mode ${newTestMode ? 'enabled' : 'disabled'}`);\n    \n    // Clear combination data when turning off test mode if no channel/header selected\n    if (!newTestMode && (!channel || !selectedHeader)) {\n      setCombinationHeaders([]);\n    }\n  };\n\n  // Filter and sort the combination headers\n  const filteredAndSortedCombinations = useMemo(() => {\n    if (!combinationHeaders.length) return [];\n    \n    // Filter combinations based on activeFilters and excludedFilters\n    let filtered = [...combinationHeaders];\n    \n    if (activeFilters.length > 0 || excludedFilters.length > 0) {\n      filtered = combinationHeaders.filter(item => {\n        if (!item.header_group) return false;\n        \n        const headers = item.header_group.split('|');\n        \n        // Check if ALL active filters are included (AND logic)\n        const containsAllActive = activeFilters.length === 0 || \n          activeFilters.every(filter => headers.includes(filter));\n          \n        // Check if NONE of the excluded filters are included (NOT logic)\n        const containsNoExcluded = excludedFilters.length === 0 || \n          !excludedFilters.some(filter => headers.includes(filter));\n          \n        return containsAllActive && containsNoExcluded;\n      });\n    }\n    \n    // Sort combinations: first by number of items (ascending), then alphabetically\n    return filtered.sort((a, b) => {\n      // Count items in each combination\n      const aCount = a.header_group ? a.header_group.split('|').length : 0;\n      const bCount = b.header_group ? b.header_group.split('|').length : 0;\n      \n      // First sort by count (ascending)\n      if (aCount !== bCount) {\n        return aCount - bCount;\n      }\n      \n      // Then sort alphabetically\n      return a.header_group.localeCompare(b.header_group);\n    });\n  }, [combinationHeaders, activeFilters, excludedFilters]);\n\n  return (\n    <div className=\"column-container\">\n      <div className=\"column-title-container\">\n        <h2 className=\"column-title\">\n          {!testMode && selectedHeader \n            ? `헤더명 조합 목록: ${selectedHeader}` \n            : '헤더명 조합 목록'}\n        </h2>\n        <div className=\"test-mode-toggle\">\n          <label className=\"toggle-label\">\n            <span>Test Mode {testMode ? 'ON' : 'OFF'}</span>\n            <input \n              type=\"checkbox\" \n              checked={testMode}\n              onChange={toggleTestMode}\n            />\n            <span className=\"toggle-slider\"></span>\n          </label>\n        </div>\n      </div>\n      \n      <div className=\"tabs\">\n        <button \n          className={`tab ${activeTab === 'combination' ? 'active' : ''}`}\n          onClick={() => setActiveTab('combination')}\n        >\n          조합뷰\n        </button>\n        <button \n          className={`tab ${activeTab === 'mining' ? 'active' : ''}`}\n          onClick={() => setActiveTab('mining')}\n        >\n          마이닝뷰\n        </button>\n      </div>\n      \n      {activeTab === 'combination' ? (\n        <div className=\"tab-content\">\n          {/* Filter controls */}\n          <div className=\"filter-section\">\n            <div className=\"filter-header\" onClick={() => setIsFilterOpen(!isFilterOpen)}>\n              <h3>태그 필터 {activeFilters.length > 0 || excludedFilters.length > 0 ? `(${activeFilters.length + excludedFilters.length})` : ''}</h3>\n              <button className=\"filter-toggle-btn\">\n                {isFilterOpen ? '▲' : '▼'}\n              </button>\n            </div>\n            \n            {isFilterOpen && (\n              <div className=\"filter-content\">\n                <div className=\"filter-info\">\n                  <p>클릭: 포함(AND) → 제외(NOT) → 해제</p>\n                  {(activeFilters.length > 0 || excludedFilters.length > 0) && (\n                    <button className=\"reset-filters-btn\" onClick={resetFilters}>\n                      초기화\n                    </button>\n                  )}\n                </div>\n                \n                <div className=\"filter-tags\">\n                  {uniqueItems.map((item, index) => {\n                    const isActive = activeFilters.includes(item.name);\n                    const isExcluded = excludedFilters.includes(item.name);\n                    const className = `filter-tag ${isActive ? 'active' : ''} ${isExcluded ? 'excluded' : ''}`;\n                    \n                    return (\n                      <div \n                        key={index} \n                        className={className}\n                        onClick={() => toggleItemFilter(item.name)}\n                      >\n                        <span className=\"tag-text\">\n                          {item.name} <span className=\"tag-count\">({item.count})</span>\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {/* Results display */}\n          {loading ? (\n            <div className=\"loading\">로딩 중...</div>\n          ) : error ? (\n            <div className=\"error\">에러: {error}</div>\n          ) : filteredAndSortedCombinations.length > 0 ? (\n            <div className=\"column-content\">\n              {/* Results count */}\n              <div className=\"results-count\">\n                {filteredAndSortedCombinations.length}개 조합 {combinationHeaders.length !== filteredAndSortedCombinations.length ? `(전체 ${combinationHeaders.length}개 중)` : ''}\n              </div>\n              \n              {filteredAndSortedCombinations.map((item, index) => (\n                <div\n                  key={index}\n                  className={`column-item ${selectedCombination === item.header_group ? 'selected' : ''}`}\n                  onClick={() => handleCombinationClick(item.header_group)}\n                >\n                  <div className=\"item-count-badge\">\n                    {item.header_group ? item.header_group.split('|').length : 0}\n                  </div>\n                  {renderHeaderGroupAsTags(item.header_group)}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"column-empty\">\n              {activeFilters.length > 0 || excludedFilters.length > 0 ? (\n                \"필터 조건에 맞는 결과가 없습니다.\"\n              ) : testMode ? (\n                \"테스트 모드가 활성화되었습니다.\"\n              ) : (\n                \"채널과 헤더를 선택해주세요.\"\n              )}\n            </div>\n          )}\n        </div>\n      ) : (\n        <MiningView \n          combinationHeaders={combinationHeaders}\n          loading={loading}\n          error={error}\n          testMode={testMode}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HeaderCombinationList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}