{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/WorkspaceColumn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './WorkspaceColumn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkspaceColumn = ({\n  selectedFile,\n  fileContent\n}) => {\n  _s();\n  const [selectedTab, setSelectedTab] = useState('view');\n  const [content, setContent] = useState('');\n  const [tableData, setTableData] = useState({\n    headers: [],\n    rows: []\n  });\n  const [processedData, setProcessedData] = useState({\n    headers: [],\n    rows: []\n  });\n  const [showProcessed, setShowProcessed] = useState(false);\n  useEffect(() => {\n    // Reset content when file changes\n    if (selectedFile) {\n      if (selectedFile.type === 'xlsx_header') {\n        // Handle XLSX header selection\n        const {\n          sheetData,\n          headerIndex\n        } = selectedFile;\n\n        // Extract the column data for this header\n        const headerName = sheetData.headers[headerIndex];\n        const columnData = sheetData.rows.map(row => row[headerIndex]);\n\n        // Set the table data for display\n        setTableData({\n          headers: [headerName],\n          rows: columnData.map(value => [value])\n        });\n\n        // Reset processed data\n        setProcessedData({\n          headers: [],\n          rows: []\n        });\n\n        // Reset view state\n        setShowProcessed(false);\n\n        // Switch to view tab\n        setSelectedTab('view');\n\n        // Set content to empty to use table view instead\n        setContent('');\n      } else if (selectedFile.type === 'file') {\n        // Regular file selected, show file info\n        setContent(JSON.stringify({\n          fileName: selectedFile.name,\n          path: selectedFile.path,\n          type: selectedFile.type\n        }, null, 2));\n\n        // Clear table data\n        setTableData({\n          headers: [],\n          rows: []\n        });\n\n        // Reset processed data\n        setProcessedData({\n          headers: [],\n          rows: []\n        });\n\n        // Reset view state\n        setShowProcessed(false);\n      } else if (selectedFile.type === 'xlsx_sheet') {\n        // Sheet selected, show all data from the sheet\n        const {\n          sheetData\n        } = selectedFile;\n        setTableData({\n          headers: sheetData.headers,\n          rows: sheetData.rows\n        });\n\n        // Reset processed data\n        setProcessedData({\n          headers: [],\n          rows: []\n        });\n\n        // Reset view state\n        setShowProcessed(false);\n\n        // Switch to view tab\n        setSelectedTab('view');\n\n        // Set content to empty to use table view instead\n        setContent('');\n      }\n    } else {\n      // No file selected\n      setContent(JSON.stringify({\n        message: \"No file selected\",\n        instruction: \"Select a file or header from the file explorer\"\n      }, null, 2));\n\n      // Clear table data\n      setTableData({\n        headers: [],\n        rows: []\n      });\n\n      // Reset processed data\n      setProcessedData({\n        headers: [],\n        rows: []\n      });\n\n      // Reset view state\n      setShowProcessed(false);\n    }\n  }, [selectedFile]);\n  const handleTabChange = tab => {\n    setSelectedTab(tab);\n  };\n\n  // 분리분류 함수: 값을 분리하고 분류합니다\n  const handleMagicSplit = () => {\n    if (!tableData.headers.length || tableData.headers.length !== 1) {\n      // 헤더가 하나가 아닌 경우 처리할 수 없음\n      alert('분리분류 기능은 단일 컬럼 데이터에서만 사용할 수 있습니다.');\n      return;\n    }\n\n    // 원본 데이터의 첫 번째 (그리고 유일한) 컬럼을 가져옵니다\n    const originalHeader = tableData.headers[0];\n    const originalValues = tableData.rows.map(row => row[0]);\n\n    // 전체 컬럼에서 분리된 값들의 집합을 저장할 Set\n    const uniqueTokensSet = new Set();\n\n    // 원본 값들을 처리합니다\n    const processedRows = originalValues.map(value => {\n      if (value === null || value === undefined) {\n        return {};\n      }\n\n      // 문자열로 변환\n      const strValue = String(value);\n\n      // 0) 괄호 처리: 괄호 안의 내용을 추출\n      const bracketsContent = {};\n      const bracketResults = strValue.match(/\\(([^)]+)\\)/g);\n      let valueWithoutBrackets = strValue;\n      if (bracketResults) {\n        bracketResults.forEach((bracket, idx) => {\n          // 괄호 내용만 가져오기\n          const innerContent = bracket.slice(1, -1);\n          bracketsContent[`괄호내용_${idx + 1}`] = innerContent.trim();\n\n          // 원래 텍스트에서 괄호 제거\n          valueWithoutBrackets = valueWithoutBrackets.replace(bracket, ' ');\n        });\n      }\n\n      // 1) 공백, 쉼표로 분리\n      const segments = valueWithoutBrackets.split(/[\\s,]+/).map(segment => segment.trim()).filter(segment => segment);\n\n      // 분리된 각 세그먼트들 저장\n      const segmentObj = {};\n      segments.forEach((segment, idx) => {\n        segmentObj[`세그먼트_${idx + 1}`] = segment;\n        uniqueTokensSet.add(`세그먼트_${idx + 1}`);\n      });\n\n      // 2) 숫자에 대한 정규화 (모든 세그먼트 확인)\n      const normalizedNumbers = {};\n      segments.forEach((segment, idx) => {\n        if (!isNaN(segment)) {\n          // 숫자인 경우 정규화된 값(0~1 사이)을 저장\n          // 0~1000 사이라고 가정하고 정규화\n          const num = parseFloat(segment);\n          const normalized = Math.min(1, Math.max(0, num / 1000));\n          normalizedNumbers[`정규화_숫자_${idx + 1}`] = normalized;\n          uniqueTokensSet.add(`정규화_숫자_${idx + 1}`);\n        }\n      });\n\n      // 괄호 내용 추가\n      Object.keys(bracketsContent).forEach(key => {\n        uniqueTokensSet.add(key);\n      });\n\n      // 모든 결과 합치기\n      return {\n        원본: strValue,\n        ...bracketsContent,\n        ...segmentObj,\n        ...normalizedNumbers\n      };\n    });\n\n    // 모든 고유한 키에서 헤더 생성\n    const newHeaders = ['원본', ...Array.from(uniqueTokensSet)].sort();\n\n    // 새로운 행 데이터 구성\n    const newRows = processedRows.map(rowObj => {\n      return newHeaders.map(header => {\n        if (header === '원본') {\n          return rowObj.원본;\n        }\n        return rowObj[header] || '';\n      });\n    });\n\n    // 처리된 데이터 설정\n    setProcessedData({\n      headers: newHeaders,\n      rows: newRows\n    });\n\n    // 처리된 뷰 표시\n    setShowProcessed(true);\n  };\n  const renderTable = () => {\n    // 표시할 데이터 선택\n    const displayData = showProcessed ? processedData : tableData;\n    if (!displayData.headers.length) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name, \" - \", showProcessed ? '분리분류 결과' : '데이터 뷰']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), showProcessed && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"return-to-original\",\n        onClick: () => setShowProcessed(false),\n        children: \"\\uC6D0\\uBCF8 \\uB370\\uC774\\uD130\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: displayData.headers.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayData.rows.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, cellIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell !== undefined && cell !== null ? String(cell) : ''\n            }, cellIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this))\n          }, rowIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column workspace-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${selectedTab === 'view' ? 'active' : ''}`,\n          onClick: () => handleTabChange('view'),\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${selectedTab === 'split' ? 'active' : ''}`,\n          onClick: () => handleTabChange('split'),\n          children: \"Split\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${selectedTab === 'segment' ? 'active' : ''}`,\n          onClick: () => handleTabChange('segment'),\n          children: \"Segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${selectedTab === 'classify' ? 'active' : ''}`,\n          onClick: () => handleTabChange('classify'),\n          children: \"Classify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [(selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type) === 'xlsx_header' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button magic-split\",\n          onClick: handleMagicSplit,\n          title: \"\\uBD84\\uB9AC\\uBD84\\uB958 \\uB9C8\\uBC95\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2699\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCBE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [selectedTab === 'view' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-mode\",\n        children: tableData.headers.length > 0 || processedData.headers.length > 0 ? renderTable() : /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"json-viewer\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), selectedTab === 'split' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"split-mode\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Split Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Split by:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Array elements\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Target path:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"/properties/items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            children: \"Apply Split\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-content\",\n            children: \"Split preview will appear here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), selectedTab === 'segment' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment-mode\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Segmentation Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Configure how to segment your data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Segment method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"By structure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"By semantic content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"By size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            children: \"Apply Segmentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), selectedTab === 'classify' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"classify-mode\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Classification Tools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Classify data based on rules or patterns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classify-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Classification type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Type detection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Pattern matching\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Semantic grouping\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            children: \"Run Classification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkspaceColumn, \"Y7QUfyT1AtPWuyJ6J7NonvKGZfM=\");\n_c = WorkspaceColumn;\nexport default WorkspaceColumn;\nvar _c;\n$RefreshReg$(_c, \"WorkspaceColumn\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WorkspaceColumn","selectedFile","fileContent","_s","selectedTab","setSelectedTab","content","setContent","tableData","setTableData","headers","rows","processedData","setProcessedData","showProcessed","setShowProcessed","type","sheetData","headerIndex","headerName","columnData","map","row","value","JSON","stringify","fileName","name","path","message","instruction","handleTabChange","tab","handleMagicSplit","length","alert","originalHeader","originalValues","uniqueTokensSet","Set","processedRows","undefined","strValue","String","bracketsContent","bracketResults","match","valueWithoutBrackets","forEach","bracket","idx","innerContent","slice","trim","replace","segments","split","segment","filter","segmentObj","add","normalizedNumbers","isNaN","num","parseFloat","normalized","Math","min","max","Object","keys","key","원본","newHeaders","Array","from","sort","newRows","rowObj","header","renderTable","displayData","className","children","_jsxFileName","lineNumber","columnNumber","onClick","rowIdx","cell","cellIdx","title","placeholder","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/WorkspaceColumn.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './WorkspaceColumn.css';\n\nconst WorkspaceColumn = ({ selectedFile, fileContent }) => {\n  const [selectedTab, setSelectedTab] = useState('view');\n  const [content, setContent] = useState('');\n  const [tableData, setTableData] = useState({\n    headers: [],\n    rows: []\n  });\n  const [processedData, setProcessedData] = useState({\n    headers: [],\n    rows: []\n  });\n  const [showProcessed, setShowProcessed] = useState(false);\n\n  useEffect(() => {\n    // Reset content when file changes\n    if (selectedFile) {\n      if (selectedFile.type === 'xlsx_header') {\n        // Handle XLSX header selection\n        const { sheetData, headerIndex } = selectedFile;\n        \n        // Extract the column data for this header\n        const headerName = sheetData.headers[headerIndex];\n        const columnData = sheetData.rows.map(row => row[headerIndex]);\n        \n        // Set the table data for display\n        setTableData({\n          headers: [headerName],\n          rows: columnData.map(value => [value])\n        });\n        \n        // Reset processed data\n        setProcessedData({\n          headers: [],\n          rows: []\n        });\n        \n        // Reset view state\n        setShowProcessed(false);\n        \n        // Switch to view tab\n        setSelectedTab('view');\n        \n        // Set content to empty to use table view instead\n        setContent('');\n      } else if (selectedFile.type === 'file') {\n        // Regular file selected, show file info\n        setContent(JSON.stringify({\n          fileName: selectedFile.name,\n          path: selectedFile.path,\n          type: selectedFile.type\n        }, null, 2));\n        \n        // Clear table data\n        setTableData({\n          headers: [],\n          rows: []\n        });\n        \n        // Reset processed data\n        setProcessedData({\n          headers: [],\n          rows: []\n        });\n        \n        // Reset view state\n        setShowProcessed(false);\n      } else if (selectedFile.type === 'xlsx_sheet') {\n        // Sheet selected, show all data from the sheet\n        const { sheetData } = selectedFile;\n        \n        setTableData({\n          headers: sheetData.headers,\n          rows: sheetData.rows\n        });\n        \n        // Reset processed data\n        setProcessedData({\n          headers: [],\n          rows: []\n        });\n        \n        // Reset view state\n        setShowProcessed(false);\n        \n        // Switch to view tab\n        setSelectedTab('view');\n        \n        // Set content to empty to use table view instead\n        setContent('');\n      }\n    } else {\n      // No file selected\n      setContent(JSON.stringify({\n        message: \"No file selected\",\n        instruction: \"Select a file or header from the file explorer\"\n      }, null, 2));\n      \n      // Clear table data\n      setTableData({\n        headers: [],\n        rows: []\n      });\n      \n      // Reset processed data\n      setProcessedData({\n        headers: [],\n        rows: []\n      });\n      \n      // Reset view state\n      setShowProcessed(false);\n    }\n  }, [selectedFile]);\n\n  const handleTabChange = (tab) => {\n    setSelectedTab(tab);\n  };\n\n  // 분리분류 함수: 값을 분리하고 분류합니다\n  const handleMagicSplit = () => {\n    if (!tableData.headers.length || tableData.headers.length !== 1) {\n      // 헤더가 하나가 아닌 경우 처리할 수 없음\n      alert('분리분류 기능은 단일 컬럼 데이터에서만 사용할 수 있습니다.');\n      return;\n    }\n\n    // 원본 데이터의 첫 번째 (그리고 유일한) 컬럼을 가져옵니다\n    const originalHeader = tableData.headers[0];\n    const originalValues = tableData.rows.map(row => row[0]);\n    \n    // 전체 컬럼에서 분리된 값들의 집합을 저장할 Set\n    const uniqueTokensSet = new Set();\n    \n    // 원본 값들을 처리합니다\n    const processedRows = originalValues.map((value) => {\n      if (value === null || value === undefined) {\n        return {};\n      }\n      \n      // 문자열로 변환\n      const strValue = String(value);\n      \n      // 0) 괄호 처리: 괄호 안의 내용을 추출\n      const bracketsContent = {};\n      const bracketResults = strValue.match(/\\(([^)]+)\\)/g);\n      \n      let valueWithoutBrackets = strValue;\n      if (bracketResults) {\n        bracketResults.forEach((bracket, idx) => {\n          // 괄호 내용만 가져오기\n          const innerContent = bracket.slice(1, -1);\n          bracketsContent[`괄호내용_${idx+1}`] = innerContent.trim();\n          \n          // 원래 텍스트에서 괄호 제거\n          valueWithoutBrackets = valueWithoutBrackets.replace(bracket, ' ');\n        });\n      }\n      \n      // 1) 공백, 쉼표로 분리\n      const segments = valueWithoutBrackets\n        .split(/[\\s,]+/)\n        .map(segment => segment.trim())\n        .filter(segment => segment);\n        \n      // 분리된 각 세그먼트들 저장\n      const segmentObj = {};\n      segments.forEach((segment, idx) => {\n        segmentObj[`세그먼트_${idx+1}`] = segment;\n        uniqueTokensSet.add(`세그먼트_${idx+1}`);\n      });\n      \n      // 2) 숫자에 대한 정규화 (모든 세그먼트 확인)\n      const normalizedNumbers = {};\n      segments.forEach((segment, idx) => {\n        if (!isNaN(segment)) {\n          // 숫자인 경우 정규화된 값(0~1 사이)을 저장\n          // 0~1000 사이라고 가정하고 정규화\n          const num = parseFloat(segment);\n          const normalized = Math.min(1, Math.max(0, num / 1000));\n          normalizedNumbers[`정규화_숫자_${idx+1}`] = normalized;\n          uniqueTokensSet.add(`정규화_숫자_${idx+1}`);\n        }\n      });\n      \n      // 괄호 내용 추가\n      Object.keys(bracketsContent).forEach(key => {\n        uniqueTokensSet.add(key);\n      });\n      \n      // 모든 결과 합치기\n      return {\n        원본: strValue,\n        ...bracketsContent,\n        ...segmentObj,\n        ...normalizedNumbers\n      };\n    });\n    \n    // 모든 고유한 키에서 헤더 생성\n    const newHeaders = ['원본', ...Array.from(uniqueTokensSet)].sort();\n    \n    // 새로운 행 데이터 구성\n    const newRows = processedRows.map(rowObj => {\n      return newHeaders.map(header => {\n        if (header === '원본') {\n          return rowObj.원본;\n        }\n        return rowObj[header] || '';\n      });\n    });\n    \n    // 처리된 데이터 설정\n    setProcessedData({\n      headers: newHeaders,\n      rows: newRows\n    });\n    \n    // 처리된 뷰 표시\n    setShowProcessed(true);\n  };\n\n  const renderTable = () => {\n    // 표시할 데이터 선택\n    const displayData = showProcessed ? processedData : tableData;\n    \n    if (!displayData.headers.length) return null;\n    \n    return (\n      <div className=\"data-table-container\">\n        <h4>{selectedFile?.name} - {showProcessed ? '분리분류 결과' : '데이터 뷰'}</h4>\n        \n        {/* 원본 데이터로 돌아가는 버튼 (처리된 데이터를 보는 경우에만) */}\n        {showProcessed && (\n          <button \n            className=\"return-to-original\" \n            onClick={() => setShowProcessed(false)}\n          >\n            원본 데이터로 돌아가기\n          </button>\n        )}\n        \n        <table className=\"data-table\">\n          <thead>\n            <tr>\n              {displayData.headers.map((header, idx) => (\n                <th key={idx}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {displayData.rows.map((row, rowIdx) => (\n              <tr key={rowIdx}>\n                {row.map((cell, cellIdx) => (\n                  <td key={cellIdx}>{cell !== undefined && cell !== null ? String(cell) : ''}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"column workspace-column\">\n      <div className=\"toolbar\">\n        <div className=\"tabs\">\n          <button \n            className={`tab ${selectedTab === 'view' ? 'active' : ''}`} \n            onClick={() => handleTabChange('view')}\n          >\n            View\n          </button>\n          <button \n            className={`tab ${selectedTab === 'split' ? 'active' : ''}`} \n            onClick={() => handleTabChange('split')}\n          >\n            Split\n          </button>\n          <button \n            className={`tab ${selectedTab === 'segment' ? 'active' : ''}`} \n            onClick={() => handleTabChange('segment')}\n          >\n            Segment\n          </button>\n          <button \n            className={`tab ${selectedTab === 'classify' ? 'active' : ''}`} \n            onClick={() => handleTabChange('classify')}\n          >\n            Classify\n          </button>\n        </div>\n        <div className=\"actions\">\n          {selectedFile?.type === 'xlsx_header' && (\n            <button \n              className=\"action-button magic-split\"\n              onClick={handleMagicSplit}\n              title=\"분리분류 마법\"\n            >\n              <span>✨</span>\n            </button>\n          )}\n          <button className=\"action-button\">\n            <span>⚙️</span>\n          </button>\n          <button className=\"action-button\">\n            <span>💾</span>\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"content-area\">\n        {selectedTab === 'view' && (\n          <div className=\"view-mode\">\n            {(tableData.headers.length > 0 || processedData.headers.length > 0) ? (\n              renderTable()\n            ) : (\n              <pre className=\"json-viewer\">{content}</pre>\n            )}\n          </div>\n        )}\n        \n        {selectedTab === 'split' && (\n          <div className=\"split-mode\">\n            <h4>Split Data</h4>\n            <div className=\"split-options\">\n              <div className=\"option\">\n                <label>Split by:</label>\n                <select>\n                  <option>Key</option>\n                  <option>Value</option>\n                  <option>Array elements</option>\n                </select>\n              </div>\n              <div className=\"option\">\n                <label>Target path:</label>\n                <input type=\"text\" placeholder=\"/properties/items\" />\n              </div>\n              <button className=\"apply-button\">Apply Split</button>\n            </div>\n            <div className=\"preview-area\">\n              <h5>Preview</h5>\n              <div className=\"preview-content\">Split preview will appear here</div>\n            </div>\n          </div>\n        )}\n        \n        {selectedTab === 'segment' && (\n          <div className=\"segment-mode\">\n            <h4>Segmentation Options</h4>\n            <p>Configure how to segment your data</p>\n            <div className=\"segment-options\">\n              <div className=\"option\">\n                <label>Segment method:</label>\n                <select>\n                  <option>By structure</option>\n                  <option>By semantic content</option>\n                  <option>By size</option>\n                </select>\n              </div>\n              <button className=\"apply-button\">Apply Segmentation</button>\n            </div>\n          </div>\n        )}\n        \n        {selectedTab === 'classify' && (\n          <div className=\"classify-mode\">\n            <h4>Classification Tools</h4>\n            <p>Classify data based on rules or patterns</p>\n            <div className=\"classify-options\">\n              <div className=\"option\">\n                <label>Classification type:</label>\n                <select>\n                  <option>Type detection</option>\n                  <option>Pattern matching</option>\n                  <option>Semantic grouping</option>\n                </select>\n              </div>\n              <button className=\"apply-button\">Run Classification</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WorkspaceColumn; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}