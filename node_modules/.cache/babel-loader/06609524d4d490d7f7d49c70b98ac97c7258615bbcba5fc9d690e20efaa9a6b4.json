{"ast":null,"code":"import axios from 'axios';\n\n// Authorization token - should be managed through a better auth system in production\nconst AUTH_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjI3NGFhYzA1NTAwZTQ2M2RjZmE0NDE2IiwibmFtZSI6Iuygleyihe2YhCIsInR5cGUiOiJpbnZlc3RvciIsImNvbXBhbnlfaWQiOiJBOjcyOTc0MGMxZDI4YTdhYTEyMDQ1YzI3ODhiNGRlZmM5OTc4Y2JhZWI0OWFlMzU1NmVmOTlhMTY2NWY4MTI4OTdmM2NjMTE0MzVlNjQ4MCIsImNvbXBhbnlfbmFtZSI6IuygnOygnOyGjO2UhO2KuCIsImNhdGVnb3J5IjoiVkMiLCJuaWNrbmFtZSI6IjQ0MTY2Mjc0Iiwib3JnX3JvbGUiOiJzb3VyY2luZyIsIm9yZ19pZCI6IjYyZWI2YmQxOGQzYWUxNDI4MWQ1ODAyZiIsImlhdCI6MTY2Mzc0ODU3MSwiZXhwIjoxNjY0MzUzMzcxLCJpc3MiOiJuc2lnaHQtYmFja2VuZCJ9.BGbPFVbUSF04rnPA7p23kB1uaIY_ouX9KOVxGYyxnxE';\n\n// API base URL\nconst API_BASE_URL = 'https://api-backend.nventure.co.kr/solution';\n\n// Common axios config\nconst axiosConfig = {\n  maxBodyLength: Infinity,\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': AUTH_TOKEN\n  }\n};\n\n// Fetch channels list\nexport const fetchChannels = async () => {\n  try {\n    const config = {\n      ...axiosConfig,\n      method: 'get',\n      url: `${API_BASE_URL}/crawlChannelList`\n    };\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching channels:', error);\n    throw error;\n  }\n};\n\n// Fetch header list for a specific channel\nexport const fetchHeaderList = async (channel, size = 100, afterKey = '') => {\n  try {\n    const data = JSON.stringify({\n      channel,\n      size,\n      afterKey\n    });\n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/headerList?channel=${encodeURIComponent(channel)}`,\n      data\n    };\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching header list:', error);\n    throw error;\n  }\n};\n\n// Alias for fetchHeaderList for the PathNavigation component\nexport const fetchHeaders = fetchHeaderList;\n\n// Fetch header similarity list\nexport const fetchHeaderSimilarityList = async (channel, keyword, size = 100) => {\n  try {\n    const data = JSON.stringify({\n      channel,\n      keyword,\n      size\n    });\n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/headerSimilarityList?channel=${encodeURIComponent(channel)}&keyword=${encodeURIComponent(keyword)}&size=${size}`,\n      data\n    };\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching header similarity list:', error);\n    throw error;\n  }\n};\n\n// Fetch header combination list\nexport const fetchHeaderCombinationList = async (channel, headers) => {\n  try {\n    // Make sure headers is an array\n    const headersArray = Array.isArray(headers) ? headers : [headers];\n    const data = JSON.stringify({\n      channel,\n      headers: headersArray\n    });\n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/headerCombinationList`,\n      data\n    };\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching header combination list:', error);\n    throw error;\n  }\n};\n\n// Alias for fetchHeaderCombinationList for the PathNavigation component\nexport const fetchCombinations = fetchHeaderCombinationList;\n\n// Fetch header combination text list\nexport const fetchHeaderCombinationTextList = async (channel, headerGroups, size = 100, afterKey = '') => {\n  try {\n    const data = JSON.stringify({\n      size,\n      channel,\n      header_groups: headerGroups,\n      afterKey\n    });\n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/tableTextList`,\n      data\n    };\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching header combination text list:', error);\n    throw error;\n  }\n};\n\n// Add a similar word to a representative word\nexport const addHeaderMapping = async (similarWord, representativeWord) => {\n  try {\n    const data = JSON.stringify({\n      header: similarWord,\n      mapping: representativeWord\n    });\n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/headerMapping/add`,\n      data\n    };\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding header mapping:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","AUTH_TOKEN","API_BASE_URL","axiosConfig","maxBodyLength","Infinity","headers","fetchChannels","config","method","url","response","request","data","error","console","fetchHeaderList","channel","size","afterKey","JSON","stringify","encodeURIComponent","fetchHeaders","fetchHeaderSimilarityList","keyword","fetchHeaderCombinationList","headersArray","Array","isArray","fetchCombinations","fetchHeaderCombinationTextList","headerGroups","header_groups","addHeaderMapping","similarWord","representativeWord","header","mapping"],"sources":["/Users/francesson/reorganize/channel-list-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Authorization token - should be managed through a better auth system in production\nconst AUTH_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjI3NGFhYzA1NTAwZTQ2M2RjZmE0NDE2IiwibmFtZSI6Iuygleyihe2YhCIsInR5cGUiOiJpbnZlc3RvciIsImNvbXBhbnlfaWQiOiJBOjcyOTc0MGMxZDI4YTdhYTEyMDQ1YzI3ODhiNGRlZmM5OTc4Y2JhZWI0OWFlMzU1NmVmOTlhMTY2NWY4MTI4OTdmM2NjMTE0MzVlNjQ4MCIsImNvbXBhbnlfbmFtZSI6IuygnOygnOyGjO2UhO2KuCIsImNhdGVnb3J5IjoiVkMiLCJuaWNrbmFtZSI6IjQ0MTY2Mjc0Iiwib3JnX3JvbGUiOiJzb3VyY2luZyIsIm9yZ19pZCI6IjYyZWI2YmQxOGQzYWUxNDI4MWQ1ODAyZiIsImlhdCI6MTY2Mzc0ODU3MSwiZXhwIjoxNjY0MzUzMzcxLCJpc3MiOiJuc2lnaHQtYmFja2VuZCJ9.BGbPFVbUSF04rnPA7p23kB1uaIY_ouX9KOVxGYyxnxE';\n\n// API base URL\nconst API_BASE_URL = 'https://api-backend.nventure.co.kr/solution';\n\n// Common axios config\nconst axiosConfig = {\n  maxBodyLength: Infinity,\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': AUTH_TOKEN\n  }\n};\n\n// Fetch channels list\nexport const fetchChannels = async () => {\n  try {\n    const config = {\n      ...axiosConfig,\n      method: 'get',\n      url: `${API_BASE_URL}/crawlChannelList`\n    };\n    \n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching channels:', error);\n    throw error;\n  }\n};\n\n// Fetch header list for a specific channel\nexport const fetchHeaderList = async (channel, size = 100, afterKey = '') => {\n  try {\n    const data = JSON.stringify({\n      channel,\n      size,\n      afterKey\n    });\n    \n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/headerList?channel=${encodeURIComponent(channel)}`,\n      data\n    };\n    \n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching header list:', error);\n    throw error;\n  }\n};\n\n// Alias for fetchHeaderList for the PathNavigation component\nexport const fetchHeaders = fetchHeaderList;\n\n// Fetch header similarity list\nexport const fetchHeaderSimilarityList = async (channel, keyword, size = 100) => {\n  try {\n    const data = JSON.stringify({\n      channel,\n      keyword,\n      size\n    });\n    \n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/headerSimilarityList?channel=${encodeURIComponent(channel)}&keyword=${encodeURIComponent(keyword)}&size=${size}`,\n      data\n    };\n    \n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching header similarity list:', error);\n    throw error;\n  }\n};\n\n// Fetch header combination list\nexport const fetchHeaderCombinationList = async (channel, headers) => {\n  try {\n    // Make sure headers is an array\n    const headersArray = Array.isArray(headers) ? headers : [headers];\n    \n    const data = JSON.stringify({\n      channel,\n      headers: headersArray\n    });\n    \n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/headerCombinationList`,\n      data\n    };\n    \n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching header combination list:', error);\n    throw error;\n  }\n};\n\n// Alias for fetchHeaderCombinationList for the PathNavigation component\nexport const fetchCombinations = fetchHeaderCombinationList;\n\n// Fetch header combination text list\nexport const fetchHeaderCombinationTextList = async (channel, headerGroups, size = 100, afterKey = '') => {\n  try {\n    const data = JSON.stringify({\n      size,\n      channel,\n      header_groups: headerGroups,\n      afterKey\n    });\n    \n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/tableTextList`,\n      data\n    };\n    \n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching header combination text list:', error);\n    throw error;\n  }\n};\n\n// Add a similar word to a representative word\nexport const addHeaderMapping = async (similarWord, representativeWord) => {\n  try {\n    const data = JSON.stringify({\n      header: similarWord,\n      mapping: representativeWord\n    });\n    \n    const config = {\n      ...axiosConfig,\n      method: 'post',\n      url: `${API_BASE_URL}/headerMapping/add`,\n      data\n    };\n    \n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding header mapping:', error);\n    throw error;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}