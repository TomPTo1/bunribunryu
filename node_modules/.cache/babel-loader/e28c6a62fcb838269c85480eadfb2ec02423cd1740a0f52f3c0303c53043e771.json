{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/HeaderCombinationTextList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { fetchHeaderCombinationTextList } from '../services/api';\nimport './HeaderCombinationTextList.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeaderCombinationTextList = ({\n  channel,\n  selectedCombination,\n  selectedCombinations = []\n}) => {\n  _s();\n  const [combinationTexts, setCombinationTexts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('텍스트조회');\n  const [sectionName, setSectionName] = useState('');\n  // Mining states\n  const [miningData, setMiningData] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState({});\n  const [minSupport, setMinSupport] = useState(0.01);\n  const [minConfidence, setMinConfidence] = useState(0.01);\n  const [maxDepth, setMaxDepth] = useState(100);\n  const [showSettingsPopup, setShowSettingsPopup] = useState(false);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortOption, setSortOption] = useState('support');\n  const settingsPopupRef = useRef(null);\n\n  // 실제 사용할 조합 목록 결정 (단일 selectedCombination과 다중 selectedCombinations 지원)\n  const effectiveCombinations = useMemo(() => {\n    // 다중 선택이 있는 경우 우선 사용\n    if (selectedCombinations && selectedCombinations.length > 0) {\n      return selectedCombinations;\n    }\n    // 다중 선택이 없고 단일 선택이 있는 경우\n    if (selectedCombination) {\n      return [selectedCombination];\n    }\n    // 아무것도 선택되지 않은 경우\n    return [];\n  }, [selectedCombination, selectedCombinations]);\n  useEffect(() => {\n    const getCombinationTexts = async () => {\n      if (!channel || effectiveCombinations.length === 0) return;\n      setLoading(true);\n      try {\n        // 모든 선택된 조합을 API에 전달\n        const response = await fetchHeaderCombinationTextList(channel, effectiveCombinations);\n        console.log('Combination texts response:', response);\n        setCombinationTexts(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationTexts([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCombinationTexts();\n  }, [channel, effectiveCombinations]);\n\n  // Generate FP-growth tree when combination texts change\n  useEffect(() => {\n    if (combinationTexts && combinationTexts.length > 0 && activeTab === '마이닝') {\n      generateFPGrowthTree(combinationTexts);\n    } else {\n      setMiningData(null);\n    }\n  }, [combinationTexts, activeTab, minSupport, minConfidence, maxDepth]);\n\n  // Close settings popup when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (settingsPopupRef.current && !settingsPopupRef.current.contains(event.target)) {\n        setShowSettingsPopup(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Function to generate FP-growth tree from text data\n  const generateFPGrowthTree = textData => {\n    if (!textData || textData.length === 0) {\n      setMiningData(null);\n      return;\n    }\n\n    // Step 1: Create transactions by splitting each text by '>' and trimming\n    const transactions = textData.filter(item => item.text).map(item => {\n      // 문자열에 '>' 문자가 있는지 확인\n      if (item.text.includes('>')) {\n        // '>' 있으면 분할 처리\n        return item.text.split('>').map(segment => segment.trim()).filter(segment => segment.length > 0);\n      } else {\n        // '>' 없으면 전체 텍스트를 하나의 항목으로 처리\n        const trimmedText = item.text.trim();\n        return trimmedText.length > 0 ? [trimmedText] : [];\n      }\n    }).filter(transaction => transaction.length > 0);\n\n    // Step 2: Count item frequencies\n    const itemCounts = {};\n    const totalTransactions = transactions.length;\n    transactions.forEach(transaction => {\n      transaction.forEach(item => {\n        itemCounts[item] = (itemCounts[item] || 0) + 1;\n      });\n    });\n\n    // Calculate minimum support threshold - use absolute minimum of 2\n    const minSupportCount = Math.max(2, Math.floor(totalTransactions * minSupport));\n\n    // Get frequent items sorted by frequency\n    const frequentItems = Object.keys(itemCounts).filter(item => itemCounts[item] >= minSupportCount).sort((a, b) => itemCounts[b] - itemCounts[a]);\n\n    // Create single tree structure with most frequent item as root\n    if (frequentItems.length === 0) {\n      setMiningData([]);\n      return;\n    }\n\n    // FP-GROWTH for a single hierarchical tree\n    // Step 3: Reorder transactions based on frequency\n    const orderedTransactions = transactions.map(transaction => {\n      return transaction.filter(item => frequentItems.includes(item)).sort((a, b) => itemCounts[b] - itemCounts[a]);\n    }).filter(transaction => transaction.length > 0);\n\n    // Create a single root node for the most frequent item\n    const rootItem = frequentItems[0];\n    const singleTreeRoot = {\n      id: rootItem,\n      name: rootItem,\n      support: itemCounts[rootItem],\n      confidence: itemCounts[rootItem] / totalTransactions,\n      children: []\n    };\n\n    // Create a mapping of patterns to their support count\n    const patternSupports = {};\n\n    // First pass - gather all pattern supports\n    orderedTransactions.forEach(transaction => {\n      if (transaction.length < 2) return;\n      for (let i = 0; i < transaction.length; i++) {\n        for (let j = i + 1; j < transaction.length; j++) {\n          const pattern = [transaction[i], transaction[j]];\n          const key = pattern.join('-');\n          patternSupports[key] = (patternSupports[key] || 0) + 1;\n        }\n      }\n    });\n\n    // Then build tree with those precomputed pattern supports\n    const buildOrderedFPTree = (currentNode, level) => {\n      if (level >= maxDepth) return;\n      const currentItemIndex = frequentItems.indexOf(currentNode.name);\n      for (let i = currentItemIndex + 1; i < frequentItems.length; i++) {\n        const nextItem = frequentItems[i];\n\n        // Check if the pair meets minimum support\n        const patternKey = [currentNode.name, nextItem].join('-');\n        const support = patternSupports[patternKey] || 0;\n        if (support >= Math.max(2, minSupportCount)) {\n          const confidence = support / itemCounts[currentNode.name];\n          if (confidence >= (level > 2 ? minConfidence / 2 : minConfidence)) {\n            const childNode = {\n              id: `${currentNode.id}-${nextItem}`,\n              name: nextItem,\n              support: support,\n              confidence: confidence,\n              children: []\n            };\n            currentNode.children.push(childNode);\n            buildOrderedFPTree(childNode, level + 1);\n          }\n        }\n      }\n\n      // Sort children based on sortOption\n      if (currentNode.children.length > 0) {\n        if (sortOption === 'support') {\n          currentNode.children.sort((a, b) => b.support - a.support);\n        } else if (sortOption === 'confidence') {\n          currentNode.children.sort((a, b) => b.confidence - a.confidence);\n        } else if (sortOption === 'name') {\n          currentNode.children.sort((a, b) => a.name.localeCompare(b.name));\n        }\n      }\n    };\n\n    // Start building the tree from the root\n    buildOrderedFPTree(singleTreeRoot, 1);\n\n    // Initialize expanded nodes for visualization - initially expand all nodes\n    const initialExpanded = {};\n\n    // Function to recursively expand all nodes\n    const expandAllNodes = node => {\n      if (!node) return;\n      initialExpanded[node.id] = true;\n      if (node.children && node.children.length > 0) {\n        node.children.forEach(child => expandAllNodes(child));\n      }\n    };\n\n    // Start expanding from the root\n    expandAllNodes(singleTreeRoot);\n\n    // Set the result as a single-item array containing the root\n    setMiningData([singleTreeRoot]);\n    setExpandedNodes(initialExpanded);\n  };\n\n  // Toggle node expansion\n  const toggleNode = nodeId => {\n    setExpandedNodes(prev => ({\n      ...prev,\n      [nodeId]: !prev[nodeId]\n    }));\n  };\n\n  // Select a node\n  const handleNodeSelect = node => {\n    setSelectedNode(node === selectedNode ? null : node);\n  };\n\n  // Expand/collapse all nodes\n  const toggleAllNodes = expand => {\n    if (!miningData || miningData.length === 0) return;\n    const newExpandedState = {};\n    const processNode = node => {\n      if (!node) return;\n      newExpandedState[node.id] = expand;\n      if (node.children && node.children.length > 0) {\n        node.children.forEach(child => processNode(child));\n      }\n    };\n    miningData.forEach(root => processNode(root));\n    setExpandedNodes(newExpandedState);\n  };\n\n  // Filter nodes based on search query\n  const getFilteredNodes = (nodes, query) => {\n    if (!query || !nodes) return nodes;\n    const searchLower = query.toLowerCase();\n    const filterNode = node => {\n      if (node.name.toLowerCase().includes(searchLower)) {\n        return true;\n      }\n      if (node.children && node.children.length > 0) {\n        node.children = node.children.filter(child => filterNode(child));\n        return node.children.length > 0;\n      }\n      return false;\n    };\n    return nodes.filter(node => filterNode(node));\n  };\n\n  // Get filtered mining data\n  const filteredMiningData = useMemo(() => {\n    if (!miningData || !searchQuery) return miningData;\n\n    // Deep clone the data to avoid modifying the original\n    const clonedData = JSON.parse(JSON.stringify(miningData));\n    return getFilteredNodes(clonedData, searchQuery);\n  }, [miningData, searchQuery]);\n  const handleSupportChange = e => {\n    const value = parseFloat(e.target.value);\n    if (!isNaN(value) && value >= 0 && value <= 1) {\n      setMinSupport(value);\n    }\n  };\n  const handleConfidenceChange = e => {\n    const value = parseFloat(e.target.value);\n    if (!isNaN(value) && value >= 0 && value <= 1) {\n      setMinConfidence(value);\n    }\n  };\n  const handleDepthChange = e => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value > 0) {\n      setMaxDepth(value);\n    }\n  };\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleSortChange = e => {\n    setSortOption(e.target.value);\n    // Regenerate the tree with the new sort option\n    if (combinationTexts.length > 0) {\n      generateFPGrowthTree(combinationTexts);\n    }\n  };\n  const handleSectionNameChange = e => {\n    setSectionName(e.target.value);\n  };\n\n  // Render tree node with enhanced visual design\n  const renderTreeNode = (node, level = 0) => {\n    if (!node) return null;\n    const isExpanded = expandedNodes[node.id];\n    const hasChildren = node.children && node.children.length > 0;\n    const isSelected = selectedNode && selectedNode.id === node.id;\n    const depth = node.id.split('-').length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-node depth-${depth} ${isSelected ? 'selected' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-header\",\n        onClick: () => handleNodeSelect(node),\n        style: {\n          paddingLeft: `${level * 20}px`\n        },\n        children: [hasChildren && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `toggle-icon ${isExpanded ? 'expanded' : 'collapsed'}`,\n          onClick: e => {\n            e.stopPropagation();\n            toggleNode(node.id);\n          },\n          children: isExpanded ? '▼' : '►'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"node-name\",\n          children: node.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"node-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"support-badge\",\n            title: \"\\uC9C0\\uC9C0\\uB3C4(\\uBC1C\\uC0DD \\uBE48\\uB3C4)\",\n            children: Math.round(node.support)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"confidence-badge\",\n            title: \"\\uC2E0\\uB8B0\\uB3C4(\\uC5F0\\uAD00\\uC131 \\uAC15\\uB3C4)\",\n            children: [(node.confidence * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), isExpanded && hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-children\",\n        children: node.children.map(child => renderTreeNode(child, level + 1))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render settings popup\n  const renderSettingsPopup = () => {\n    if (!showSettingsPopup) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-popup\",\n        ref: settingsPopupRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uB9C8\\uC774\\uB2DD \\uC124\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-btn\",\n            onClick: () => setShowSettingsPopup(false),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uCD5C\\uC18C \\uC9C0\\uC9C0\\uB3C4:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0.01\",\n              max: \"1\",\n              step: \"0.01\",\n              value: minSupport,\n              onChange: handleSupportChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"setting-description\",\n              children: \"\\uC804\\uCCB4 \\uAC70\\uB798 \\uC911 \\uD574\\uB2F9 \\uD328\\uD134\\uC774 \\uB098\\uD0C0\\uB098\\uB294 \\uBE44\\uC728 (0.01 ~ 1)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uCD5C\\uC18C \\uC2E0\\uB8B0\\uB3C4:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0.01\",\n              max: \"1\",\n              step: \"0.01\",\n              value: minConfidence,\n              onChange: handleConfidenceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"setting-description\",\n              children: \"\\uC120\\uD589 \\uD56D\\uBAA9\\uC774 \\uC788\\uC744 \\uB54C \\uACB0\\uACFC \\uD56D\\uBAA9\\uC774 \\uB098\\uD0C0\\uB0A0 \\uD655\\uB960 (0.01 ~ 1)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uCD5C\\uB300 \\uAE4A\\uC774:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: \"100\",\n              step: \"1\",\n              value: maxDepth,\n              onChange: handleDepthChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"setting-description\",\n              children: \"\\uD328\\uD134\\uC758 \\uCD5C\\uB300 \\uAE38\\uC774 \\uC124\\uC815 (1 ~ 100)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uC815\\uB82C \\uAE30\\uC900:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: sortOption,\n              onChange: handleSortChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"support\",\n                children: \"\\uC9C0\\uC9C0\\uB3C4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"confidence\",\n                children: \"\\uC2E0\\uB8B0\\uB3C4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"name\",\n                children: \"\\uC774\\uB984\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-popup-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-settings-btn\",\n            onClick: () => setShowSettingsPopup(false),\n            children: \"\\uC801\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render mining view with improved layout and design\n  const renderMiningView = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mining-view-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mining-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mining-title\",\n          children: \"\\uD328\\uD134 \\uB9C8\\uC774\\uB2DD \\uBD84\\uC11D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mining-info\",\n          children: filteredMiningData && filteredMiningData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mining-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mining-stat-item\",\n              children: [\"\\uCD1D \\uD2B8\\uB79C\\uC7AD\\uC158: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: combinationTexts.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mining-stat-item\",\n              children: [\"\\uBC1C\\uACAC\\uB41C \\uD328\\uD134: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: countTotalPatterns(filteredMiningData)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mining-toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-input\",\n            placeholder: \"\\uD328\\uD134 \\uAC80\\uC0C9...\",\n            value: searchQuery,\n            onChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), searchQuery && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search-btn\",\n            onClick: () => setSearchQuery(''),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mining-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"settings-btn\",\n            onClick: () => setShowSettingsPopup(true),\n            title: \"\\uB9C8\\uC774\\uB2DD \\uC124\\uC815\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"settings-icon\",\n              children: \"\\u2699\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), \" \\uC124\\uC815\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"expand-all-btn\",\n            onClick: () => toggleAllNodes(true),\n            title: \"\\uBAA8\\uB450 \\uD3BC\\uCE58\\uAE30\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"expand-icon\",\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this), \" \\uBAA8\\uB450 \\uD3BC\\uCE58\\uAE30\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"collapse-all-btn\",\n            onClick: () => toggleAllNodes(false),\n            title: \"\\uBAA8\\uB450 \\uC811\\uAE30\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"collapse-icon\",\n              children: \"\\u25BA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), \" \\uBAA8\\uB450 \\uC811\\uAE30\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fp-tree-container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-text\",\n            children: \"\\uB9C8\\uC774\\uB2DD \\uB370\\uC774\\uD130 \\uBD84\\uC11D \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-icon\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [\"\\uC5D0\\uB7EC: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this) : filteredMiningData && filteredMiningData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-legend\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-color-node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-label\",\n                children: \"\\uD328\\uD134 \\uB178\\uB4DC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-color-selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-label\",\n                children: \"\\uC120\\uD0DD\\uB41C \\uB178\\uB4DC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"support-badge-small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-label\",\n                children: \"\\uC9C0\\uC9C0\\uB3C4(\\uBE48\\uB3C4\\uC218)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"confidence-badge-small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-label\",\n                children: \"\\uC2E0\\uB8B0\\uB3C4(%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-container\",\n            children: filteredMiningData.map(root => renderTreeNode(root))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-node-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uC120\\uD0DD\\uB41C \\uD328\\uD134 \\uC0C1\\uC138\\uC815\\uBCF4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"node-detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"\\uD328\\uD134:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: selectedNode.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"node-detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"\\uC9C0\\uC9C0\\uB3C4:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: Math.round(selectedNode.support)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"node-detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"\\uC2E0\\uB8B0\\uB3C4:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [(selectedNode.confidence * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"node-detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value detail-id\",\n                children: selectedNode.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-icon\",\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-text\",\n            children: searchQuery ? \"검색 결과가 없습니다.\" : \"마이닝 데이터가 없습니다.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-subtext\",\n            children: searchQuery ? \"다른 검색어를 시도해보세요.\" : \"데이터를 불러오거나 설정을 변경해보세요.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), renderSettingsPopup()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper function to count total patterns in the tree\n  const countTotalPatterns = data => {\n    if (!data || data.length === 0) return 0;\n    let count = 0;\n    const countNodes = node => {\n      if (!node) return;\n      count++; // Count this node\n\n      if (node.children && node.children.length > 0) {\n        node.children.forEach(child => countNodes(child));\n      }\n    };\n    data.forEach(root => countNodes(root));\n    return count;\n  };\n  const handleCreateSection = () => {\n    if (!sectionName.trim()) {\n      alert('섹션명을 입력해주세요.');\n      return;\n    }\n\n    // 여기에 섹션 생성 로직을 추가합니다\n    console.log('섹션 생성:', sectionName, '조합:', effectiveCombinations);\n    // TODO: API 호출 및 성공 후 처리\n    alert(`\"${sectionName}\" 섹션이 생성되었습니다.`);\n    setSectionName('');\n  };\n  if (!channel || effectiveCombinations.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uACFC \\uD5E4\\uB354 \\uC870\\uD569\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this);\n  }\n  const renderSectionCreationArea = () => {\n    // Count of selected combinations\n    const selectedCount = effectiveCombinations.length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-creation-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-creation-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-creation-title\",\n          children: \"\\uC139\\uC158 \\uC0DD\\uC131 \\uC601\\uC5ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-combination-count\",\n          children: [\"\\uC120\\uD0DD\\uB41C \\uC870\\uD569: \", selectedCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-creation-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"section-name\",\n            children: \"\\uC139\\uC158\\uBA85:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"section-name\",\n            value: sectionName,\n            onChange: handleSectionNameChange,\n            placeholder: \"\\uC0C8 \\uC139\\uC158 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            className: \"section-name-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-section-btn\",\n          onClick: handleCreateSection,\n          disabled: !sectionName.trim(),\n          children: \"\\uC139\\uC158 \\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"column-title\",\n      children: \"\\uC139\\uC158 \\uC0DD\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 7\n    }, this), renderSectionCreationArea(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-content\",\n      children: activeTab === '텍스트조회' ? loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"\\uC5D0\\uB7EC: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 13\n      }, this) : combinationTexts && combinationTexts.length > 0 ? combinationTexts.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-text\",\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-count\",\n          children: [\"(\", item.count, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uD5E4\\uB354 \\uC870\\uD569 \\uD14D\\uC2A4\\uD2B8 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 13\n      }, this) : renderMiningView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === '텍스트조회' ? 'active' : ''}`,\n        onClick: () => setActiveTab('텍스트조회'),\n        children: \"\\uD14D\\uC2A4\\uD2B8\\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === '마이닝' ? 'active' : ''}`,\n        onClick: () => setActiveTab('마이닝'),\n        children: \"\\uB9C8\\uC774\\uB2DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 689,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderCombinationTextList, \"PLc+RAvxIj5FrPI0DM6I8ZcyG5k=\");\n_c = HeaderCombinationTextList;\nexport default HeaderCombinationTextList;\nvar _c;\n$RefreshReg$(_c, \"HeaderCombinationTextList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","fetchHeaderCombinationTextList","jsxDEV","_jsxDEV","Fragment","_Fragment","HeaderCombinationTextList","channel","selectedCombination","selectedCombinations","_s","combinationTexts","setCombinationTexts","loading","setLoading","error","setError","activeTab","setActiveTab","sectionName","setSectionName","miningData","setMiningData","expandedNodes","setExpandedNodes","minSupport","setMinSupport","minConfidence","setMinConfidence","maxDepth","setMaxDepth","showSettingsPopup","setShowSettingsPopup","selectedNode","setSelectedNode","searchQuery","setSearchQuery","sortOption","setSortOption","settingsPopupRef","effectiveCombinations","length","getCombinationTexts","response","console","log","list","err","message","generateFPGrowthTree","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","textData","transactions","filter","item","text","map","includes","split","segment","trim","trimmedText","transaction","itemCounts","totalTransactions","forEach","minSupportCount","Math","max","floor","frequentItems","Object","keys","sort","a","b","orderedTransactions","rootItem","singleTreeRoot","id","name","support","confidence","children","patternSupports","i","j","pattern","key","join","buildOrderedFPTree","currentNode","level","currentItemIndex","indexOf","nextItem","patternKey","childNode","push","localeCompare","initialExpanded","expandAllNodes","node","child","toggleNode","nodeId","prev","handleNodeSelect","toggleAllNodes","expand","newExpandedState","processNode","root","getFilteredNodes","nodes","query","searchLower","toLowerCase","filterNode","filteredMiningData","clonedData","JSON","parse","stringify","handleSupportChange","e","value","parseFloat","isNaN","handleConfidenceChange","handleDepthChange","parseInt","handleSearchChange","handleSortChange","handleSectionNameChange","renderTreeNode","isExpanded","hasChildren","isSelected","depth","className","onClick","style","paddingLeft","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","title","round","toFixed","renderSettingsPopup","ref","type","min","step","onChange","renderMiningView","countTotalPatterns","placeholder","data","count","countNodes","handleCreateSection","alert","renderSectionCreationArea","selectedCount","htmlFor","disabled","index","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/HeaderCombinationTextList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { fetchHeaderCombinationTextList } from '../services/api';\nimport './HeaderCombinationTextList.css';\n\nconst HeaderCombinationTextList = ({ channel, selectedCombination, selectedCombinations = [] }) => {\n  const [combinationTexts, setCombinationTexts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('텍스트조회');\n  const [sectionName, setSectionName] = useState('');\n  // Mining states\n  const [miningData, setMiningData] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState({});\n  const [minSupport, setMinSupport] = useState(0.01);\n  const [minConfidence, setMinConfidence] = useState(0.01);\n  const [maxDepth, setMaxDepth] = useState(100);\n  const [showSettingsPopup, setShowSettingsPopup] = useState(false);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortOption, setSortOption] = useState('support');\n  const settingsPopupRef = useRef(null);\n\n  // 실제 사용할 조합 목록 결정 (단일 selectedCombination과 다중 selectedCombinations 지원)\n  const effectiveCombinations = useMemo(() => {\n    // 다중 선택이 있는 경우 우선 사용\n    if (selectedCombinations && selectedCombinations.length > 0) {\n      return selectedCombinations;\n    }\n    // 다중 선택이 없고 단일 선택이 있는 경우\n    if (selectedCombination) {\n      return [selectedCombination];\n    }\n    // 아무것도 선택되지 않은 경우\n    return [];\n  }, [selectedCombination, selectedCombinations]);\n\n  useEffect(() => {\n    const getCombinationTexts = async () => {\n      if (!channel || effectiveCombinations.length === 0) return;\n      \n      setLoading(true);\n      try {\n        // 모든 선택된 조합을 API에 전달\n        const response = await fetchHeaderCombinationTextList(channel, effectiveCombinations);\n        console.log('Combination texts response:', response);\n        setCombinationTexts(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationTexts([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCombinationTexts();\n  }, [channel, effectiveCombinations]);\n\n  // Generate FP-growth tree when combination texts change\n  useEffect(() => {\n    if (combinationTexts && combinationTexts.length > 0 && activeTab === '마이닝') {\n      generateFPGrowthTree(combinationTexts);\n    } else {\n      setMiningData(null);\n    }\n  }, [combinationTexts, activeTab, minSupport, minConfidence, maxDepth]);\n\n  // Close settings popup when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (settingsPopupRef.current && !settingsPopupRef.current.contains(event.target)) {\n        setShowSettingsPopup(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Function to generate FP-growth tree from text data\n  const generateFPGrowthTree = (textData) => {\n    if (!textData || textData.length === 0) {\n      setMiningData(null);\n      return;\n    }\n\n    // Step 1: Create transactions by splitting each text by '>' and trimming\n    const transactions = textData\n      .filter(item => item.text)\n      .map(item => {\n        // 문자열에 '>' 문자가 있는지 확인\n        if (item.text.includes('>')) {\n          // '>' 있으면 분할 처리\n          return item.text\n            .split('>')\n            .map(segment => segment.trim())\n            .filter(segment => segment.length > 0);\n        } else {\n          // '>' 없으면 전체 텍스트를 하나의 항목으로 처리\n          const trimmedText = item.text.trim();\n          return trimmedText.length > 0 ? [trimmedText] : [];\n        }\n      })\n      .filter(transaction => transaction.length > 0);\n\n    // Step 2: Count item frequencies\n    const itemCounts = {};\n    const totalTransactions = transactions.length;\n    \n    transactions.forEach(transaction => {\n      transaction.forEach(item => {\n        itemCounts[item] = (itemCounts[item] || 0) + 1;\n      });\n    });\n\n    // Calculate minimum support threshold - use absolute minimum of 2\n    const minSupportCount = Math.max(2, Math.floor(totalTransactions * minSupport));\n    \n    // Get frequent items sorted by frequency\n    const frequentItems = Object.keys(itemCounts)\n      .filter(item => itemCounts[item] >= minSupportCount)\n      .sort((a, b) => itemCounts[b] - itemCounts[a]);\n    \n    // Create single tree structure with most frequent item as root\n    if (frequentItems.length === 0) {\n      setMiningData([]);\n      return;\n    }\n    \n    // FP-GROWTH for a single hierarchical tree\n    // Step 3: Reorder transactions based on frequency\n    const orderedTransactions = transactions.map(transaction => {\n      return transaction\n        .filter(item => frequentItems.includes(item))\n        .sort((a, b) => itemCounts[b] - itemCounts[a]);\n    }).filter(transaction => transaction.length > 0);\n    \n    // Create a single root node for the most frequent item\n    const rootItem = frequentItems[0];\n    \n    const singleTreeRoot = {\n      id: rootItem,\n      name: rootItem,\n      support: itemCounts[rootItem],\n      confidence: itemCounts[rootItem] / totalTransactions,\n      children: []\n    };\n    \n    // Create a mapping of patterns to their support count\n    const patternSupports = {};\n    \n    // First pass - gather all pattern supports\n    orderedTransactions.forEach(transaction => {\n      if (transaction.length < 2) return;\n      \n      for (let i = 0; i < transaction.length; i++) {\n        for (let j = i + 1; j < transaction.length; j++) {\n          const pattern = [transaction[i], transaction[j]];\n          const key = pattern.join('-');\n          patternSupports[key] = (patternSupports[key] || 0) + 1;\n        }\n      }\n    });\n    \n    // Then build tree with those precomputed pattern supports\n    const buildOrderedFPTree = (currentNode, level) => {\n      if (level >= maxDepth) return;\n      \n      const currentItemIndex = frequentItems.indexOf(currentNode.name);\n      \n      for (let i = currentItemIndex + 1; i < frequentItems.length; i++) {\n        const nextItem = frequentItems[i];\n        \n        // Check if the pair meets minimum support\n        const patternKey = [currentNode.name, nextItem].join('-');\n        const support = patternSupports[patternKey] || 0;\n        \n        if (support >= Math.max(2, minSupportCount)) {\n          const confidence = support / itemCounts[currentNode.name];\n          \n          if (confidence >= (level > 2 ? minConfidence/2 : minConfidence)) {\n            const childNode = {\n              id: `${currentNode.id}-${nextItem}`,\n              name: nextItem,\n              support: support,\n              confidence: confidence,\n              children: []\n            };\n            \n            currentNode.children.push(childNode);\n            buildOrderedFPTree(childNode, level + 1);\n          }\n        }\n      }\n      \n      // Sort children based on sortOption\n      if (currentNode.children.length > 0) {\n        if (sortOption === 'support') {\n          currentNode.children.sort((a, b) => b.support - a.support);\n        } else if (sortOption === 'confidence') {\n          currentNode.children.sort((a, b) => b.confidence - a.confidence);\n        } else if (sortOption === 'name') {\n          currentNode.children.sort((a, b) => a.name.localeCompare(b.name));\n        }\n      }\n    };\n    \n    // Start building the tree from the root\n    buildOrderedFPTree(singleTreeRoot, 1);\n    \n    // Initialize expanded nodes for visualization - initially expand all nodes\n    const initialExpanded = {};\n    \n    // Function to recursively expand all nodes\n    const expandAllNodes = (node) => {\n      if (!node) return;\n      \n      initialExpanded[node.id] = true;\n      \n      if (node.children && node.children.length > 0) {\n        node.children.forEach(child => expandAllNodes(child));\n      }\n    };\n    \n    // Start expanding from the root\n    expandAllNodes(singleTreeRoot);\n    \n    // Set the result as a single-item array containing the root\n    setMiningData([singleTreeRoot]);\n    setExpandedNodes(initialExpanded);\n  };\n\n  // Toggle node expansion\n  const toggleNode = (nodeId) => {\n    setExpandedNodes(prev => ({\n      ...prev,\n      [nodeId]: !prev[nodeId]\n    }));\n  };\n\n  // Select a node\n  const handleNodeSelect = (node) => {\n    setSelectedNode(node === selectedNode ? null : node);\n  };\n\n  // Expand/collapse all nodes\n  const toggleAllNodes = (expand) => {\n    if (!miningData || miningData.length === 0) return;\n    \n    const newExpandedState = {};\n    \n    const processNode = (node) => {\n      if (!node) return;\n      \n      newExpandedState[node.id] = expand;\n      \n      if (node.children && node.children.length > 0) {\n        node.children.forEach(child => processNode(child));\n      }\n    };\n    \n    miningData.forEach(root => processNode(root));\n    setExpandedNodes(newExpandedState);\n  };\n\n  // Filter nodes based on search query\n  const getFilteredNodes = (nodes, query) => {\n    if (!query || !nodes) return nodes;\n    \n    const searchLower = query.toLowerCase();\n    \n    const filterNode = (node) => {\n      if (node.name.toLowerCase().includes(searchLower)) {\n        return true;\n      }\n      \n      if (node.children && node.children.length > 0) {\n        node.children = node.children.filter(child => filterNode(child));\n        return node.children.length > 0;\n      }\n      \n      return false;\n    };\n    \n    return nodes.filter(node => filterNode(node));\n  };\n\n  // Get filtered mining data\n  const filteredMiningData = useMemo(() => {\n    if (!miningData || !searchQuery) return miningData;\n    \n    // Deep clone the data to avoid modifying the original\n    const clonedData = JSON.parse(JSON.stringify(miningData));\n    \n    return getFilteredNodes(clonedData, searchQuery);\n  }, [miningData, searchQuery]);\n\n  const handleSupportChange = (e) => {\n    const value = parseFloat(e.target.value);\n    if (!isNaN(value) && value >= 0 && value <= 1) {\n      setMinSupport(value);\n    }\n  };\n\n  const handleConfidenceChange = (e) => {\n    const value = parseFloat(e.target.value);\n    if (!isNaN(value) && value >= 0 && value <= 1) {\n      setMinConfidence(value);\n    }\n  };\n\n  const handleDepthChange = (e) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value > 0) {\n      setMaxDepth(value);\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSortChange = (e) => {\n    setSortOption(e.target.value);\n    // Regenerate the tree with the new sort option\n    if (combinationTexts.length > 0) {\n      generateFPGrowthTree(combinationTexts);\n    }\n  };\n\n  const handleSectionNameChange = (e) => {\n    setSectionName(e.target.value);\n  };\n\n  // Render tree node with enhanced visual design\n  const renderTreeNode = (node, level = 0) => {\n    if (!node) return null;\n    \n    const isExpanded = expandedNodes[node.id];\n    const hasChildren = node.children && node.children.length > 0;\n    const isSelected = selectedNode && selectedNode.id === node.id;\n    const depth = node.id.split('-').length;\n    \n    return (\n      <div \n        className={`tree-node depth-${depth} ${isSelected ? 'selected' : ''}`} \n        key={node.id}\n      >\n        <div \n          className=\"node-header\" \n          onClick={() => handleNodeSelect(node)}\n          style={{ paddingLeft: `${level * 20}px` }}\n        >\n          {hasChildren && (\n            <span \n              className={`toggle-icon ${isExpanded ? 'expanded' : 'collapsed'}`}\n              onClick={(e) => {\n                e.stopPropagation();\n                toggleNode(node.id);\n              }}\n            >\n              {isExpanded ? '▼' : '►'}\n            </span>\n          )}\n          <span className=\"node-name\">\n            {node.name}\n          </span>\n          <span className=\"node-stats\">\n            <span className=\"support-badge\" title=\"지지도(발생 빈도)\">\n              {Math.round(node.support)}\n            </span>\n            <span className=\"confidence-badge\" title=\"신뢰도(연관성 강도)\">\n              {(node.confidence * 100).toFixed(1)}%\n            </span>\n          </span>\n        </div>\n        \n        {isExpanded && hasChildren && (\n          <div className=\"node-children\">\n            {node.children.map(child => renderTreeNode(child, level + 1))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Render settings popup\n  const renderSettingsPopup = () => {\n    if (!showSettingsPopup) return null;\n    \n    return (\n      <div className=\"settings-popup-overlay\">\n        <div className=\"settings-popup\" ref={settingsPopupRef}>\n          <div className=\"settings-popup-header\">\n            <h3>마이닝 설정</h3>\n            <button \n              className=\"close-popup-btn\"\n              onClick={() => setShowSettingsPopup(false)}\n            >\n              ✕\n            </button>\n          </div>\n          <div className=\"settings-popup-content\">\n            <div className=\"setting-group\">\n              <label>최소 지지도:</label>\n              <input \n                type=\"number\" \n                min=\"0.01\" \n                max=\"1\" \n                step=\"0.01\" \n                value={minSupport} \n                onChange={handleSupportChange}\n              />\n              <span className=\"setting-description\">\n                전체 거래 중 해당 패턴이 나타나는 비율 (0.01 ~ 1)\n              </span>\n            </div>\n            <div className=\"setting-group\">\n              <label>최소 신뢰도:</label>\n              <input \n                type=\"number\" \n                min=\"0.01\" \n                max=\"1\" \n                step=\"0.01\" \n                value={minConfidence} \n                onChange={handleConfidenceChange}\n              />\n              <span className=\"setting-description\">\n                선행 항목이 있을 때 결과 항목이 나타날 확률 (0.01 ~ 1)\n              </span>\n            </div>\n            <div className=\"setting-group\">\n              <label>최대 깊이:</label>\n              <input \n                type=\"number\" \n                min=\"1\" \n                max=\"100\" \n                step=\"1\" \n                value={maxDepth} \n                onChange={handleDepthChange}\n              />\n              <span className=\"setting-description\">\n                패턴의 최대 길이 설정 (1 ~ 100)\n              </span>\n            </div>\n            <div className=\"setting-group\">\n              <label>정렬 기준:</label>\n              <select value={sortOption} onChange={handleSortChange}>\n                <option value=\"support\">지지도</option>\n                <option value=\"confidence\">신뢰도</option>\n                <option value=\"name\">이름</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"settings-popup-footer\">\n            <button \n              className=\"apply-settings-btn\"\n              onClick={() => setShowSettingsPopup(false)}\n            >\n              적용\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Render mining view with improved layout and design\n  const renderMiningView = () => {\n    return (\n      <div className=\"mining-view-container\">\n        <div className=\"mining-header\">\n          <h3 className=\"mining-title\">패턴 마이닝 분석</h3>\n          <div className=\"mining-info\">\n            {filteredMiningData && filteredMiningData.length > 0 && (\n              <div className=\"mining-stats\">\n                <span className=\"mining-stat-item\">\n                  총 트랜잭션: <strong>{combinationTexts.length}</strong>\n                </span>\n                <span className=\"mining-stat-item\">\n                  발견된 패턴: <strong>{countTotalPatterns(filteredMiningData)}</strong>\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"mining-toolbar\">\n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              className=\"search-input\"\n              placeholder=\"패턴 검색...\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n            />\n            {searchQuery && (\n              <button \n                className=\"clear-search-btn\"\n                onClick={() => setSearchQuery('')}\n              >\n                ✕\n              </button>\n            )}\n          </div>\n          <div className=\"mining-controls\">\n            <button \n              className=\"settings-btn\"\n              onClick={() => setShowSettingsPopup(true)}\n              title=\"마이닝 설정\"\n            >\n              <span className=\"settings-icon\">⚙️</span> 설정\n            </button>\n            <button \n              className=\"expand-all-btn\"\n              onClick={() => toggleAllNodes(true)}\n              title=\"모두 펼치기\"\n            >\n              <span className=\"expand-icon\">▼</span> 모두 펼치기\n            </button>\n            <button \n              className=\"collapse-all-btn\"\n              onClick={() => toggleAllNodes(false)}\n              title=\"모두 접기\"\n            >\n              <span className=\"collapse-icon\">►</span> 모두 접기\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"fp-tree-container\">\n          {loading ? (\n            <div className=\"loading-container\">\n              <div className=\"loading-spinner\"></div>\n              <div className=\"loading-text\">마이닝 데이터 분석 중...</div>\n            </div>\n          ) : error ? (\n            <div className=\"error-container\">\n              <div className=\"error-icon\">⚠️</div>\n              <div className=\"error-message\">에러: {error}</div>\n            </div>\n          ) : filteredMiningData && filteredMiningData.length > 0 ? (\n            <>\n              <div className=\"tree-legend\">\n                <div className=\"legend-item\">\n                  <span className=\"legend-color-node\"></span>\n                  <span className=\"legend-label\">패턴 노드</span>\n                </div>\n                <div className=\"legend-item\">\n                  <span className=\"legend-color-selected\"></span>\n                  <span className=\"legend-label\">선택된 노드</span>\n                </div>\n                <div className=\"legend-item\">\n                  <span className=\"support-badge-small\"></span>\n                  <span className=\"legend-label\">지지도(빈도수)</span>\n                </div>\n                <div className=\"legend-item\">\n                  <span className=\"confidence-badge-small\"></span>\n                  <span className=\"legend-label\">신뢰도(%)</span>\n                </div>\n              </div>\n              \n              <div className=\"tree-container\">\n                {filteredMiningData.map(root => renderTreeNode(root))}\n              </div>\n              \n              {selectedNode && (\n                <div className=\"selected-node-details\">\n                  <h4>선택된 패턴 상세정보</h4>\n                  <div className=\"node-detail-item\">\n                    <span className=\"detail-label\">패턴:</span>\n                    <span className=\"detail-value\">{selectedNode.name}</span>\n                  </div>\n                  <div className=\"node-detail-item\">\n                    <span className=\"detail-label\">지지도:</span>\n                    <span className=\"detail-value\">{Math.round(selectedNode.support)}</span>\n                  </div>\n                  <div className=\"node-detail-item\">\n                    <span className=\"detail-label\">신뢰도:</span>\n                    <span className=\"detail-value\">{(selectedNode.confidence * 100).toFixed(1)}%</span>\n                  </div>\n                  <div className=\"node-detail-item\">\n                    <span className=\"detail-label\">ID:</span>\n                    <span className=\"detail-value detail-id\">{selectedNode.id}</span>\n                  </div>\n                </div>\n              )}\n            </>\n          ) : (\n            <div className=\"empty-message\">\n              <div className=\"empty-icon\">📊</div>\n              <div className=\"empty-text\">\n                {searchQuery \n                  ? \"검색 결과가 없습니다.\" \n                  : \"마이닝 데이터가 없습니다.\"}\n              </div>\n              <div className=\"empty-subtext\">\n                {searchQuery \n                  ? \"다른 검색어를 시도해보세요.\" \n                  : \"데이터를 불러오거나 설정을 변경해보세요.\"}\n              </div>\n            </div>\n          )}\n        </div>\n        {renderSettingsPopup()}\n      </div>\n    );\n  };\n\n  // Helper function to count total patterns in the tree\n  const countTotalPatterns = (data) => {\n    if (!data || data.length === 0) return 0;\n    \n    let count = 0;\n    \n    const countNodes = (node) => {\n      if (!node) return;\n      \n      count++; // Count this node\n      \n      if (node.children && node.children.length > 0) {\n        node.children.forEach(child => countNodes(child));\n      }\n    };\n    \n    data.forEach(root => countNodes(root));\n    \n    return count;\n  };\n\n  const handleCreateSection = () => {\n    if (!sectionName.trim()) {\n      alert('섹션명을 입력해주세요.');\n      return;\n    }\n    \n    // 여기에 섹션 생성 로직을 추가합니다\n    console.log('섹션 생성:', sectionName, '조합:', effectiveCombinations);\n    // TODO: API 호출 및 성공 후 처리\n    alert(`\"${sectionName}\" 섹션이 생성되었습니다.`);\n    setSectionName('');\n  };\n\n  if (!channel || effectiveCombinations.length === 0) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널과 헤더 조합을 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  const renderSectionCreationArea = () => {\n    // Count of selected combinations\n    const selectedCount = effectiveCombinations.length;\n    \n    return (\n      <div className=\"section-creation-area\">\n        <div className=\"section-creation-header\">\n          <div className=\"section-creation-title\">섹션 생성 영역</div>\n          <div className=\"selected-combination-count\">선택된 조합: {selectedCount}개</div>\n        </div>\n        <div className=\"section-creation-form\">\n          <div className=\"section-input-group\">\n            <label htmlFor=\"section-name\">섹션명:</label>\n            <input \n              type=\"text\" \n              id=\"section-name\" \n              value={sectionName}\n              onChange={handleSectionNameChange}\n              placeholder=\"새 섹션 이름을 입력하세요\"\n              className=\"section-name-input\"\n            />\n          </div>\n          <button \n            className=\"create-section-btn\"\n            onClick={handleCreateSection}\n            disabled={!sectionName.trim()}\n          >\n            섹션 등록\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"column-container\">\n      <h2 className=\"column-title\">섹션 생성</h2>\n      \n      {renderSectionCreationArea()}\n      \n      <div className=\"column-content\">\n        {activeTab === '텍스트조회' ? (\n          loading ? (\n            <div className=\"loading\">로딩 중...</div>\n          ) : error ? (\n            <div className=\"error\">에러: {error}</div>\n          ) : combinationTexts && combinationTexts.length > 0 ? (\n            combinationTexts.map((item, index) => (\n              <div\n                key={index}\n                className=\"column-item\"\n              >\n                <div className=\"item-text\">{item.text}</div>\n                <div className=\"item-count\">({item.count})</div>\n              </div>\n            ))\n          ) : (\n            <div className=\"column-empty\">헤더 조합 텍스트 정보가 없습니다.</div>\n          )\n        ) : (\n          renderMiningView()\n        )}\n      </div>\n      \n      <div className=\"tabs\">\n        <button \n          className={`tab ${activeTab === '텍스트조회' ? 'active' : ''}`}\n          onClick={() => setActiveTab('텍스트조회')}\n        >\n          텍스트조회\n        </button>\n        <button \n          className={`tab ${activeTab === '마이닝' ? 'active' : ''}`}\n          onClick={() => setActiveTab('마이닝')}\n        >\n          마이닝\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderCombinationTextList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}