{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/DataDisplay.js\";\nimport React from 'react';\nimport './SeparationClassifier.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataDisplay = ({\n  processedData,\n  flattenData\n}) => {\n  if (!processedData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\uCC98\\uB9AC\\uD560 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  const renderOriginalCell = row => {\n    if (typeof row.original === 'string') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: row.original.replace(/(\\[.*?\\]|\\(.*?\\)|\\{.*?\\})/g, '<span class=\"highlight-bracket\">$1</span>')\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this);\n    }\n    return String(row.original);\n  };\n  const renderSeparatedValues = row => {\n    if (!row.separated || row.separated.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-values\",\n        children: \"\\uCD94\\uCD9C\\uB41C \\uAC12 \\uC5C6\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    }\n    if (Array.isArray(row.separated) && row.separated.every(v => typeof v === 'string')) {\n      // Old format (just strings)\n      return row.separated.map((val, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value-tag\",\n        children: val\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this));\n    }\n\n    // New format (with metadata)\n    return row.separated.map((item, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `value-tag ${item.source === 'bracket' ? 'bracket-source' : item.source === 'clean-text' ? 'text-source' : 'delimiter-source'}`,\n      children: typeof item === 'string' ? item : item.value\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"data-table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: flattenData(processedData).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"original-cell\",\n          children: renderOriginalCell(row)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"separated-cell\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separated-values\",\n            children: renderSeparatedValues(row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DataDisplay","processedData","flattenData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderOriginalCell","row","original","dangerouslySetInnerHTML","__html","replace","String","renderSeparatedValues","separated","length","Array","isArray","every","v","map","val","idx","item","source","value","index","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/DataDisplay.js"],"sourcesContent":["import React from 'react';\nimport './SeparationClassifier.css';\n\nconst DataDisplay = ({ processedData, flattenData }) => {\n  if (!processedData) {\n    return <div className=\"no-data\">처리할 데이터가 없습니다</div>;\n  }\n\n  const renderOriginalCell = (row) => {\n    if (typeof row.original === 'string') {\n      return (\n        <div dangerouslySetInnerHTML={{ \n          __html: row.original.replace(\n            /(\\[.*?\\]|\\(.*?\\)|\\{.*?\\})/g, \n            '<span class=\"highlight-bracket\">$1</span>'\n          )\n        }} />\n      );\n    }\n    return String(row.original);\n  };\n\n  const renderSeparatedValues = (row) => {\n    if (!row.separated || row.separated.length === 0) {\n      return <span className=\"no-values\">추출된 값 없음</span>;\n    }\n\n    if (Array.isArray(row.separated) && row.separated.every(v => typeof v === 'string')) {\n      // Old format (just strings)\n      return row.separated.map((val, idx) => (\n        <span key={idx} className=\"value-tag\">{val}</span>\n      ));\n    } \n    \n    // New format (with metadata)\n    return row.separated.map((item, idx) => (\n      <span \n        key={idx} \n        className={`value-tag ${item.source === 'bracket' ? 'bracket-source' : \n                              item.source === 'clean-text' ? 'text-source' : 'delimiter-source'}`}\n      >\n        {typeof item === 'string' ? item : item.value}\n      </span>\n    ));\n  };\n\n  return (\n    <table className=\"data-table\">\n      <tbody>\n        {flattenData(processedData).map((row, index) => (\n          <tr key={index}>\n            <td className=\"original-cell\">\n              {renderOriginalCell(row)}\n            </td>\n            <td className=\"separated-cell\">\n              <div className=\"separated-values\">\n                {renderSeparatedValues(row)}\n              </div>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DataDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}