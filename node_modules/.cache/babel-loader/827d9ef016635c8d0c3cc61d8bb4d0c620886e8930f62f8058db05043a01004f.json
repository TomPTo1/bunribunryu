{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderCombinationTextList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchHeaderCombinationTextList } from '../services/api';\nimport Column from './Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderCombinationTextList = ({\n  channel,\n  selectedCombination\n}) => {\n  _s();\n  const [combinationTexts, setCombinationTexts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getCombinationTexts = async () => {\n      if (!channel || !selectedCombination) return;\n      setLoading(true);\n      try {\n        const response = await fetchHeaderCombinationTextList(channel, [selectedCombination]);\n        console.log('Combination texts response:', response);\n        setCombinationTexts(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationTexts([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCombinationTexts();\n  }, [channel, selectedCombination]);\n  if (!channel || !selectedCombination) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uACFC \\uD5E4\\uB354 \\uC870\\uD569\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Column, {\n    title: `헤더명 조합 텍스트 조회: ${selectedCombination}`,\n    items: combinationTexts,\n    renderItem: {\n      display: item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-text\",\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-count\",\n          children: [\"(\", item.count, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this),\n      value: item => item.text\n    },\n    loading: loading,\n    error: error,\n    emptyMessage: \"\\uD5E4\\uB354 \\uC870\\uD569 \\uD14D\\uC2A4\\uD2B8 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderCombinationTextList, \"71duJ1LVTH1LgbRCLQEYpVOLDUU=\");\n_c = HeaderCombinationTextList;\nexport default HeaderCombinationTextList;\nvar _c;\n$RefreshReg$(_c, \"HeaderCombinationTextList\");","map":{"version":3,"names":["React","useState","useEffect","fetchHeaderCombinationTextList","Column","jsxDEV","_jsxDEV","HeaderCombinationTextList","channel","selectedCombination","_s","combinationTexts","setCombinationTexts","loading","setLoading","error","setError","getCombinationTexts","response","console","log","list","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","items","renderItem","display","item","text","count","value","emptyMessage","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderCombinationTextList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchHeaderCombinationTextList } from '../services/api';\nimport Column from './Column';\n\nconst HeaderCombinationTextList = ({ channel, selectedCombination }) => {\n  const [combinationTexts, setCombinationTexts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCombinationTexts = async () => {\n      if (!channel || !selectedCombination) return;\n      \n      setLoading(true);\n      try {\n        const response = await fetchHeaderCombinationTextList(channel, [selectedCombination]);\n        console.log('Combination texts response:', response);\n        setCombinationTexts(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationTexts([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCombinationTexts();\n  }, [channel, selectedCombination]);\n\n  if (!channel || !selectedCombination) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널과 헤더 조합을 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  return (\n    <Column\n      title={`헤더명 조합 텍스트 조회: ${selectedCombination}`}\n      items={combinationTexts}\n      renderItem={{\n        display: item => (\n          <div>\n            <div className=\"item-text\">{item.text}</div>\n            <div className=\"item-count\">({item.count})</div>\n          </div>\n        ),\n        value: item => item.text\n      }}\n      loading={loading}\n      error={error}\n      emptyMessage=\"헤더 조합 텍스트 정보가 없습니다.\"\n    />\n  );\n};\n\nexport default HeaderCombinationTextList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}