{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/HeaderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { fetchHeaderList, searchHeaderList, fetchHeaderSimilarityList } from '../services/api';\nimport './Column.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeaderList = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  channel,\n  onHeaderSelect,\n  selectedHeader,\n  similarityGroups,\n  headerSearchTerm,\n  onSimilarityGroupUpdate,\n  onRemoveGroup,\n  similarityViewTrigger,\n  onSimilarityViewProcessed\n}, ref) => {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('all'); // 'all', 'withGroup', or 'withoutGroup'\n  const [headerToGroupMap, setHeaderToGroupMap] = useState({});\n  const [groupedHeaders, setGroupedHeaders] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n  const [ignoreHeaderSearchTerm, setIgnoreHeaderSearchTerm] = useState(false);\n\n  // Added for similar header selection functionality\n  const [viewMode, setViewMode] = useState('list'); // 'list' or 'similarSelection'\n  const [similarHeaders, setSimilarHeaders] = useState([]);\n  const [selectedSimilarityGroup, setSelectedSimilarityGroup] = useState([]);\n  const [representativeHeader, setRepresentativeHeader] = useState(null);\n  const [isSelectedGroupCollapsed, setIsSelectedGroupCollapsed] = useState(false);\n  const [similarHeaderLoading, setSimilarHeaderLoading] = useState(false);\n  const [similarHeaderError, setSimilarHeaderError] = useState(null);\n  const [currentSimilarityHeader, setCurrentSimilarityHeader] = useState(null);\n  const [filteredSimilarHeaders, setFilteredSimilarHeaders] = useState([]);\n\n  // 마지막 클릭된 헤더와 타임스탬프를 저장\n  const lastClickRef = useRef({\n    header: null,\n    timestamp: 0\n  });\n\n  // Expose functions to parent component\n  useImperativeHandle(ref, () => ({\n    viewSimilarHeaders: header => {\n      handleViewSimilarHeaders(header);\n    }\n  }));\n\n  // Handle headerSearchTerm updates from right-clicks in other components\n  useEffect(() => {\n    // Skip updates if we've explicitly cleared the search term or if in similarity view\n    if (ignoreHeaderSearchTerm || viewMode !== 'list' || !headerSearchTerm) {\n      return;\n    }\n\n    // Update the search term only when there's a new value from props\n    if (headerSearchTerm !== searchTerm) {\n      setSearchTerm(headerSearchTerm);\n      setIsSearchMode(true);\n    }\n  }, [headerSearchTerm, searchTerm, viewMode, ignoreHeaderSearchTerm]);\n\n  // Handle similarity view trigger from HeaderCombinationList\n  useEffect(() => {\n    if (similarityViewTrigger && channel) {\n      handleViewSimilarHeaders(similarityViewTrigger);\n      // Call the callback to reset the trigger\n      if (onSimilarityViewProcessed) {\n        onSimilarityViewProcessed();\n      }\n    }\n  }, [similarityViewTrigger, channel]);\n  useEffect(() => {\n    if (!channel) return;\n    const getHeaders = async () => {\n      setLoading(true);\n      try {\n        let response;\n        if (isSearchMode && searchTerm.trim()) {\n          // Use search API with keyword\n          response = await searchHeaderList(channel, searchTerm);\n        } else {\n          // Use regular API without keyword\n          response = await fetchHeaderList(channel);\n        }\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getHeaders();\n  }, [channel, searchTerm, isSearchMode]);\n\n  // Handle search form submission\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      setIsSearchMode(true);\n    } else {\n      setIsSearchMode(false);\n    }\n  };\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n\n    // When user manually edits the search field, we should ignore headerSearchTerm updates\n    if (headerSearchTerm && value !== headerSearchTerm) {\n      setIgnoreHeaderSearchTerm(true);\n    }\n    if (!value.trim()) {\n      setIsSearchMode(false);\n    }\n  };\n\n  // Clear search button handler with proper state updates\n  const handleClearSearch = () => {\n    setSearchTerm('');\n    setIsSearchMode(false);\n    setIgnoreHeaderSearchTerm(true);\n\n    // Also notify parent to clear headerSearchTerm\n    if (onSimilarityViewProcessed) {\n      onSimilarityViewProcessed(true);\n    }\n  };\n\n  // 유사군이 변경될 때마다 관련 데이터를 업데이트\n  useEffect(() => {\n    console.log('HeaderList - similarityGroups 변경감지:', similarityGroups);\n\n    // 유사군에 포함된 모든 헤더 추출\n    const newGroupedHeaders = similarityGroups && similarityGroups.length > 0 ? similarityGroups.flatMap(group =>\n    // 대표어를 제외한 헤더만 포함\n    group.items.filter(item => item.header !== group.representative).map(item => item.header)) : [];\n\n    // 각 헤더별로 유사군 매핑 생성\n    const newHeaderToGroupMap = {};\n    if (similarityGroups && similarityGroups.length > 0) {\n      similarityGroups.forEach((group, idx) => {\n        console.log(`HeaderList - 유사군 #${idx + 1} 처리:`, group.representative, group.items.length);\n\n        // 대표어에 유사군 카운트 태그 추가\n        newHeaderToGroupMap[group.representative] = {\n          isRepresentative: true,\n          count: group.items.length\n        };\n\n        // 대표어가 아닌 항목들은 매핑에서 제외 (목록에 표시되지 않음)\n        group.items.forEach(item => {\n          if (item.header !== group.representative) {\n            newHeaderToGroupMap[item.header] = {\n              representative: group.representative,\n              count: group.items.length\n            };\n          }\n        });\n      });\n    }\n    console.log('HeaderList - headerToGroupMap 업데이트:', newHeaderToGroupMap);\n    console.log('HeaderList - groupedHeaders 업데이트:', newGroupedHeaders);\n    setGroupedHeaders(newGroupedHeaders);\n    setHeaderToGroupMap(newHeaderToGroupMap);\n  }, [similarityGroups]);\n\n  // Similar header selection functions\n  const handleViewSimilarHeaders = header => {\n    if (!channel || !header) return;\n\n    // Reset selection state\n    setSelectedSimilarityGroup([]);\n    setRepresentativeHeader(null);\n\n    // Store the current header being viewed\n    setCurrentSimilarityHeader(header);\n\n    // Change view mode and fetch similar headers\n    setViewMode('similarSelection');\n    fetchSimilarHeaders(header);\n  };\n  const fetchSimilarHeaders = async header => {\n    if (!channel || !header) return;\n    setSimilarHeaderLoading(true);\n    try {\n      const response = await fetchHeaderSimilarityList(channel, header);\n      console.log('Similar headers response:', response);\n      const headerList = response.list || [];\n      setSimilarHeaders(headerList);\n      setFilteredSimilarHeaders(headerList);\n      setSimilarHeaderError(null);\n    } catch (err) {\n      setSimilarHeaderError(err.message);\n      setSimilarHeaders([]);\n      setFilteredSimilarHeaders([]);\n    } finally {\n      setSimilarHeaderLoading(false);\n    }\n  };\n  const handleBackToHeaderList = () => {\n    // First set view mode to list\n    setViewMode('list');\n\n    // Reset similarity-related states\n    setSelectedSimilarityGroup([]);\n    setRepresentativeHeader(null);\n    setCurrentSimilarityHeader(null);\n\n    // Reset search immediately and mark to ignore headerSearchTerm updates\n    setSearchTerm('');\n    setIsSearchMode(false);\n    setIgnoreHeaderSearchTerm(true);\n\n    // Notify parent to clear headerSearchTerm\n    if (onSimilarityViewProcessed) {\n      onSimilarityViewProcessed(true); // Pass true to indicate search term should be cleared\n    }\n  };\n  const handleSimilarHeaderSelect = (header, setAsRepresentative = false) => {\n    // 중복 클릭 방지 및 디바운싱\n    const now = Date.now();\n    if (lastClickRef.current.header === header && now - lastClickRef.current.timestamp < 500) {\n      // 0.5초 이내에 동일한 헤더를 다시 클릭한 경우 무시\n      return;\n    }\n\n    // 클릭 정보 업데이트\n    lastClickRef.current = {\n      header,\n      timestamp: now\n    };\n\n    // 버그 수정: 중복 호출 방지를 위한 체크 추가\n    const headerObj = similarHeaders.find(h => h.header === header);\n    if (!headerObj) return; // 헤더가 존재하지 않으면 무시\n\n    // 이미 선택된 헤더인지 확인\n    const isAlreadySelected = selectedSimilarityGroup.some(h => h.header === header);\n    const isRepresentative = representativeHeader === header;\n    if (isAlreadySelected) {\n      if (setAsRepresentative && !isRepresentative) {\n        // 이미 선택된 헤더를 대표어로 설정 (우클릭)\n        setRepresentativeHeader(header);\n      } else {\n        // 이미 선택된 헤더의 선택 해제 (다시 클릭)\n        const newGroup = selectedSimilarityGroup.filter(h => h.header !== header);\n        setSelectedSimilarityGroup(newGroup);\n\n        // 대표어가 제거된 경우 새로운 대표어 선택\n        if (isRepresentative && newGroup.length > 0) {\n          setRepresentativeHeader(newGroup[0].header);\n        } else if (isRepresentative) {\n          setRepresentativeHeader(null);\n        }\n      }\n    } else {\n      // 선택되지 않은 경우, 선택에 추가\n      const newGroup = [...selectedSimilarityGroup, headerObj];\n      setSelectedSimilarityGroup(newGroup);\n\n      // 우클릭인 경우에만 대표어로 설정 (명시적으로 로직 분리)\n      if (setAsRepresentative) {\n        // 우클릭 - 대표어로 설정\n        setRepresentativeHeader(header);\n      }\n      // 좌클릭은 단순히 선택만 되고 대표어로 설정되지 않음\n    }\n  };\n  const handleRemoveFromGroup = header => {\n    setSelectedSimilarityGroup(prev => prev.filter(h => h.header !== header));\n    // If representative header is removed, reset it\n    if (representativeHeader === header) {\n      setRepresentativeHeader(selectedSimilarityGroup.length > 1 ? selectedSimilarityGroup[0].header : null);\n    }\n  };\n  const handleSetRepresentative = header => {\n    setRepresentativeHeader(header);\n  };\n  const handleSaveGroup = () => {\n    if (selectedSimilarityGroup.length > 0 && representativeHeader) {\n      // 유사군 데이터를 일관된 형식으로 변환\n      const groupData = selectedSimilarityGroup.map(item => ({\n        header: item.header,\n        // 기타 필요한 속성 유지\n        ...item\n      }));\n\n      // 선택한 그룹에 현재 선택한 헤더가 없다면 추가\n      const hasCurrentHeader = groupData.some(item => item.header === currentSimilarityHeader);\n      if (!hasCurrentHeader && currentSimilarityHeader) {\n        groupData.push({\n          header: currentSimilarityHeader\n        });\n      }\n      console.log('저장할 유사군 데이터:', groupData, representativeHeader);\n      onSimilarityGroupUpdate && onSimilarityGroupUpdate(groupData, representativeHeader);\n\n      // 저장 후에도 화면을 유지\n      // setViewMode('list'); 삭제\n\n      // 저장 후에도 선택된 그룹과 대표어 유지\n      // setSelectedSimilarityGroup([]);\n      // setRepresentativeHeader(null);\n    }\n  };\n\n  // 유사군에 속하지 않거나 대표어인 헤더만 표시\n  const filteredHeaders = headers.filter(item => !groupedHeaders.includes(item.header));\n\n  // 유사군이 있는 헤더 (대표어)와 없는 헤더를 구분\n  const headersWithGroups = filteredHeaders.filter(item => headerToGroupMap[item.header] && headerToGroupMap[item.header].isRepresentative);\n  const headersWithoutGroups = filteredHeaders.filter(item => !headerToGroupMap[item.header] || !headerToGroupMap[item.header].isRepresentative);\n\n  // 활성 탭에 따라 표시할 헤더 목록 선택\n  let displayHeaders = filteredHeaders;\n  if (activeTab === 'withGroup') {\n    displayHeaders = headersWithGroups;\n  } else if (activeTab === 'withoutGroup') {\n    displayHeaders = headersWithoutGroups;\n  }\n\n  // Handle search within similar headers\n  const handleSimilarHeaderSearch = e => {\n    const searchValue = e.target.value;\n    setSearchTerm(searchValue);\n    if (!searchValue.trim()) {\n      setFilteredSimilarHeaders(similarHeaders);\n      setIsSearchMode(false);\n    } else {\n      setIsSearchMode(true);\n      const filtered = similarHeaders.filter(item => item.header.toLowerCase().includes(searchValue.toLowerCase()));\n      setFilteredSimilarHeaders(filtered);\n    }\n  };\n  if (!channel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Create a list of all headers that are already part of saved groups\n  const savedGroupHeaders = similarityGroups ? similarityGroups.flatMap(group => group.items.map(item => item.header)) : [];\n\n  // Filter out headers that are already in the selected group or in any saved group\n  const availableSimilarHeaders = filteredSimilarHeaders.filter(h => !selectedSimilarityGroup.some(selected => selected.header === h.header) && !savedGroupHeaders.includes(h.header));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `column-container ${viewMode === 'similarSelection' ? 'similarity-view' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"column-title\",\n      children: viewMode === 'list' ? '헤더 목록' : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: handleBackToHeaderList,\n          children: \"\\u2190 \\uD5E4\\uB354 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title-path\",\n          title: currentSimilarityHeader,\n          children: currentSimilarityHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchSubmit,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: viewMode === 'list' ? handleSearchChange : handleSimilarHeaderSearch,\n          placeholder: viewMode === 'list' ? \"검색어를 입력하세요\" : \"유사 헤더 검색\",\n          className: \"search-input\",\n          readOnly: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), isSearchMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-count\",\n          children: [viewMode === 'list' ? headers.length : filteredSimilarHeaders.length, \"\\uAC74\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), isSearchMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-search-button\",\n          onClick: handleClearSearch,\n          title: \"\\uAC80\\uC0C9 \\uCDE8\\uC18C\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), viewMode === 'list' && !isSearchMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), viewMode === 'list' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-content\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"\\uB85C\\uB529 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [\"\\uC5D0\\uB7EC: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }, this) : displayHeaders.length > 0 ? displayHeaders.map((item, index) => {\n          // 각 헤더 항목 처리 시 로그 추가\n          const hasGroupInfo = headerToGroupMap[item.header];\n          const isRepresentative = hasGroupInfo && headerToGroupMap[item.header].isRepresentative;\n          const groupCount = isRepresentative ? headerToGroupMap[item.header].count : 0;\n          if (isRepresentative) {\n            console.log(`헤더 렌더링 - 대표어 표시: ${item.header}, 유사군 수: ${groupCount}`);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `column-item ${selectedHeader === item.header ? 'selected' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column-item-content\",\n              onClick: () => onHeaderSelect(item.header),\n              children: [item.header, isRepresentative && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"similarity-tag\",\n                title: `${groupCount}개의 유사어가 있습니다`,\n                children: [\"\\uC720\\uC0AC\\uAD70 \", groupCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 25\n              }, this), hasGroupInfo && !isRepresentative && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"similarity-tag\",\n                title: `대표어: ${headerToGroupMap[item.header].representative}`,\n                children: \"\\uC720\\uC0AC\\uAD70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 21\n            }, this), !hasGroupInfo && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"view-similar-btn\",\n              onClick: () => handleViewSimilarHeaders(item.header),\n              title: \"\\uC720\\uC0AC\\uD5E4\\uB354 \\uBCF4\\uAE30\",\n              children: \"\\uC720\\uC0AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-empty\",\n          children: activeTab === 'withGroup' ? '유사군이 있는 헤더가 없습니다.' : activeTab === 'withoutGroup' ? '유사군이 없는 헤더가 없습니다.' : '헤더 정보가 없습니다.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'all' ? 'active' : ''}`,\n          onClick: () => setActiveTab('all'),\n          children: [\"\\uC804\\uCCB4 (\", filteredHeaders.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'withGroup' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withGroup'),\n          children: [\"\\uC720\\uC0AC\\uAD70 \\uC788\\uC74C (\", headersWithGroups.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'withoutGroup' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withoutGroup'),\n          children: [\"\\uC720\\uC0AC\\uAD70 \\uC5C6\\uC74C (\", headersWithoutGroups.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // Similar header selection view\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"similarity-vertical-layout\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"similarity-header-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"group-subtitle\",\n              children: [\"\\uC720\\uC0AC \\uD5E4\\uB354 \\uC120\\uD0DD\", selectedSimilarityGroup.length >= 2 && representativeHeader && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-group-btn action-btn header-action-btn\",\n                onClick: handleSaveGroup,\n                title: \"\\uD604\\uC7AC \\uC120\\uD0DD\\uB41C \\uC720\\uC0AC \\uD5E4\\uB354\\uB97C \\uADF8\\uB8F9\\uC73C\\uB85C \\uC800\\uC7A5\\uD569\\uB2C8\\uB2E4\",\n                children: [\"\\uC720\\uC0AC\\uAD70 \\uC800\\uC7A5 (\", selectedSimilarityGroup.length, \"\\uAC1C)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"click-guide\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guide-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"guide-icon\",\n                  children: \"\\uD83D\\uDDB1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 48\n                }, this), \" \\uC88C\\uD074\\uB9AD: \\uC720\\uC0AC\\uC5B4 \\uC120\\uD0DD\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guide-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"guide-icon\",\n                  children: \"\\uD83D\\uDDB1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 48\n                }, this), \" \\uC6B0\\uD074\\uB9AD: \\uB300\\uD45C\\uC5B4 \\uC120\\uD0DD\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guide-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"guide-icon\",\n                  children: \"\\uD83D\\uDDB1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 48\n                }, this), \" \\uC7AC\\uD074\\uB9AD: \\uC120\\uD0DD \\uD574\\uC81C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"similarity-items\",\n              children: similarHeaderLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                children: \"\\uB85C\\uB529 \\uC911...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this) : similarHeaderError ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: [\"\\uC5D0\\uB7EC: \", similarHeaderError]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this) : filteredSimilarHeaders && filteredSimilarHeaders.length > 0 ? filteredSimilarHeaders.map((item, index) => {\n                // 이미 선택된 항목인지 확인\n                const isSelected = selectedSimilarityGroup.some(h => h.header === item.header);\n                // 대표 헤더인지 확인\n                const isRepresentative = representativeHeader === item.header;\n\n                // 이미 저장된 그룹에 있는지 확인\n                const isSavedInGroup = savedGroupHeaders.includes(item.header);\n\n                // 선택 상태 클래스 결정\n                let statusClass = '';\n                if (isSelected) {\n                  statusClass = isRepresentative ? 'representative' : 'similar';\n                } else if (isSavedInGroup) {\n                  // 저장된 그룹에 있지만 현재 선택되지 않은 항목\n                  const savedGroupInfo = similarityGroups.find(group => group.items.some(g => g.header === item.header));\n                  if (savedGroupInfo) {\n                    statusClass = savedGroupInfo.representative === item.header ? 'saved-representative' : 'saved-similar';\n                  }\n                }\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `similarity-item ${statusClass}`,\n                  onClick: () => handleSimilarHeaderSelect(item.header, false),\n                  onContextMenu: e => {\n                    e.preventDefault(); // 기본 컨텍스트 메뉴 방지\n                    handleSimilarHeaderSelect(item.header, true);\n                  },\n                  children: [item.header, isSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `status-badge ${isRepresentative ? 'representative' : 'similar'}`,\n                    children: isRepresentative ? '대' : '유'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 29\n                  }, this), !isSelected && isSavedInGroup && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge saved\",\n                    children: similarityGroups.find(group => group.items.some(g => g.header === item.header) && group.representative === item.header) ? '대' : '유'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 25\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-state\",\n                children: \"\\uC720\\uC0AC\\uD55C \\uD5E4\\uB354\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'all' ? 'active' : ''}`,\n          onClick: () => setActiveTab('all'),\n          children: [\"\\uC804\\uCCB4 (\", filteredHeaders.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'withGroup' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withGroup'),\n          children: [\"\\uC720\\uC0AC\\uAD70 \\uC788\\uC74C (\", headersWithGroups.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'withoutGroup' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withoutGroup'),\n          children: [\"\\uC720\\uC0AC\\uAD70 \\uC5C6\\uC74C (\", headersWithoutGroups.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n}, \"3jh+Nld6BEQ5+QPRFvqr7J4szLk=\")), \"3jh+Nld6BEQ5+QPRFvqr7J4szLk=\");\n_c2 = HeaderList;\nexport default HeaderList;\nvar _c, _c2;\n$RefreshReg$(_c, \"HeaderList$forwardRef\");\n$RefreshReg$(_c2, \"HeaderList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","fetchHeaderList","searchHeaderList","fetchHeaderSimilarityList","jsxDEV","_jsxDEV","Fragment","_Fragment","HeaderList","_s","_c","channel","onHeaderSelect","selectedHeader","similarityGroups","headerSearchTerm","onSimilarityGroupUpdate","onRemoveGroup","similarityViewTrigger","onSimilarityViewProcessed","ref","headers","setHeaders","loading","setLoading","error","setError","activeTab","setActiveTab","headerToGroupMap","setHeaderToGroupMap","groupedHeaders","setGroupedHeaders","searchTerm","setSearchTerm","isSearchMode","setIsSearchMode","ignoreHeaderSearchTerm","setIgnoreHeaderSearchTerm","viewMode","setViewMode","similarHeaders","setSimilarHeaders","selectedSimilarityGroup","setSelectedSimilarityGroup","representativeHeader","setRepresentativeHeader","isSelectedGroupCollapsed","setIsSelectedGroupCollapsed","similarHeaderLoading","setSimilarHeaderLoading","similarHeaderError","setSimilarHeaderError","currentSimilarityHeader","setCurrentSimilarityHeader","filteredSimilarHeaders","setFilteredSimilarHeaders","lastClickRef","header","timestamp","viewSimilarHeaders","handleViewSimilarHeaders","getHeaders","response","trim","console","log","list","err","message","handleSearchSubmit","e","preventDefault","handleSearchChange","value","target","handleClearSearch","newGroupedHeaders","length","flatMap","group","items","filter","item","representative","map","newHeaderToGroupMap","forEach","idx","isRepresentative","count","fetchSimilarHeaders","headerList","handleBackToHeaderList","handleSimilarHeaderSelect","setAsRepresentative","now","Date","current","headerObj","find","h","isAlreadySelected","some","newGroup","handleRemoveFromGroup","prev","handleSetRepresentative","handleSaveGroup","groupData","hasCurrentHeader","push","filteredHeaders","includes","headersWithGroups","headersWithoutGroups","displayHeaders","handleSimilarHeaderSearch","searchValue","filtered","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","savedGroupHeaders","availableSimilarHeaders","selected","onClick","title","onSubmit","type","onChange","placeholder","readOnly","index","hasGroupInfo","groupCount","isSelected","isSavedInGroup","statusClass","savedGroupInfo","g","onContextMenu","_c2","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/HeaderList.js"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { fetchHeaderList, searchHeaderList, fetchHeaderSimilarityList } from '../services/api';\nimport './Column.css';\n\nconst HeaderList = forwardRef(({ \n  channel, \n  onHeaderSelect, \n  selectedHeader, \n  similarityGroups, \n  headerSearchTerm, \n  onSimilarityGroupUpdate,\n  onRemoveGroup,\n  similarityViewTrigger,\n  onSimilarityViewProcessed\n}, ref) => {\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('all'); // 'all', 'withGroup', or 'withoutGroup'\n  const [headerToGroupMap, setHeaderToGroupMap] = useState({});\n  const [groupedHeaders, setGroupedHeaders] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n  const [ignoreHeaderSearchTerm, setIgnoreHeaderSearchTerm] = useState(false);\n  \n  // Added for similar header selection functionality\n  const [viewMode, setViewMode] = useState('list'); // 'list' or 'similarSelection'\n  const [similarHeaders, setSimilarHeaders] = useState([]);\n  const [selectedSimilarityGroup, setSelectedSimilarityGroup] = useState([]);\n  const [representativeHeader, setRepresentativeHeader] = useState(null);\n  const [isSelectedGroupCollapsed, setIsSelectedGroupCollapsed] = useState(false);\n  const [similarHeaderLoading, setSimilarHeaderLoading] = useState(false);\n  const [similarHeaderError, setSimilarHeaderError] = useState(null);\n  const [currentSimilarityHeader, setCurrentSimilarityHeader] = useState(null);\n  const [filteredSimilarHeaders, setFilteredSimilarHeaders] = useState([]);\n  \n  // 마지막 클릭된 헤더와 타임스탬프를 저장\n  const lastClickRef = useRef({ header: null, timestamp: 0 });\n\n  // Expose functions to parent component\n  useImperativeHandle(ref, () => ({\n    viewSimilarHeaders: (header) => {\n      handleViewSimilarHeaders(header);\n    }\n  }));\n\n  // Handle headerSearchTerm updates from right-clicks in other components\n  useEffect(() => {\n    // Skip updates if we've explicitly cleared the search term or if in similarity view\n    if (ignoreHeaderSearchTerm || viewMode !== 'list' || !headerSearchTerm) {\n      return;\n    }\n    \n    // Update the search term only when there's a new value from props\n    if (headerSearchTerm !== searchTerm) {\n      setSearchTerm(headerSearchTerm);\n      setIsSearchMode(true);\n    }\n  }, [headerSearchTerm, searchTerm, viewMode, ignoreHeaderSearchTerm]);\n  \n  // Handle similarity view trigger from HeaderCombinationList\n  useEffect(() => {\n    if (similarityViewTrigger && channel) {\n      handleViewSimilarHeaders(similarityViewTrigger);\n      // Call the callback to reset the trigger\n      if (onSimilarityViewProcessed) {\n        onSimilarityViewProcessed();\n      }\n    }\n  }, [similarityViewTrigger, channel]);\n\n  useEffect(() => {\n    if (!channel) return;\n    \n    const getHeaders = async () => {\n      setLoading(true);\n      try {\n        let response;\n        if (isSearchMode && searchTerm.trim()) {\n          // Use search API with keyword\n          response = await searchHeaderList(channel, searchTerm);\n        } else {\n          // Use regular API without keyword\n          response = await fetchHeaderList(channel);\n        }\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getHeaders();\n  }, [channel, searchTerm, isSearchMode]);\n\n  // Handle search form submission\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      setIsSearchMode(true);\n    } else {\n      setIsSearchMode(false);\n    }\n  };\n\n  // Handle search input change\n  const handleSearchChange = (e) => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    \n    // When user manually edits the search field, we should ignore headerSearchTerm updates\n    if (headerSearchTerm && value !== headerSearchTerm) {\n      setIgnoreHeaderSearchTerm(true);\n    }\n    \n    if (!value.trim()) {\n      setIsSearchMode(false);\n    }\n  };\n  \n  // Clear search button handler with proper state updates\n  const handleClearSearch = () => {\n    setSearchTerm('');\n    setIsSearchMode(false);\n    setIgnoreHeaderSearchTerm(true);\n    \n    // Also notify parent to clear headerSearchTerm\n    if (onSimilarityViewProcessed) {\n      onSimilarityViewProcessed(true);\n    }\n  };\n\n  // 유사군이 변경될 때마다 관련 데이터를 업데이트\n  useEffect(() => {\n    console.log('HeaderList - similarityGroups 변경감지:', similarityGroups);\n    \n    // 유사군에 포함된 모든 헤더 추출\n    const newGroupedHeaders = similarityGroups && similarityGroups.length > 0\n      ? similarityGroups.flatMap(group => \n          // 대표어를 제외한 헤더만 포함\n          group.items\n            .filter(item => item.header !== group.representative)\n            .map(item => item.header)\n        )\n      : [];\n    \n    // 각 헤더별로 유사군 매핑 생성\n    const newHeaderToGroupMap = {};\n    if (similarityGroups && similarityGroups.length > 0) {\n      similarityGroups.forEach((group, idx) => {\n        console.log(`HeaderList - 유사군 #${idx + 1} 처리:`, group.representative, group.items.length);\n        \n        // 대표어에 유사군 카운트 태그 추가\n        newHeaderToGroupMap[group.representative] = {\n          isRepresentative: true,\n          count: group.items.length\n        };\n        \n        // 대표어가 아닌 항목들은 매핑에서 제외 (목록에 표시되지 않음)\n        group.items.forEach(item => {\n          if (item.header !== group.representative) {\n            newHeaderToGroupMap[item.header] = {\n              representative: group.representative,\n              count: group.items.length\n            };\n          }\n        });\n      });\n    }\n    \n    console.log('HeaderList - headerToGroupMap 업데이트:', newHeaderToGroupMap);\n    console.log('HeaderList - groupedHeaders 업데이트:', newGroupedHeaders);\n    \n    setGroupedHeaders(newGroupedHeaders);\n    setHeaderToGroupMap(newHeaderToGroupMap);\n  }, [similarityGroups]);\n\n  // Similar header selection functions\n  const handleViewSimilarHeaders = (header) => {\n    if (!channel || !header) return;\n    \n    // Reset selection state\n    setSelectedSimilarityGroup([]);\n    setRepresentativeHeader(null);\n    \n    // Store the current header being viewed\n    setCurrentSimilarityHeader(header);\n    \n    // Change view mode and fetch similar headers\n    setViewMode('similarSelection');\n    fetchSimilarHeaders(header);\n  };\n  \n  const fetchSimilarHeaders = async (header) => {\n    if (!channel || !header) return;\n    \n    setSimilarHeaderLoading(true);\n    try {\n      const response = await fetchHeaderSimilarityList(channel, header);\n      console.log('Similar headers response:', response);\n      const headerList = response.list || [];\n      setSimilarHeaders(headerList);\n      setFilteredSimilarHeaders(headerList);\n      setSimilarHeaderError(null);\n    } catch (err) {\n      setSimilarHeaderError(err.message);\n      setSimilarHeaders([]);\n      setFilteredSimilarHeaders([]);\n    } finally {\n      setSimilarHeaderLoading(false);\n    }\n  };\n  \n  const handleBackToHeaderList = () => {\n    // First set view mode to list\n    setViewMode('list');\n    \n    // Reset similarity-related states\n    setSelectedSimilarityGroup([]);\n    setRepresentativeHeader(null);\n    setCurrentSimilarityHeader(null);\n    \n    // Reset search immediately and mark to ignore headerSearchTerm updates\n    setSearchTerm('');\n    setIsSearchMode(false);\n    setIgnoreHeaderSearchTerm(true);\n    \n    // Notify parent to clear headerSearchTerm\n    if (onSimilarityViewProcessed) {\n      onSimilarityViewProcessed(true); // Pass true to indicate search term should be cleared\n    }\n  };\n  \n  const handleSimilarHeaderSelect = (header, setAsRepresentative = false) => {\n    // 중복 클릭 방지 및 디바운싱\n    const now = Date.now();\n    if (lastClickRef.current.header === header && \n        now - lastClickRef.current.timestamp < 500) {\n      // 0.5초 이내에 동일한 헤더를 다시 클릭한 경우 무시\n      return;\n    }\n    \n    // 클릭 정보 업데이트\n    lastClickRef.current = { header, timestamp: now };\n    \n    // 버그 수정: 중복 호출 방지를 위한 체크 추가\n    const headerObj = similarHeaders.find(h => h.header === header);\n    \n    if (!headerObj) return; // 헤더가 존재하지 않으면 무시\n\n    // 이미 선택된 헤더인지 확인\n    const isAlreadySelected = selectedSimilarityGroup.some(h => h.header === header);\n    const isRepresentative = representativeHeader === header;\n    \n    if (isAlreadySelected) {\n      if (setAsRepresentative && !isRepresentative) {\n        // 이미 선택된 헤더를 대표어로 설정 (우클릭)\n        setRepresentativeHeader(header);\n      } else {\n        // 이미 선택된 헤더의 선택 해제 (다시 클릭)\n        const newGroup = selectedSimilarityGroup.filter(h => h.header !== header);\n        setSelectedSimilarityGroup(newGroup);\n        \n        // 대표어가 제거된 경우 새로운 대표어 선택\n        if (isRepresentative && newGroup.length > 0) {\n          setRepresentativeHeader(newGroup[0].header);\n        } else if (isRepresentative) {\n          setRepresentativeHeader(null);\n        }\n      }\n    } else {\n      // 선택되지 않은 경우, 선택에 추가\n      const newGroup = [...selectedSimilarityGroup, headerObj];\n      setSelectedSimilarityGroup(newGroup);\n      \n      // 우클릭인 경우에만 대표어로 설정 (명시적으로 로직 분리)\n      if (setAsRepresentative) {\n        // 우클릭 - 대표어로 설정\n        setRepresentativeHeader(header);\n      }\n      // 좌클릭은 단순히 선택만 되고 대표어로 설정되지 않음\n    }\n  };\n  \n  const handleRemoveFromGroup = (header) => {\n    setSelectedSimilarityGroup(prev => prev.filter(h => h.header !== header));\n    // If representative header is removed, reset it\n    if (representativeHeader === header) {\n      setRepresentativeHeader(selectedSimilarityGroup.length > 1 ? selectedSimilarityGroup[0].header : null);\n    }\n  };\n  \n  const handleSetRepresentative = (header) => {\n    setRepresentativeHeader(header);\n  };\n  \n  const handleSaveGroup = () => {\n    if (selectedSimilarityGroup.length > 0 && representativeHeader) {\n      // 유사군 데이터를 일관된 형식으로 변환\n      const groupData = selectedSimilarityGroup.map(item => ({\n        header: item.header,\n        // 기타 필요한 속성 유지\n        ...item\n      }));\n      \n      // 선택한 그룹에 현재 선택한 헤더가 없다면 추가\n      const hasCurrentHeader = groupData.some(item => item.header === currentSimilarityHeader);\n      if (!hasCurrentHeader && currentSimilarityHeader) {\n        groupData.push({ header: currentSimilarityHeader });\n      }\n      \n      console.log('저장할 유사군 데이터:', groupData, representativeHeader);\n      \n      onSimilarityGroupUpdate && onSimilarityGroupUpdate(\n        groupData, \n        representativeHeader\n      );\n      \n      // 저장 후에도 화면을 유지\n      // setViewMode('list'); 삭제\n      \n      // 저장 후에도 선택된 그룹과 대표어 유지\n      // setSelectedSimilarityGroup([]);\n      // setRepresentativeHeader(null);\n    }\n  };\n\n  // 유사군에 속하지 않거나 대표어인 헤더만 표시\n  const filteredHeaders = headers.filter(item => \n    !groupedHeaders.includes(item.header)\n  );\n\n  // 유사군이 있는 헤더 (대표어)와 없는 헤더를 구분\n  const headersWithGroups = filteredHeaders.filter(item => \n    headerToGroupMap[item.header] && headerToGroupMap[item.header].isRepresentative\n  );\n  \n  const headersWithoutGroups = filteredHeaders.filter(item => \n    !headerToGroupMap[item.header] || !headerToGroupMap[item.header].isRepresentative\n  );\n\n  // 활성 탭에 따라 표시할 헤더 목록 선택\n  let displayHeaders = filteredHeaders;\n  if (activeTab === 'withGroup') {\n    displayHeaders = headersWithGroups;\n  } else if (activeTab === 'withoutGroup') {\n    displayHeaders = headersWithoutGroups;\n  }\n\n  // Handle search within similar headers\n  const handleSimilarHeaderSearch = (e) => {\n    const searchValue = e.target.value;\n    setSearchTerm(searchValue);\n    \n    if (!searchValue.trim()) {\n      setFilteredSimilarHeaders(similarHeaders);\n      setIsSearchMode(false);\n    } else {\n      setIsSearchMode(true);\n      const filtered = similarHeaders.filter(item => \n        item.header.toLowerCase().includes(searchValue.toLowerCase())\n      );\n      setFilteredSimilarHeaders(filtered);\n    }\n  };\n\n  if (!channel) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널을 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  // Create a list of all headers that are already part of saved groups\n  const savedGroupHeaders = similarityGroups ? similarityGroups.flatMap(group => \n    group.items.map(item => item.header)\n  ) : [];\n\n  // Filter out headers that are already in the selected group or in any saved group\n  const availableSimilarHeaders = filteredSimilarHeaders.filter(\n    h => !selectedSimilarityGroup.some(selected => selected.header === h.header) &&\n         !savedGroupHeaders.includes(h.header)\n  );\n  \n  return (\n    <div className={`column-container ${viewMode === 'similarSelection' ? 'similarity-view' : ''}`}>\n      <h2 className=\"column-title\">\n        {viewMode === 'list' ? (\n          '헤더 목록'\n        ) : (\n          <>\n            <button className=\"back-button\" onClick={handleBackToHeaderList}>\n              ← 헤더 목록\n            </button>\n            <span className=\"title-path\" title={currentSimilarityHeader}>\n              {currentSimilarityHeader}\n            </span>\n          </>\n        )}\n      </h2>\n      \n      <form onSubmit={handleSearchSubmit} className=\"search-form\">\n        <div className=\"search-input-container\">\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={viewMode === 'list' ? handleSearchChange : handleSimilarHeaderSearch}\n            placeholder={viewMode === 'list' ? \"검색어를 입력하세요\" : \"유사 헤더 검색\"}\n            className=\"search-input\"\n            readOnly={false} \n          />\n          {isSearchMode && (\n            <div className=\"search-result-count\">\n              {viewMode === 'list' ? headers.length : filteredSimilarHeaders.length}건\n            </div>\n          )}\n          {isSearchMode && (\n            <button \n              className=\"clear-search-button\" \n              onClick={handleClearSearch}\n              title=\"검색 취소\"\n            >\n              ✕\n            </button>\n          )}\n        </div>\n        {viewMode === 'list' && !isSearchMode && (\n          <button type=\"submit\" className=\"search-button\">검색</button>\n        )}\n      </form>\n      \n      {viewMode === 'list' ? (\n        <>\n          <div className=\"column-content\">\n            {loading ? (\n              <div className=\"loading\">로딩 중...</div>\n            ) : error ? (\n              <div className=\"error\">에러: {error}</div>\n            ) : displayHeaders.length > 0 ? (\n              displayHeaders.map((item, index) => {\n                // 각 헤더 항목 처리 시 로그 추가\n                const hasGroupInfo = headerToGroupMap[item.header];\n                const isRepresentative = hasGroupInfo && headerToGroupMap[item.header].isRepresentative;\n                const groupCount = isRepresentative ? headerToGroupMap[item.header].count : 0;\n                \n                if (isRepresentative) {\n                  console.log(`헤더 렌더링 - 대표어 표시: ${item.header}, 유사군 수: ${groupCount}`);\n                }\n                \n                return (\n                  <div\n                    key={index}\n                    className={`column-item ${selectedHeader === item.header ? 'selected' : ''}`}\n                  >\n                    <div \n                      className=\"column-item-content\"\n                      onClick={() => onHeaderSelect(item.header)}\n                    >\n                      {item.header}\n                      {isRepresentative && (\n                        <span className=\"similarity-tag\" title={`${groupCount}개의 유사어가 있습니다`}>\n                          유사군 {groupCount}\n                        </span>\n                      )}\n                      {hasGroupInfo && !isRepresentative && (\n                        <span className=\"similarity-tag\" title={`대표어: ${headerToGroupMap[item.header].representative}`}>\n                          유사군\n                        </span>\n                      )}\n                    </div>\n                    {!hasGroupInfo && (\n                      <button \n                        className=\"view-similar-btn\" \n                        onClick={() => handleViewSimilarHeaders(item.header)}\n                        title=\"유사헤더 보기\"\n                      >\n                        유사\n                      </button>\n                    )}\n                  </div>\n                );\n              })\n            ) : (\n              <div className=\"column-empty\">\n                {activeTab === 'withGroup' ? '유사군이 있는 헤더가 없습니다.' : \n                 activeTab === 'withoutGroup' ? '유사군이 없는 헤더가 없습니다.' : \n                 '헤더 정보가 없습니다.'}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"tabs\">\n            <button \n              className={`tab ${activeTab === 'all' ? 'active' : ''}`}\n              onClick={() => setActiveTab('all')}\n            >\n              전체 ({filteredHeaders.length})\n            </button>\n            <button \n              className={`tab ${activeTab === 'withGroup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('withGroup')}\n            >\n              유사군 있음 ({headersWithGroups.length})\n            </button>\n            <button \n              className={`tab ${activeTab === 'withoutGroup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('withoutGroup')}\n            >\n              유사군 없음 ({headersWithoutGroups.length})\n            </button>\n          </div>\n        </>\n      ) : (\n        // Similar header selection view\n        <>\n          <div className=\"column-content\">\n            <div className=\"similarity-vertical-layout\">\n              <div className=\"similarity-header-section\">\n                <h3 className=\"group-subtitle\">\n                  유사 헤더 선택\n                  {selectedSimilarityGroup.length >= 2 && representativeHeader && (\n                    <button \n                      className=\"save-group-btn action-btn header-action-btn\"\n                      onClick={handleSaveGroup}\n                      title=\"현재 선택된 유사 헤더를 그룹으로 저장합니다\"\n                    >\n                      유사군 저장 ({selectedSimilarityGroup.length}개)\n                    </button>\n                  )}\n                </h3>\n                \n                <div className=\"click-guide\">\n                  <span className=\"guide-item\"><span className=\"guide-icon\">🖱️</span> 좌클릭: 유사어 선택</span>\n                  <span className=\"guide-item\"><span className=\"guide-icon\">🖱️</span> 우클릭: 대표어 선택</span>\n                  <span className=\"guide-item\"><span className=\"guide-icon\">🖱️</span> 재클릭: 선택 해제</span>\n                </div>\n                \n                <div className=\"similarity-items\">\n                  {similarHeaderLoading ? (\n                    <div className=\"loading\">로딩 중...</div>\n                  ) : similarHeaderError ? (\n                    <div className=\"error\">에러: {similarHeaderError}</div>\n                  ) : filteredSimilarHeaders && filteredSimilarHeaders.length > 0 ? (\n                    filteredSimilarHeaders.map((item, index) => {\n                      // 이미 선택된 항목인지 확인\n                      const isSelected = selectedSimilarityGroup.some(h => h.header === item.header);\n                      // 대표 헤더인지 확인\n                      const isRepresentative = representativeHeader === item.header;\n                      \n                      // 이미 저장된 그룹에 있는지 확인\n                      const isSavedInGroup = savedGroupHeaders.includes(item.header);\n                      \n                      // 선택 상태 클래스 결정\n                      let statusClass = '';\n                      if (isSelected) {\n                        statusClass = isRepresentative ? 'representative' : 'similar';\n                      } else if (isSavedInGroup) {\n                        // 저장된 그룹에 있지만 현재 선택되지 않은 항목\n                        const savedGroupInfo = similarityGroups.find(group => \n                          group.items.some(g => g.header === item.header)\n                        );\n                        if (savedGroupInfo) {\n                          statusClass = savedGroupInfo.representative === item.header ? 'saved-representative' : 'saved-similar';\n                        }\n                      }\n                      \n                      return (\n                        <div \n                          key={index} \n                          className={`similarity-item ${statusClass}`}\n                          onClick={() => handleSimilarHeaderSelect(item.header, false)}\n                          onContextMenu={(e) => {\n                            e.preventDefault(); // 기본 컨텍스트 메뉴 방지\n                            handleSimilarHeaderSelect(item.header, true);\n                          }}\n                        >\n                          {item.header}\n                          {isSelected && (\n                            <span className={`status-badge ${isRepresentative ? 'representative' : 'similar'}`}>\n                              {isRepresentative ? '대' : '유'}\n                            </span>\n                          )}\n                          {!isSelected && isSavedInGroup && (\n                            <span className=\"status-badge saved\">\n                              {similarityGroups.find(group => \n                                group.items.some(g => g.header === item.header) && \n                                group.representative === item.header\n                              ) ? '대' : '유'}\n                            </span>\n                          )}\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div className=\"empty-state\">유사한 헤더가 없습니다.</div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"tabs\">\n            <button \n              className={`tab ${activeTab === 'all' ? 'active' : ''}`}\n              onClick={() => setActiveTab('all')}\n            >\n              전체 ({filteredHeaders.length})\n            </button>\n            <button \n              className={`tab ${activeTab === 'withGroup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('withGroup')}\n            >\n              유사군 있음 ({headersWithGroups.length})\n            </button>\n            <button \n              className={`tab ${activeTab === 'withoutGroup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('withoutGroup')}\n            >\n              유사군 없음 ({headersWithoutGroups.length})\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n});\n\nexport default HeaderList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}