{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/DataDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SeparationClassifier.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataDisplay = ({\n  processedData,\n  flattenData,\n  segmentationData,\n  groupingData\n}) => {\n  _s();\n  const [userGroups, setUserGroups] = useState([]);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [editingGroupIndex, setEditingGroupIndex] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n\n  // Handle adding a new user-defined group\n  const addUserGroup = () => {\n    if (newGroupName.trim() === '') return;\n    setUserGroups([...userGroups, {\n      name: newGroupName,\n      items: []\n    }]);\n    setNewGroupName('');\n  };\n\n  // Check if a value is already used in any group\n  const isValueUsed = value => {\n    return userGroups.some(group => group.items.includes(value));\n  };\n\n  // Add a segmentation value to the selected group\n  const addToGroup = value => {\n    if (selectedGroup === null || isValueUsed(value)) return;\n    setUserGroups(userGroups.map((group, idx) => {\n      if (idx === selectedGroup && !group.items.includes(value)) {\n        return {\n          ...group,\n          items: [...group.items, value]\n        };\n      }\n      return group;\n    }));\n  };\n\n  // Remove an item from a group\n  const removeFromGroup = (groupIndex, itemIndex) => {\n    setUserGroups(userGroups.map((group, gIdx) => {\n      if (gIdx === groupIndex) {\n        const newItems = [...group.items];\n        newItems.splice(itemIndex, 1);\n        return {\n          ...group,\n          items: newItems\n        };\n      }\n      return group;\n    }));\n  };\n\n  // Toggle group selection for adding items\n  const toggleGroupSelection = groupIndex => {\n    setSelectedGroup(selectedGroup === groupIndex ? null : groupIndex);\n  };\n\n  // Start editing a group name\n  const startEditingGroupName = groupIndex => {\n    setEditingGroupIndex(groupIndex);\n    setEditingGroupName(userGroups[groupIndex].name);\n  };\n\n  // Save edited group name\n  const saveGroupName = () => {\n    if (editingGroupName.trim() === '') return;\n    setUserGroups(userGroups.map((group, idx) => {\n      if (idx === editingGroupIndex) {\n        return {\n          ...group,\n          name: editingGroupName\n        };\n      }\n      return group;\n    }));\n    setEditingGroupIndex(null);\n    setEditingGroupName('');\n  };\n\n  // Handle key press in group name input\n  const handleGroupNameKeyPress = e => {\n    if (e.key === 'Enter') {\n      saveGroupName();\n    } else if (e.key === 'Escape') {\n      setEditingGroupIndex(null);\n      setEditingGroupName('');\n    }\n  };\n\n  // Event handler for clicks on segmentation values\n  const handleSegmentClick = segment => {\n    addToGroup(segment);\n  };\n\n  // Event handler for clicks on tag values\n  const handleTagClick = tag => {\n    addToGroup(tag);\n  };\n\n  // Render the processed data as a table\n  const renderProcessedData = () => {\n    if (!processedData) return null;\n    const flatData = flattenData(processedData);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD0A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uAC12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(flatData).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: typeof value === 'string' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: JSON.stringify(value, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render the segmentation data\n  const renderSegmentationData = () => {\n    if (!segmentationData || !segmentationData.segmentations) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"segmentation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uBD84\\uC808\\uB41C \\uB370\\uC774\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segmentation-results\",\n        children: segmentationData.segmentations.map((seg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segmentation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"segmentation-value\",\n            children: seg.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), seg.segments && seg.segments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"segmentation-segments\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"segments-label\",\n              children: \"\\uBD84\\uC808\\uAC12:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"segments-content\",\n              children: seg.segments.map((segment, sIdx) => {\n                const segmentValue = typeof segment === 'string' ? segment : segment.text || '';\n                const segmentClasses = `segment-item ${isValueUsed(segmentValue) ? 'used-value' : ''}`;\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: segmentClasses,\n                  onClick: () => !isValueUsed(segmentValue) && handleSegmentClick(segmentValue),\n                  children: segmentValue\n                }, sIdx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render grouped data\n  const renderGroupedData = () => {\n    if (!groupingData) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouped-data-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uADF8\\uB8F9\\uD551\\uB41C \\uB370\\uC774\\uD130 (\\uC911\\uBCF5 \\uC81C\\uAC70)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouped-data\",\n        children: Object.entries(groupingData).map(([groupName, values], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grouped-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: groupName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grouped-values\",\n            children: values.filter(value => !isValueUsed(value)).map((value, vIdx) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"grouped-value\",\n              onClick: () => handleTagClick(value),\n              children: value\n            }, vIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render user-defined groups\n  const renderUserGroups = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-groups-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uC758 \\uADF8\\uB8F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-group-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC0C8 \\uADF8\\uB8F9 \\uC774\\uB984\",\n          value: newGroupName,\n          onChange: e => setNewGroupName(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && addUserGroup()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addUserGroup,\n          children: \"\\uADF8\\uB8F9 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-groups-list\",\n        children: userGroups.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-groups\",\n          children: \"\\uADF8\\uB8F9\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uC704\\uC5D0\\uC11C \\uADF8\\uB8F9\\uC744 \\uCD94\\uAC00\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this) : userGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `user-group ${selectedGroup === groupIndex ? 'selected' : ''}`,\n          onClick: () => toggleGroupSelection(groupIndex),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-group-header\",\n            children: editingGroupIndex === groupIndex ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"edit-group-name\",\n              value: editingGroupName,\n              onChange: e => setEditingGroupName(e.target.value),\n              onKeyDown: handleGroupNameKeyPress,\n              onBlur: saveGroupName,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-group-name\",\n                children: group.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-group-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  startEditingGroupName(groupIndex);\n                },\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-group-items\",\n            children: group.items.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-group-items\",\n              children: \"\\uC544\\uC774\\uD15C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBD84\\uC808\\uAC12\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uCD94\\uAC00\\uD558\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this) : group.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-group-item-value\",\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-item-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  removeFromGroup(groupIndex, itemIndex);\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 25\n              }, this)]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)]\n        }, groupIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Conditionally render the data based on what's available\n  if (!processedData && !segmentationData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-data\",\n      children: \"\\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-display\",\n    children: [groupingData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouped-data-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouped-data-content\",\n        children: renderGroupedData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-groups-content\",\n        children: renderUserGroups()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), segmentationData && renderSegmentationData(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processed-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uCC98\\uB9AC\\uB41C \\uB370\\uC774\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), renderProcessedData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(DataDisplay, \"wZ1APa5jbQ+A0FmXL7Uw7ym7oh0=\");\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DataDisplay","processedData","flattenData","segmentationData","groupingData","_s","userGroups","setUserGroups","newGroupName","setNewGroupName","selectedGroup","setSelectedGroup","editingGroupIndex","setEditingGroupIndex","editingGroupName","setEditingGroupName","addUserGroup","trim","name","items","isValueUsed","value","some","group","includes","addToGroup","map","idx","removeFromGroup","groupIndex","itemIndex","gIdx","newItems","splice","toggleGroupSelection","startEditingGroupName","saveGroupName","handleGroupNameKeyPress","e","key","handleSegmentClick","segment","handleTagClick","tag","renderProcessedData","flatData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","index","JSON","stringify","renderSegmentationData","segmentations","seg","segments","length","sIdx","segmentValue","text","segmentClasses","onClick","renderGroupedData","groupName","values","filter","vIdx","renderUserGroups","type","placeholder","onChange","target","onKeyPress","onKeyDown","onBlur","autoFocus","stopPropagation","item","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/DataDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SeparationClassifier.css';\n\nconst DataDisplay = ({ processedData, flattenData, segmentationData, groupingData }) => {\n  const [userGroups, setUserGroups] = useState([]);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [editingGroupIndex, setEditingGroupIndex] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  \n  // Handle adding a new user-defined group\n  const addUserGroup = () => {\n    if (newGroupName.trim() === '') return;\n    \n    setUserGroups([...userGroups, { name: newGroupName, items: [] }]);\n    setNewGroupName('');\n  };\n  \n  // Check if a value is already used in any group\n  const isValueUsed = (value) => {\n    return userGroups.some(group => group.items.includes(value));\n  };\n  \n  // Add a segmentation value to the selected group\n  const addToGroup = (value) => {\n    if (selectedGroup === null || isValueUsed(value)) return;\n    \n    setUserGroups(userGroups.map((group, idx) => {\n      if (idx === selectedGroup && !group.items.includes(value)) {\n        return { ...group, items: [...group.items, value] };\n      }\n      return group;\n    }));\n  };\n  \n  // Remove an item from a group\n  const removeFromGroup = (groupIndex, itemIndex) => {\n    setUserGroups(userGroups.map((group, gIdx) => {\n      if (gIdx === groupIndex) {\n        const newItems = [...group.items];\n        newItems.splice(itemIndex, 1);\n        return { ...group, items: newItems };\n      }\n      return group;\n    }));\n  };\n  \n  // Toggle group selection for adding items\n  const toggleGroupSelection = (groupIndex) => {\n    setSelectedGroup(selectedGroup === groupIndex ? null : groupIndex);\n  };\n  \n  // Start editing a group name\n  const startEditingGroupName = (groupIndex) => {\n    setEditingGroupIndex(groupIndex);\n    setEditingGroupName(userGroups[groupIndex].name);\n  };\n  \n  // Save edited group name\n  const saveGroupName = () => {\n    if (editingGroupName.trim() === '') return;\n    \n    setUserGroups(userGroups.map((group, idx) => {\n      if (idx === editingGroupIndex) {\n        return { ...group, name: editingGroupName };\n      }\n      return group;\n    }));\n    \n    setEditingGroupIndex(null);\n    setEditingGroupName('');\n  };\n  \n  // Handle key press in group name input\n  const handleGroupNameKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      saveGroupName();\n    } else if (e.key === 'Escape') {\n      setEditingGroupIndex(null);\n      setEditingGroupName('');\n    }\n  };\n\n  // Event handler for clicks on segmentation values\n  const handleSegmentClick = (segment) => {\n    addToGroup(segment);\n  };\n  \n  // Event handler for clicks on tag values\n  const handleTagClick = (tag) => {\n    addToGroup(tag);\n  };\n\n  // Render the processed data as a table\n  const renderProcessedData = () => {\n    if (!processedData) return null;\n    \n    const flatData = flattenData(processedData);\n    \n    return (\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            <th>키</th>\n            <th>값</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(flatData).map(([key, value], index) => (\n            <tr key={index}>\n              <td>{key}</td>\n              <td>\n                {typeof value === 'string' ? (\n                  <span>{value}</span>\n                ) : (\n                  <pre>{JSON.stringify(value, null, 2)}</pre>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n  \n  // Render the segmentation data\n  const renderSegmentationData = () => {\n    if (!segmentationData || !segmentationData.segmentations) return null;\n    \n    return (\n      <div className=\"segmentation-container\">\n        <h4>분절된 데이터</h4>\n        <div className=\"segmentation-results\">\n          {segmentationData.segmentations.map((seg, index) => (\n            <div key={index} className=\"segmentation-item\">\n              <div className=\"segmentation-value\">{seg.value}</div>\n              {seg.segments && seg.segments.length > 0 && (\n                <div className=\"segmentation-segments\">\n                  <div className=\"segments-label\">분절값:</div>\n                  <div className=\"segments-content\">\n                    {seg.segments.map((segment, sIdx) => {\n                      const segmentValue = typeof segment === 'string' ? segment : (segment.text || '');\n                      const segmentClasses = `segment-item ${isValueUsed(segmentValue) ? 'used-value' : ''}`;\n                      \n                      return (\n                        <span\n                          key={sIdx}\n                          className={segmentClasses}\n                          onClick={() => !isValueUsed(segmentValue) && handleSegmentClick(segmentValue)}\n                        >\n                          {segmentValue}\n                        </span>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n  \n  // Render grouped data\n  const renderGroupedData = () => {\n    if (!groupingData) return null;\n    \n    return (\n      <div className=\"grouped-data-container\">\n        <h4>그룹핑된 데이터 (중복 제거)</h4>\n        <div className=\"grouped-data\">\n          {Object.entries(groupingData).map(([groupName, values], index) => (\n            <div key={index} className=\"grouped-section\">\n              <h5>{groupName}</h5>\n              <div className=\"grouped-values\">\n                {values.filter(value => !isValueUsed(value)).map((value, vIdx) => (\n                  <span \n                    key={vIdx} \n                    className=\"grouped-value\"\n                    onClick={() => handleTagClick(value)}\n                  >\n                    {value}\n                  </span>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n  \n  // Render user-defined groups\n  const renderUserGroups = () => {\n    return (\n      <div className=\"user-groups-container\">\n        <h4>사용자 정의 그룹</h4>\n        \n        {/* Form to add new groups */}\n        <div className=\"add-group-form\">\n          <input\n            type=\"text\"\n            placeholder=\"새 그룹 이름\"\n            value={newGroupName}\n            onChange={(e) => setNewGroupName(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && addUserGroup()}\n          />\n          <button onClick={addUserGroup}>그룹 추가</button>\n        </div>\n        \n        {/* List of user groups */}\n        <div className=\"user-groups-list\">\n          {userGroups.length === 0 ? (\n            <div className=\"empty-groups\">그룹이 없습니다. 위에서 그룹을 추가하세요.</div>\n          ) : (\n            userGroups.map((group, groupIndex) => (\n              <div \n                key={groupIndex} \n                className={`user-group ${selectedGroup === groupIndex ? 'selected' : ''}`}\n                onClick={() => toggleGroupSelection(groupIndex)}\n              >\n                {/* Group header with name and edit button */}\n                <div className=\"user-group-header\">\n                  {editingGroupIndex === groupIndex ? (\n                    <input\n                      type=\"text\"\n                      className=\"edit-group-name\"\n                      value={editingGroupName}\n                      onChange={(e) => setEditingGroupName(e.target.value)}\n                      onKeyDown={handleGroupNameKeyPress}\n                      onBlur={saveGroupName}\n                      autoFocus\n                    />\n                  ) : (\n                    <>\n                      <div className=\"user-group-name\">{group.name}</div>\n                      <button \n                        className=\"edit-group-button\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          startEditingGroupName(groupIndex);\n                        }}\n                      >\n                        ✏️\n                      </button>\n                    </>\n                  )}\n                </div>\n                \n                {/* Group items */}\n                <div className=\"user-group-items\">\n                  {group.items.length === 0 ? (\n                    <div className=\"empty-group-items\">아이템이 없습니다. 분절값을 클릭하여 추가하세요.</div>\n                  ) : (\n                    group.items.map((item, itemIndex) => (\n                      <div key={itemIndex} className=\"user-group-item\">\n                        <span className=\"user-group-item-value\">{item}</span>\n                        <button \n                          className=\"remove-item-button\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            removeFromGroup(groupIndex, itemIndex);\n                          }}\n                        >\n                          &times;\n                        </button>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // Conditionally render the data based on what's available\n  if (!processedData && !segmentationData) {\n    return <div className=\"empty-data\">데이터가 없습니다.</div>;\n  }\n  \n  return (\n    <div className=\"data-display\">\n      {/* Conditionally render grouped data if available */}\n      {groupingData && (\n        <div className=\"grouped-data-wrapper\">\n          <div className=\"grouped-data-content\">\n            {renderGroupedData()}\n          </div>\n          <div className=\"user-groups-content\">\n            {renderUserGroups()}\n          </div>\n        </div>\n      )}\n      \n      {/* Render segmentation data if available */}\n      {segmentationData && renderSegmentationData()}\n\n      {/* Always render processed data */}\n      <div className=\"processed-data-section\">\n        <h4>처리된 데이터</h4>\n        {renderProcessedData()}\n      </div>\n    </div>\n  );\n};\n\nexport default DataDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}