{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/PipelineStep.js\";\nimport React from 'react';\nimport './SeparationClassifier.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PipelineStep = ({\n  step,\n  index,\n  isSelected,\n  onSelect,\n  onToggle\n}) => {\n  const handleToggleClick = e => {\n    e.stopPropagation();\n    onToggle(step.id);\n  };\n  const renderStepConfig = () => {\n    if (isSelected && step.id === 'delimiter-separation') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-config\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uAD6C\\uBD84\\uC790:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: step.config.delimiters.join(''),\n            onChange: e => step.onUpdateDelimiters(e.target.value),\n            className: \"delimiter-input\",\n            placeholder: \"\\uAD6C\\uBD84\\uC790 \\uC785\\uB825 (\\uC608: ,;)\",\n            onClick: e => e.stopPropagation()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delimiter-help\",\n          children: [\"\\uAC01 \\uBB38\\uC790\\uB294 \\uAC1C\\uBCC4 \\uAD6C\\uBD84\\uC790\\uB85C \\uCC98\\uB9AC\\uB429\\uB2C8\\uB2E4. \\uC608: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \",\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 37\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"\\uACF5\\uBC31\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `pipeline-step ${step.active ? 'active' : 'inactive'} ${isSelected ? 'selected' : ''}`,\n    onClick: () => onSelect(step.id),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-number\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-title\",\n        children: step.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-control\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: step.active,\n            onChange: handleToggleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), renderStepConfig()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = PipelineStep;\nexport default PipelineStep;\nvar _c;\n$RefreshReg$(_c, \"PipelineStep\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PipelineStep","step","index","isSelected","onSelect","onToggle","handleToggleClick","e","stopPropagation","id","renderStepConfig","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","config","delimiters","join","onChange","onUpdateDelimiters","target","placeholder","onClick","active","name","checked","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/PipelineStep.js"],"sourcesContent":["import React from 'react';\nimport './SeparationClassifier.css';\n\nconst PipelineStep = ({ step, index, isSelected, onSelect, onToggle }) => {\n  const handleToggleClick = (e) => {\n    e.stopPropagation();\n    onToggle(step.id);\n  };\n\n  const renderStepConfig = () => {\n    if (isSelected && step.id === 'delimiter-separation') {\n      return (\n        <div className=\"step-config\">\n          <div className=\"config-row\">\n            <label>구분자:</label>\n            <input \n              type=\"text\" \n              value={step.config.delimiters.join('')}\n              onChange={(e) => step.onUpdateDelimiters(e.target.value)}\n              className=\"delimiter-input\"\n              placeholder=\"구분자 입력 (예: ,;)\"\n              onClick={(e) => e.stopPropagation()}\n            />\n          </div>\n          <div className=\"delimiter-help\">\n            각 문자는 개별 구분자로 처리됩니다. 예: <code>,</code> <code>공백</code>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div \n      className={`pipeline-step ${step.active ? 'active' : 'inactive'} ${isSelected ? 'selected' : ''}`}\n      onClick={() => onSelect(step.id)}\n    >\n      <div className=\"step-details\">\n        <div className=\"step-number\">{index + 1}</div>\n        <div className=\"step-title\">{step.name}</div>\n        <div className=\"step-control\">\n          <label className=\"toggle\">\n            <input \n              type=\"checkbox\" \n              checked={step.active}\n              onChange={handleToggleClick}\n            />\n            <span className=\"toggle-track\"></span>\n          </label>\n        </div>\n      </div>\n      {renderStepConfig()}\n    </div>\n  );\n};\n\nexport default PipelineStep; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}