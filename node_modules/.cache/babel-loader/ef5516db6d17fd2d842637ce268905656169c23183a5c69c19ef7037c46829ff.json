{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport HeaderList from './components/HeaderList';\nimport HeaderCombinationList from './components/HeaderCombinationList';\nimport HeaderCombinationTextList from './components/HeaderCombinationTextList';\nimport PathNavigation from './components/PathNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedChannel, setSelectedChannel] = useState(null);\n  const [selectedHeader, setSelectedHeader] = useState(null);\n  const [selectedCombination, setSelectedCombination] = useState(null);\n  const [selectedCombinations, setSelectedCombinations] = useState([]);\n  const [similarityGroups, setSimilarityGroups] = useState([]);\n  const [viewMode, setViewMode] = useState('edit'); // 'edit' or 'browse'\n  const [headerSearchTerm, setHeaderSearchTerm] = useState('');\n  const handleChannelSelect = channel => {\n    setSelectedChannel(channel);\n    setSelectedHeader(null); // Reset header selection when changing channel\n    setSelectedCombination(null); // Reset combination selection\n    setSelectedCombinations([]); // Reset multiple combination selection\n  };\n  const handleHeaderSelect = header => {\n    setSelectedHeader(header);\n    setSelectedCombination(null); // Reset combination selection when changing header\n    setSelectedCombinations([]); // Reset multiple combination selection\n  };\n  const handleCombinationSelect = combination => {\n    setSelectedCombination(combination);\n  };\n  const handleMultipleCombinationsSelect = combinations => {\n    setSelectedCombinations(combinations || []);\n  };\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n  };\n\n  // Handle header search from right-click in HeaderCombinationList\n  const handleHeaderSearch = header => {\n    if (selectedChannel && header) {\n      // We need to set the header search term in the HeaderList component\n      // Set global search term state for HeaderList\n      setHeaderSearchTerm(header);\n      console.log(`헤더 검색 요청: ${header}`);\n    }\n  };\n  const handleSimilarityGroupUpdate = (group, representative) => {\n    if (group.length > 0) {\n      // Check if we already have a group with this representative\n      const existingGroupIndex = similarityGroups.findIndex(g => g.representative === representative);\n      if (existingGroupIndex >= 0) {\n        // Update existing group\n        const updatedGroups = [...similarityGroups];\n        updatedGroups[existingGroupIndex] = {\n          items: group,\n          representative: representative\n        };\n        setSimilarityGroups(updatedGroups);\n        console.log('유사군 업데이트됨:', updatedGroups);\n      } else {\n        // Add new group\n        const newGroups = [...similarityGroups, {\n          items: group,\n          representative: representative\n        }];\n        setSimilarityGroups(newGroups);\n        console.log('새 유사군 추가됨:', newGroups);\n      }\n    }\n  };\n  const handleRemoveGroup = groupIndex => {\n    const updatedGroups = similarityGroups.filter((_, index) => index !== groupIndex);\n    setSimilarityGroups(updatedGroups);\n    console.log('유사군 삭제됨:', updatedGroups);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-content\",\n      children: [/*#__PURE__*/_jsxDEV(PathNavigation, {\n        selectedChannel: selectedChannel,\n        selectedHeader: selectedHeader,\n        selectedCombination: selectedCombination,\n        onChannelSelect: handleChannelSelect,\n        onHeaderSelect: handleHeaderSelect,\n        onCombinationSelect: handleCombinationSelect,\n        viewMode: viewMode,\n        onViewModeChange: handleViewModeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), viewMode === 'edit' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns-container\",\n        children: [/*#__PURE__*/_jsxDEV(HeaderList, {\n          channel: selectedChannel,\n          onHeaderSelect: handleHeaderSelect,\n          selectedHeader: selectedHeader,\n          similarityGroups: similarityGroups,\n          headerSearchTerm: headerSearchTerm,\n          onSimilarityGroupUpdate: handleSimilarityGroupUpdate,\n          onRemoveGroup: handleRemoveGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HeaderCombinationList, {\n          channel: selectedChannel,\n          selectedHeader: selectedHeader,\n          onCombinationSelect: handleCombinationSelect,\n          selectedCombination: selectedCombination,\n          onHeaderSearch: handleHeaderSearch,\n          onMultipleCombinationsSelect: handleMultipleCombinationsSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HeaderCombinationTextList, {\n          channel: selectedChannel,\n          selectedCombination: selectedCombination,\n          selectedCombinations: selectedCombinations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), viewMode === 'browse' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"browse-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K68RvG1EcRSr0AkvvYHc0r1+yRA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","HeaderList","HeaderCombinationList","HeaderCombinationTextList","PathNavigation","jsxDEV","_jsxDEV","App","_s","selectedChannel","setSelectedChannel","selectedHeader","setSelectedHeader","selectedCombination","setSelectedCombination","selectedCombinations","setSelectedCombinations","similarityGroups","setSimilarityGroups","viewMode","setViewMode","headerSearchTerm","setHeaderSearchTerm","handleChannelSelect","channel","handleHeaderSelect","header","handleCombinationSelect","combination","handleMultipleCombinationsSelect","combinations","handleViewModeChange","mode","handleHeaderSearch","console","log","handleSimilarityGroupUpdate","group","representative","length","existingGroupIndex","findIndex","g","updatedGroups","items","newGroups","handleRemoveGroup","groupIndex","filter","_","index","className","children","onChannelSelect","onHeaderSelect","onCombinationSelect","onViewModeChange","fileName","_jsxFileName","lineNumber","columnNumber","onSimilarityGroupUpdate","onRemoveGroup","onHeaderSearch","onMultipleCombinationsSelect","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport HeaderList from './components/HeaderList';\nimport HeaderCombinationList from './components/HeaderCombinationList';\nimport HeaderCombinationTextList from './components/HeaderCombinationTextList';\nimport PathNavigation from './components/PathNavigation';\n\nfunction App() {\n  const [selectedChannel, setSelectedChannel] = useState(null);\n  const [selectedHeader, setSelectedHeader] = useState(null);\n  const [selectedCombination, setSelectedCombination] = useState(null);\n  const [selectedCombinations, setSelectedCombinations] = useState([]);\n  const [similarityGroups, setSimilarityGroups] = useState([]);\n  const [viewMode, setViewMode] = useState('edit'); // 'edit' or 'browse'\n  const [headerSearchTerm, setHeaderSearchTerm] = useState('');\n\n  const handleChannelSelect = (channel) => {\n    setSelectedChannel(channel);\n    setSelectedHeader(null); // Reset header selection when changing channel\n    setSelectedCombination(null); // Reset combination selection\n    setSelectedCombinations([]); // Reset multiple combination selection\n  };\n\n  const handleHeaderSelect = (header) => {\n    setSelectedHeader(header);\n    setSelectedCombination(null); // Reset combination selection when changing header\n    setSelectedCombinations([]); // Reset multiple combination selection\n  };\n\n  const handleCombinationSelect = (combination) => {\n    setSelectedCombination(combination);\n  };\n\n  const handleMultipleCombinationsSelect = (combinations) => {\n    setSelectedCombinations(combinations || []);\n  };\n\n  const handleViewModeChange = (mode) => {\n    setViewMode(mode);\n  };\n\n  // Handle header search from right-click in HeaderCombinationList\n  const handleHeaderSearch = (header) => {\n    if (selectedChannel && header) {\n      // We need to set the header search term in the HeaderList component\n      // Set global search term state for HeaderList\n      setHeaderSearchTerm(header);\n      console.log(`헤더 검색 요청: ${header}`);\n    }\n  };\n\n  const handleSimilarityGroupUpdate = (group, representative) => {\n    if (group.length > 0) {\n      // Check if we already have a group with this representative\n      const existingGroupIndex = similarityGroups.findIndex(\n        g => g.representative === representative\n      );\n\n      if (existingGroupIndex >= 0) {\n        // Update existing group\n        const updatedGroups = [...similarityGroups];\n        updatedGroups[existingGroupIndex] = { \n          items: group, \n          representative: representative \n        };\n        setSimilarityGroups(updatedGroups);\n        console.log('유사군 업데이트됨:', updatedGroups);\n      } else {\n        // Add new group\n        const newGroups = [\n          ...similarityGroups, \n          { \n            items: group, \n            representative: representative \n          }\n        ];\n        setSimilarityGroups(newGroups);\n        console.log('새 유사군 추가됨:', newGroups);\n      }\n    }\n  };\n\n  const handleRemoveGroup = (groupIndex) => {\n    const updatedGroups = similarityGroups.filter((_, index) => index !== groupIndex);\n    setSimilarityGroups(updatedGroups);\n    console.log('유사군 삭제됨:', updatedGroups);\n  };\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-content\">\n        <PathNavigation \n          selectedChannel={selectedChannel}\n          selectedHeader={selectedHeader}\n          selectedCombination={selectedCombination}\n          onChannelSelect={handleChannelSelect}\n          onHeaderSelect={handleHeaderSelect}\n          onCombinationSelect={handleCombinationSelect}\n          viewMode={viewMode}\n          onViewModeChange={handleViewModeChange}\n        />\n        {viewMode === 'edit' && (\n          <div className=\"columns-container\">\n            <HeaderList \n              channel={selectedChannel} \n              onHeaderSelect={handleHeaderSelect} \n              selectedHeader={selectedHeader}\n              similarityGroups={similarityGroups}\n              headerSearchTerm={headerSearchTerm}\n              onSimilarityGroupUpdate={handleSimilarityGroupUpdate}\n              onRemoveGroup={handleRemoveGroup}\n            />\n            <HeaderCombinationList \n              channel={selectedChannel} \n              selectedHeader={selectedHeader}\n              onCombinationSelect={handleCombinationSelect}\n              selectedCombination={selectedCombination}\n              onHeaderSearch={handleHeaderSearch}\n              onMultipleCombinationsSelect={handleMultipleCombinationsSelect}\n            />\n            <HeaderCombinationTextList \n              channel={selectedChannel} \n              selectedCombination={selectedCombination}\n              selectedCombinations={selectedCombinations}\n            />\n          </div>\n        )}\n        {viewMode === 'browse' && (\n          <div className=\"browse-container\">\n            {/* Empty container for browse mode */}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}