{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/ChannelList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchChannels } from '../services/api';\nimport Column from './Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelList = ({\n  onChannelSelect,\n  selectedChannel\n}) => {\n  _s();\n  const [channels, setChannels] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getChannels = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchChannels();\n        console.log('API Response:', response);\n        setChannels(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setChannels([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getChannels();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Column, {\n    title: \"\\uCC44\\uB110 \\uBAA9\\uB85D\",\n    items: channels,\n    onItemClick: channel => onChannelSelect(channel.채널키),\n    renderItem: {\n      display: channel => channel.채널키 || 'Unknown Channel',\n      value: channel => channel.채널키\n    },\n    selectedItem: selectedChannel,\n    loading: loading,\n    error: error,\n    emptyMessage: \"\\uCC44\\uB110 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelList, \"XcdomlX3CTSFauJNJ9xugSNg9Q8=\");\n_c = ChannelList;\nexport default ChannelList;\nvar _c;\n$RefreshReg$(_c, \"ChannelList\");","map":{"version":3,"names":["React","useState","useEffect","fetchChannels","Column","jsxDEV","_jsxDEV","ChannelList","onChannelSelect","selectedChannel","_s","channels","setChannels","loading","setLoading","error","setError","getChannels","response","console","log","list","err","message","title","items","onItemClick","channel","채널키","renderItem","display","value","selectedItem","emptyMessage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/ChannelList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchChannels } from '../services/api';\nimport Column from './Column';\n\nconst ChannelList = ({ onChannelSelect, selectedChannel }) => {\n  const [channels, setChannels] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getChannels = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchChannels();\n        console.log('API Response:', response);\n        setChannels(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setChannels([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getChannels();\n  }, []);\n\n  return (\n    <Column\n      title=\"채널 목록\"\n      items={channels}\n      onItemClick={channel => onChannelSelect(channel.채널키)}\n      renderItem={{\n        display: channel => channel.채널키 || 'Unknown Channel',\n        value: channel => channel.채널키\n      }}\n      selectedItem={selectedChannel}\n      loading={loading}\n      error={error}\n      emptyMessage=\"채널 정보가 없습니다.\"\n    />\n  );\n};\n\nexport default ChannelList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMI,QAAQ,GAAG,MAAMf,aAAa,CAAC,CAAC;QACtCgB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;QACtCN,WAAW,CAACM,QAAQ,CAACG,IAAI,IAAI,EAAE,CAAC;QAChCL,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZN,QAAQ,CAACM,GAAG,CAACC,OAAO,CAAC;QACrBX,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACF,MAAM;IACLoB,KAAK,EAAC,2BAAO;IACbC,KAAK,EAAEd,QAAS;IAChBe,WAAW,EAAEC,OAAO,IAAInB,eAAe,CAACmB,OAAO,CAACC,GAAG,CAAE;IACrDC,UAAU,EAAE;MACVC,OAAO,EAAEH,OAAO,IAAIA,OAAO,CAACC,GAAG,IAAI,iBAAiB;MACpDG,KAAK,EAAEJ,OAAO,IAAIA,OAAO,CAACC;IAC5B,CAAE;IACFI,YAAY,EAAEvB,eAAgB;IAC9BI,OAAO,EAAEA,OAAQ;IACjBE,KAAK,EAAEA,KAAM;IACbkB,YAAY,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEN,CAAC;AAAC3B,EAAA,CAvCIH,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}