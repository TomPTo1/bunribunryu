{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderSimilarityList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchHeaderSimilarityList } from '../services/api';\nimport Column from './Column';\nimport './Column.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderSimilarityList = ({\n  channel,\n  selectedHeader,\n  onUpdateHeader\n}) => {\n  _s();\n  const [similarHeaders, setSimilarHeaders] = useState([]);\n  const [groupedHeaders, setGroupedHeaders] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getSimilarHeaders = async () => {\n      if (!channel || !selectedHeader) return;\n      setLoading(true);\n      try {\n        const response = await fetchHeaderSimilarityList(channel, selectedHeader);\n        console.log('Similar headers response:', response);\n        setSimilarHeaders(response.list || []);\n        setGroupedHeaders({});\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setSimilarHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getSimilarHeaders();\n  }, [channel, selectedHeader]);\n  const handleToggleGroup = header => {\n    setGroupedHeaders(prev => {\n      const newGrouped = {\n        ...prev\n      };\n      if (newGrouped[header]) {\n        delete newGrouped[header];\n      } else {\n        newGrouped[header] = true;\n      }\n      return newGrouped;\n    });\n  };\n  const handleSetAsMain = header => {\n    // In a real application, this would update the backend\n    // For now, we'll just show an alert\n    alert(`${header}가 대표어로 설정되었습니다.`);\n  };\n  if (!channel || !selectedHeader) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uACFC \\uD5E4\\uB354\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Filter out headers that are already grouped\n  const groupedHeaderValues = Object.keys(groupedHeaders).reduce((acc, key) => {\n    // Add the header itself to the grouped list\n    acc.push(key);\n    return acc;\n  }, []);\n\n  // Create a tree-like structure\n  const renderHeaders = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"\\uC5D0\\uB7EC: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this);\n    if (similarHeaders.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uC720\\uC0AC \\uD5E4\\uB354 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-content\",\n      children: similarHeaders.map((item, index) => {\n        const headerText = item.header;\n        const isGrouped = Object.keys(groupedHeaders).includes(headerText);\n        if (groupedHeaderValues.includes(headerText) && !isGrouped) {\n          return null; // Skip this header if it's part of another group\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-similarity-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: headerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-action-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleToggleGroup(headerText),\n                className: \"icon-button\",\n                title: isGrouped ? \"유사어에서 제거\" : \"유사어로 추가\",\n                children: isGrouped ? \"➖\" : \"➕\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), isGrouped && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetAsMain(headerText),\n                className: \"icon-button\",\n                title: \"\\uB300\\uD45C\\uC5B4\\uB85C \\uC124\\uC815\",\n                children: \"\\u2B50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), isGrouped && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grouped-headers\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grouped-header-item\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uC774 \\uD5E4\\uB354\\uB294 \\uC720\\uC0AC\\uC5B4 \\uADF8\\uB8F9\\uC73C\\uB85C \\uC124\\uC815\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"column-title\",\n      children: `헤더명 유사군 목록: ${selectedHeader}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), renderHeaders()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderSimilarityList, \"DxTd9mXN9KZMT2d6ksOfB5gOA9A=\");\n_c = HeaderSimilarityList;\nexport default HeaderSimilarityList;\nvar _c;\n$RefreshReg$(_c, \"HeaderSimilarityList\");","map":{"version":3,"names":["React","useState","useEffect","fetchHeaderSimilarityList","Column","jsxDEV","_jsxDEV","HeaderSimilarityList","channel","selectedHeader","onUpdateHeader","_s","similarHeaders","setSimilarHeaders","groupedHeaders","setGroupedHeaders","loading","setLoading","error","setError","getSimilarHeaders","response","console","log","list","err","message","handleToggleGroup","header","prev","newGrouped","handleSetAsMain","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedHeaderValues","Object","keys","reduce","acc","key","push","renderHeaders","length","map","item","index","headerText","isGrouped","includes","onClick","title","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderSimilarityList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchHeaderSimilarityList } from '../services/api';\nimport Column from './Column';\nimport './Column.css';\n\nconst HeaderSimilarityList = ({ channel, selectedHeader, onUpdateHeader }) => {\n  const [similarHeaders, setSimilarHeaders] = useState([]);\n  const [groupedHeaders, setGroupedHeaders] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getSimilarHeaders = async () => {\n      if (!channel || !selectedHeader) return;\n      \n      setLoading(true);\n      try {\n        const response = await fetchHeaderSimilarityList(channel, selectedHeader);\n        console.log('Similar headers response:', response);\n        setSimilarHeaders(response.list || []);\n        setGroupedHeaders({});\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setSimilarHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getSimilarHeaders();\n  }, [channel, selectedHeader]);\n\n  const handleToggleGroup = (header) => {\n    setGroupedHeaders(prev => {\n      const newGrouped = { ...prev };\n      if (newGrouped[header]) {\n        delete newGrouped[header];\n      } else {\n        newGrouped[header] = true;\n      }\n      return newGrouped;\n    });\n  };\n\n  const handleSetAsMain = (header) => {\n    // In a real application, this would update the backend\n    // For now, we'll just show an alert\n    alert(`${header}가 대표어로 설정되었습니다.`);\n  };\n\n  if (!channel || !selectedHeader) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널과 헤더를 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  // Filter out headers that are already grouped\n  const groupedHeaderValues = Object.keys(groupedHeaders).reduce((acc, key) => {\n    // Add the header itself to the grouped list\n    acc.push(key);\n    return acc;\n  }, []);\n\n  // Create a tree-like structure\n  const renderHeaders = () => {\n    if (loading) return <div className=\"loading\">로딩 중...</div>;\n    if (error) return <div className=\"error\">에러: {error}</div>;\n    \n    if (similarHeaders.length === 0) {\n      return <div className=\"column-empty\">유사 헤더 정보가 없습니다.</div>;\n    }\n\n    return (\n      <div className=\"column-content\">\n        {similarHeaders.map((item, index) => {\n          const headerText = item.header;\n          const isGrouped = Object.keys(groupedHeaders).includes(headerText);\n          \n          if (groupedHeaderValues.includes(headerText) && !isGrouped) {\n            return null; // Skip this header if it's part of another group\n          }\n\n          return (\n            <div key={index} className=\"column-item\">\n              <div className=\"header-similarity-item\">\n                <span>{headerText}</span>\n                <div className=\"header-action-buttons\">\n                  <button \n                    onClick={() => handleToggleGroup(headerText)}\n                    className=\"icon-button\"\n                    title={isGrouped ? \"유사어에서 제거\" : \"유사어로 추가\"}\n                  >\n                    {isGrouped ? \"➖\" : \"➕\"}\n                  </button>\n                  {isGrouped && (\n                    <button \n                      onClick={() => handleSetAsMain(headerText)}\n                      className=\"icon-button\"\n                      title=\"대표어로 설정\"\n                    >\n                      ⭐\n                    </button>\n                  )}\n                </div>\n              </div>\n              \n              {isGrouped && (\n                <div className=\"grouped-headers\">\n                  {/* Sub-headers would go here in a real implementation */}\n                  <div className=\"grouped-header-item\">\n                    <span>이 헤더는 유사어 그룹으로 설정되었습니다.</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"column-container\">\n      <h2 className=\"column-title\">{`헤더명 유사군 목록: ${selectedHeader}`}</h2>\n      {renderHeaders()}\n    </div>\n  );\n};\n\nexport default HeaderSimilarityList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}