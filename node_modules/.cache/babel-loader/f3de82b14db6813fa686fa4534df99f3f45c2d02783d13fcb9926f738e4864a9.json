{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchHeaderList } from '../services/api';\nimport './ChannelList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderList = ({\n  channel\n}) => {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getHeaders = async () => {\n      if (!channel) return;\n      try {\n        setLoading(true);\n        const data = await fetchHeaderList(channel);\n        setHeaders(data.list || []);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    getHeaders();\n  }, [channel]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\uD5E4\\uB354 \\uC815\\uBCF4 \\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"\\uC5D0\\uB7EC: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD5E4\\uB354\\uBA85 \\uBAA9\\uB85D: \", channel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-list\",\n      children: headers && headers.length > 0 ? headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-info\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: header.헤더명 || header.name || 'Unknown Header'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-headers\",\n        children: \"\\uD5E4\\uB354 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderList, \"k3UYihDtoRe0xSzgMgzqofvN0ZE=\");\n_c = HeaderList;\nexport default HeaderList;\nvar _c;\n$RefreshReg$(_c, \"HeaderList\");","map":{"version":3,"names":["React","useState","useEffect","fetchHeaderList","jsxDEV","_jsxDEV","HeaderList","channel","_s","headers","setHeaders","loading","setLoading","error","setError","getHeaders","data","list","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","header","index","헤더명","name","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchHeaderList } from '../services/api';\nimport './ChannelList.css';\n\nconst HeaderList = ({ channel }) => {\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getHeaders = async () => {\n      if (!channel) return;\n      \n      try {\n        setLoading(true);\n        const data = await fetchHeaderList(channel);\n        setHeaders(data.list || []);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    getHeaders();\n  }, [channel]);\n\n  if (loading) return <div className=\"loading\">헤더 정보 로딩 중...</div>;\n  if (error) return <div className=\"error\">에러: {error}</div>;\n\n  return (\n    <div className=\"header-list-container\">\n      <h2>헤더명 목록: {channel}</h2>\n      <div className=\"header-list\">\n        {headers && headers.length > 0 ? (\n          headers.map((header, index) => (\n            <div key={index} className=\"header-item\">\n              <div className=\"header-info\">\n                <h3>{header.헤더명 || header.name || 'Unknown Header'}</h3>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"no-headers\">헤더 정보가 없습니다.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}