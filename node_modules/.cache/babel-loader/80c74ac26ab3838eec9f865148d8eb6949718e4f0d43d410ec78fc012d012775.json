{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchHeaderList } from '../services/api';\nimport './Column.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderList = ({\n  channel,\n  onHeaderSelect,\n  selectedHeader,\n  similarityGroups\n}) => {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getHeaders = async () => {\n      if (!channel) return;\n      setLoading(true);\n      try {\n        const response = await fetchHeaderList(channel);\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getHeaders();\n  }, [channel]);\n\n  // 유사군에 포함된 모든 헤더 추출\n  const groupedHeaders = similarityGroups && similarityGroups.length > 0 ? similarityGroups.flatMap(group =>\n  // 대표어를 제외한 헤더만 포함\n  group.items.filter(item => item.header !== group.representative).map(item => item.header)) : [];\n\n  // 각 헤더별로 유사군 매핑 생성\n  const headerToGroupMap = {};\n  if (similarityGroups && similarityGroups.length > 0) {\n    similarityGroups.forEach(group => {\n      // 대표어에 유사군 카운트 태그 추가\n      headerToGroupMap[group.representative] = {\n        isRepresentative: true,\n        count: group.items.length\n      };\n\n      // 대표어가 아닌 항목들은 매핑에서 제외 (목록에 표시되지 않음)\n      group.items.forEach(item => {\n        if (item.header !== group.representative) {\n          headerToGroupMap[item.header] = {\n            representative: group.representative,\n            count: group.items.length\n          };\n        }\n      });\n    });\n  }\n\n  // 유사군에 속하지 않거나 대표어인 헤더만 표시\n  const filteredHeaders = headers.filter(item => !groupedHeaders.includes(item.header));\n  if (!channel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"column-title\",\n      children: [\"\\uD5E4\\uB354 \\uBAA9\\uB85D: \", channel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"\\uC5D0\\uB7EC: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : filteredHeaders.length > 0 ? filteredHeaders.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `column-item ${selectedHeader === item.header ? 'selected' : ''}`,\n        onClick: () => onHeaderSelect(item.header),\n        children: [item.header, headerToGroupMap[item.header] && headerToGroupMap[item.header].isRepresentative && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"similarity-tag\",\n          title: `${headerToGroupMap[item.header].count}개의 유사어가 있습니다`,\n          children: [\"\\uC720\\uC0AC\\uAD70 \", headerToGroupMap[item.header].count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), headerToGroupMap[item.header] && !headerToGroupMap[item.header].isRepresentative && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"similarity-tag\",\n          title: `대표어: ${headerToGroupMap[item.header].representative}`,\n          children: \"\\uC720\\uC0AC\\uAD70\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uD5E4\\uB354 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderList, \"D3Yao2wsxtQMHD+hQw6SGkJ9P5g=\");\n_c = HeaderList;\nexport default HeaderList;\nvar _c;\n$RefreshReg$(_c, \"HeaderList\");","map":{"version":3,"names":["React","useState","useEffect","fetchHeaderList","jsxDEV","_jsxDEV","HeaderList","channel","onHeaderSelect","selectedHeader","similarityGroups","_s","headers","setHeaders","loading","setLoading","error","setError","getHeaders","response","console","log","list","err","message","groupedHeaders","length","flatMap","group","items","filter","item","header","representative","map","headerToGroupMap","forEach","isRepresentative","count","filteredHeaders","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","title","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchHeaderList } from '../services/api';\nimport './Column.css';\n\nconst HeaderList = ({ channel, onHeaderSelect, selectedHeader, similarityGroups }) => {\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getHeaders = async () => {\n      if (!channel) return;\n      \n      setLoading(true);\n      try {\n        const response = await fetchHeaderList(channel);\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getHeaders();\n  }, [channel]);\n\n  // 유사군에 포함된 모든 헤더 추출\n  const groupedHeaders = similarityGroups && similarityGroups.length > 0\n    ? similarityGroups.flatMap(group => \n        // 대표어를 제외한 헤더만 포함\n        group.items\n          .filter(item => item.header !== group.representative)\n          .map(item => item.header)\n      )\n    : [];\n\n  // 각 헤더별로 유사군 매핑 생성\n  const headerToGroupMap = {};\n  if (similarityGroups && similarityGroups.length > 0) {\n    similarityGroups.forEach(group => {\n      // 대표어에 유사군 카운트 태그 추가\n      headerToGroupMap[group.representative] = {\n        isRepresentative: true,\n        count: group.items.length\n      };\n      \n      // 대표어가 아닌 항목들은 매핑에서 제외 (목록에 표시되지 않음)\n      group.items.forEach(item => {\n        if (item.header !== group.representative) {\n          headerToGroupMap[item.header] = {\n            representative: group.representative,\n            count: group.items.length\n          };\n        }\n      });\n    });\n  }\n\n  // 유사군에 속하지 않거나 대표어인 헤더만 표시\n  const filteredHeaders = headers.filter(item => \n    !groupedHeaders.includes(item.header)\n  );\n\n  if (!channel) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널을 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"column-container\">\n      <h2 className=\"column-title\">\n        헤더 목록: {channel}\n      </h2>\n      <div className=\"column-content\">\n        {loading ? (\n          <div className=\"loading\">로딩 중...</div>\n        ) : error ? (\n          <div className=\"error\">에러: {error}</div>\n        ) : filteredHeaders.length > 0 ? (\n          filteredHeaders.map((item, index) => (\n            <div\n              key={index}\n              className={`column-item ${selectedHeader === item.header ? 'selected' : ''}`}\n              onClick={() => onHeaderSelect(item.header)}\n            >\n              {item.header}\n              {headerToGroupMap[item.header] && headerToGroupMap[item.header].isRepresentative && (\n                <span className=\"similarity-tag\" title={`${headerToGroupMap[item.header].count}개의 유사어가 있습니다`}>\n                  유사군 {headerToGroupMap[item.header].count}\n                </span>\n              )}\n              {headerToGroupMap[item.header] && !headerToGroupMap[item.header].isRepresentative && (\n                <span className=\"similarity-tag\" title={`대표어: ${headerToGroupMap[item.header].representative}`}>\n                  유사군\n                </span>\n              )}\n            </div>\n          ))\n        ) : (\n          <div className=\"column-empty\">헤더 정보가 없습니다.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}