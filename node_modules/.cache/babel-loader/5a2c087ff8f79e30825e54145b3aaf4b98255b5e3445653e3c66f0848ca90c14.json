{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchHeaderList } from '../services/api';\nimport './HeaderList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderList = ({\n  channel\n}) => {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getHeaders = async () => {\n      if (!channel) return;\n      setLoading(true);\n      try {\n        const response = await fetchHeaderList(channel);\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getHeaders();\n  }, [channel]);\n  if (!channel) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-selection\",\n    children: \"\\uCC44\\uB110\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 24\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\uD5E4\\uB354 \\uBAA9\\uB85D \\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"\\uC5D0\\uB7EC: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD5E4\\uB354 \\uBAA9\\uB85D: \", channel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-list\",\n      children: headers && headers.length > 0 ? headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-item\",\n        children: header\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-headers\",\n        children: \"\\uD5E4\\uB354 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderList, \"D3Yao2wsxtQMHD+hQw6SGkJ9P5g=\");\n_c = HeaderList;\nexport default HeaderList;\nvar _c;\n$RefreshReg$(_c, \"HeaderList\");","map":{"version":3,"names":["React","useState","useEffect","fetchHeaderList","jsxDEV","_jsxDEV","HeaderList","channel","_s","headers","setHeaders","loading","setLoading","error","setError","getHeaders","response","console","log","list","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","header","index","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchHeaderList } from '../services/api';\nimport './HeaderList.css';\n\nconst HeaderList = ({ channel }) => {\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getHeaders = async () => {\n      if (!channel) return;\n      \n      setLoading(true);\n      try {\n        const response = await fetchHeaderList(channel);\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getHeaders();\n  }, [channel]);\n\n  if (!channel) return <div className=\"no-selection\">채널을 선택해주세요.</div>;\n  if (loading) return <div className=\"loading\">헤더 목록 로딩 중...</div>;\n  if (error) return <div className=\"error\">에러: {error}</div>;\n\n  return (\n    <div className=\"header-list-container\">\n      <h2>헤더 목록: {channel}</h2>\n      <div className=\"header-list\">\n        {headers && headers.length > 0 ? (\n          headers.map((header, index) => (\n            <div key={index} className=\"header-item\">\n              {header}\n            </div>\n          ))\n        ) : (\n          <div className=\"no-headers\">헤더 정보가 없습니다.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}