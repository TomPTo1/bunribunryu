{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/DataDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SeparationClassifier.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataDisplay = ({\n  processedData,\n  flattenData,\n  segmentationData,\n  groupingData\n}) => {\n  _s();\n  // Add state for user-defined groups\n  const [userGroups, setUserGroups] = useState([]);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [editingGroupIndex, setEditingGroupIndex] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n\n  // Track which values have been added to any group\n  const [usedValues, setUsedValues] = useState(new Set());\n  if (!processedData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\uCC98\\uB9AC\\uD560 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if the text is a duplicated string (contains itself twice)\n  const isDuplicatedText = text => {\n    if (typeof text !== 'string' || text.length === 0) return false;\n    const halfLength = Math.floor(text.length / 2);\n    const firstHalf = text.substring(0, halfLength);\n    return text.includes(firstHalf + firstHalf);\n  };\n\n  // Remove duplicated text if needed\n  const cleanDuplicatedText = text => {\n    if (!isDuplicatedText(text)) return text;\n    const halfLength = Math.floor(text.length / 2);\n    return text.substring(0, halfLength);\n  };\n\n  // Check if a value has segmentation data\n  const hasSegmentationData = value => {\n    if (!segmentationData || !segmentationData.segmentations) return false;\n    const segmentations = segmentationData.segmentations;\n    return segmentations.some(seg => seg.value === value && seg.segments.length > 1);\n  };\n\n  // Get segmentation data for a value\n  const getSegmentationData = value => {\n    if (!segmentationData || !segmentationData.segmentations) return null;\n    const segmentations = segmentationData.segmentations;\n    return segmentations.find(seg => seg.value === value);\n  };\n\n  // Check if a value has been used in any group\n  const isValueUsed = value => {\n    return usedValues.has(value);\n  };\n\n  // Handle segment click\n  const handleSegmentClick = (segment, e) => {\n    // 전파 중지 - 부모의 클릭 이벤트가 발생하지 않도록\n    e.stopPropagation();\n    console.log('Segment clicked:', segment);\n\n    // If a group is selected, add the segment to that group\n    if (selectedGroup !== null) {\n      const segmentValue = typeof segment === 'string' ? segment : segment.text;\n      addToGroup(selectedGroup, segmentValue);\n    }\n  };\n\n  // Handle whole tag click\n  const handleTagClick = value => {\n    console.log('Whole tag clicked:', value);\n\n    // If a group is selected and value not already used, add the value to that group\n    if (selectedGroup !== null && !isValueUsed(value)) {\n      addToGroup(selectedGroup, value);\n    }\n  };\n\n  // Helper function to render a tag with appropriate styling\n  const renderTag = (value, source, key, isLastStep) => {\n    let className = `value-tag ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'}`;\n\n    // Add class if this value is already used in a group\n    if (isValueUsed(typeof value === 'string' ? value : value.value)) {\n      className += ' used-value';\n    }\n\n    // Check if we have segmentation data for this value\n    const valueText = typeof value === 'string' ? value : value.value;\n    const segmentation = getSegmentationData(valueText);\n    if (segmentation && segmentation.segments.length > 1) {\n      // Render with inner segments\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${className} tag-container ${isValueUsed(valueText) ? 'used-value' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"whole-tag-button\",\n          onClick: () => handleTagClick(valueText),\n          title: \"\\uC804\\uCCB4 \\uD0DC\\uADF8 \\uC120\\uD0DD\",\n          disabled: isValueUsed(valueText),\n          children: valueText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segments-container\",\n          children: segmentation.segments.map((segment, segIdx) => {\n            const segmentText = segment.text;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `segment-button ${segment.isSubstring ? 'segment-matched' : 'segment-unmatched'} ${isValueUsed(segmentText) ? 'used-value' : ''}`,\n              onClick: e => handleSegmentClick(segment, e),\n              disabled: isValueUsed(segmentText),\n              children: segmentText\n            }, `seg-${segIdx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    }\n\n    // No segmentation, render normally but still clickable\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${className} clickable-tag simple-tag-button ${isValueUsed(valueText) ? 'used-value' : ''}`,\n      onClick: () => handleTagClick(valueText),\n      disabled: isValueUsed(valueText),\n      children: valueText\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render the enhanced view that shows processed and unprocessed parts in sequence\n  const renderEnhancedView = row => {\n    // Handle substring segmentation data\n    if (row.type === 'substring-segmentation') {\n      return renderSubstringSegmentationView(row);\n    }\n\n    // Check if this is the last pipeline step (right before substring segmentation)\n    const isLastStep = segmentationData && segmentationData.processed && segmentationData.processed.previous && segmentationData.processed.previous.type === row.type;\n\n    // Clean up potentially duplicated original text\n    let original = row.original;\n    if (isDuplicatedText(original)) {\n      original = cleanDuplicatedText(original);\n    }\n    if (!original || typeof original !== 'string') {\n      return renderSeparatedValues(row, isLastStep);\n    }\n\n    // If no separation has happened yet\n    if (!row.separated || row.separated.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unprocessed-tag\",\n        children: original\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 14\n      }, this);\n    }\n    if (row.type === 'bracket-separation') {\n      // For bracket separation, highlight brackets and content\n      let result = [];\n      let lastIndex = 0;\n\n      // Sort match details by start index if available\n      const matchDetails = row.matchDetails || [];\n      const sortedMatches = [...matchDetails].sort((a, b) => a.startIndex - b.startIndex);\n      sortedMatches.forEach((match, idx) => {\n        // Add unprocessed text before this match\n        if (match.startIndex > lastIndex) {\n          const unprocessedText = original.substring(lastIndex, match.startIndex);\n          result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"unprocessed-tag\",\n            children: unprocessedText\n          }, `unproc-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this));\n        }\n\n        // Add the processed bracket content\n        result.push(renderTag(match.value, 'bracket', `proc-${idx}`, isLastStep));\n        lastIndex = match.endIndex;\n      });\n\n      // Add any remaining text\n      if (lastIndex < original.length) {\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"unprocessed-tag\",\n          children: original.substring(lastIndex)\n        }, \"unproc-last\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this));\n      }\n      return result;\n    }\n\n    // Fallback to original display method\n    return renderSeparatedValues(row, isLastStep);\n  };\n\n  // Render substring segmentation view with segmented parts\n  const renderSubstringSegmentationView = row => {\n    if (!row.previous || !row.previous.separated || row.previous.separated.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-values\",\n        children: \"\\uC774\\uC804 \\uB2E8\\uACC4\\uC758 \\uAC12\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"substring-segmentation-view\",\n      children: row.separated.map((item, idx) => {\n        const value = typeof item === 'string' ? item : item.value;\n        const segments = item.segments || [];\n        const source = item.source || 'text';\n\n        // If there are segments, render them\n        if (segments.length > 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `value-tag tag-container ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'} ${isValueUsed(value) ? 'used-value' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"whole-tag-button\",\n              onClick: () => handleTagClick(value),\n              title: \"\\uC804\\uCCB4 \\uD0DC\\uADF8 \\uC120\\uD0DD\",\n              disabled: isValueUsed(value),\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"segments-container\",\n              children: segments.map((segment, segIdx) => {\n                const segmentText = segment.text;\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `segment-button ${segment.isSubstring ? 'segment-matched' : 'segment-unmatched'} ${isValueUsed(segmentText) ? 'used-value' : ''}`,\n                  onClick: e => handleSegmentClick(segment, e),\n                  disabled: isValueUsed(segmentText),\n                  children: segmentText\n                }, `seg-${segIdx}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this);\n        }\n\n        // No segments, render normally\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `value-tag simple-tag-button ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'} ${isValueUsed(value) ? 'used-value' : ''}`,\n          onClick: () => handleTagClick(value),\n          disabled: isValueUsed(value),\n          children: value\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSeparatedValues = (row, isLastStep) => {\n    if (!row.separated || row.separated.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-values\",\n        children: \"\\uCD94\\uCD9C\\uB41C \\uAC12 \\uC5C6\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 14\n      }, this);\n    }\n    if (Array.isArray(row.separated) && row.separated.every(v => typeof v === 'string')) {\n      // Old format (just strings)\n      return row.separated.map((val, idx) => renderTag(val, 'text', idx, isLastStep));\n    }\n\n    // New format (with metadata)\n    return row.separated.map((item, idx) => renderTag(item, item.source || 'text', idx, isLastStep));\n  };\n\n  // Render grouped data without duplicates\n  const renderGroupedData = () => {\n    if (!groupingData) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouped-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uADF8\\uB8F9\\uD551\\uB41C \\uB370\\uC774\\uD130 (\\uC911\\uBCF5 \\uC81C\\uAC70)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouped-data-content\",\n        children: Object.entries(groupingData).map(([key, segments], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grouped-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-key\",\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-segments\",\n            children: Array.isArray(segments) && segments.filter(segment => !isValueUsed(segment)).map((segment, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"segment-item\",\n              onClick: () => handleTagClick(segment),\n              disabled: isValueUsed(segment),\n              children: segment\n            }, `segment-${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, `group-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add new user group\n  const addUserGroup = () => {\n    if (newGroupName.trim() === '') return;\n    setUserGroups([...userGroups, {\n      id: Date.now(),\n      name: newGroupName,\n      items: []\n    }]);\n    setNewGroupName('');\n  };\n\n  // Start editing a group name\n  const startEditingGroupName = (index, name, e) => {\n    e.stopPropagation(); // Prevent group selection\n    setEditingGroupIndex(index);\n    setEditingGroupName(name);\n  };\n\n  // Save the edited group name\n  const saveGroupName = (index, e) => {\n    e.stopPropagation(); // Prevent group selection\n\n    if (editingGroupName.trim() === '') return;\n    const updatedGroups = [...userGroups];\n    updatedGroups[index].name = editingGroupName;\n    setUserGroups(updatedGroups);\n    setEditingGroupIndex(null);\n    setEditingGroupName('');\n  };\n\n  // Handle keydown in the editing input\n  const handleEditKeyDown = (index, e) => {\n    if (e.key === 'Enter') {\n      saveGroupName(index, e);\n    } else if (e.key === 'Escape') {\n      setEditingGroupIndex(null);\n      setEditingGroupName('');\n    }\n  };\n\n  // Add segment to specific group\n  const addToGroup = (groupIndex, value) => {\n    // Don't add if already exists in this group or in any other group\n    if (userGroups[groupIndex].items.includes(value) || isValueUsed(value)) return;\n    const updatedGroups = [...userGroups];\n    updatedGroups[groupIndex].items.push(value);\n    setUserGroups(updatedGroups);\n\n    // Mark this value as used\n    setUsedValues(prev => new Set([...prev, value]));\n  };\n\n  // Remove item from group\n  const removeFromGroup = (groupIndex, itemIndex) => {\n    const valueToRemove = userGroups[groupIndex].items[itemIndex];\n    const updatedGroups = [...userGroups];\n    updatedGroups[groupIndex].items.splice(itemIndex, 1);\n    setUserGroups(updatedGroups);\n\n    // Check if the value exists in any other group before removing from usedValues\n    const isUsedInOtherGroups = userGroups.some((group, idx) => idx !== groupIndex && group.items.includes(valueToRemove));\n    if (!isUsedInOtherGroups) {\n      const newUsedValues = new Set(usedValues);\n      newUsedValues.delete(valueToRemove);\n      setUsedValues(newUsedValues);\n    }\n  };\n\n  // Select group to add items to\n  const toggleGroupSelection = index => {\n    setSelectedGroup(selectedGroup === index ? null : index);\n  };\n\n  // Render user-defined groups\n  const renderUserGroups = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-groups-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uC758 \\uADF8\\uB8F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-creation-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newGroupName,\n          onChange: e => setNewGroupName(e.target.value),\n          placeholder: \"\\uC0C8 \\uADF8\\uB8F9 \\uC774\\uB984 \\uC785\\uB825\",\n          className: \"group-name-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addUserGroup,\n          className: \"add-group-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), \" \\uADF8\\uB8F9 \\uCD94\\uAC00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-groups-list\",\n        children: userGroups.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-groups-message\",\n          children: \"\\uC0DD\\uC131\\uB41C \\uADF8\\uB8F9\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uC704 \\uC785\\uB825\\uCC3D\\uC5D0\\uC11C \\uADF8\\uB8F9\\uC744 \\uCD94\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this) : userGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `user-group-box ${selectedGroup === groupIndex ? 'selected-group' : ''}`,\n          onClick: () => toggleGroupSelection(groupIndex),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-group-header\",\n            children: [editingGroupIndex === groupIndex ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-group-name-edit\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editingGroupName,\n                onChange: e => setEditingGroupName(e.target.value),\n                onClick: e => e.stopPropagation() // Prevent group selection\n                ,\n                onKeyDown: e => handleEditKeyDown(groupIndex, e),\n                onBlur: e => saveGroupName(groupIndex, e),\n                autoFocus: true,\n                className: \"group-name-edit-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-group-name-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-group-name\",\n                children: group.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-group-name-btn\",\n                onClick: e => startEditingGroupName(groupIndex, group.name, e),\n                title: \"\\uADF8\\uB8F9\\uBA85 \\uC218\\uC815\",\n                children: \"\\u270E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-group-selection-status\",\n              children: selectedGroup === groupIndex ? '선택됨' : '클릭하여 선택'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-group-items\",\n            children: group.items.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-group-message\",\n              children: \"\\uC67C\\uCABD \\uBD84\\uC808\\uAC12\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC774 \\uADF8\\uB8F9\\uC5D0 \\uCD94\\uAC00\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-group-items-list\",\n              children: group.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-text\",\n                  children: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"remove-item-btn\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    removeFromGroup(groupIndex, itemIndex);\n                  },\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 27\n                }, this)]\n              }, itemIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, this)]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-display\",\n    children: [groupingData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouped-data-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouped-data-wrapper\",\n        children: renderGroupedData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-groups-wrapper\",\n        children: renderUserGroups()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processed-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uCC98\\uB9AC\\uB41C \\uB370\\uC774\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: flattenData(processedData).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"enhanced-view\",\n              children: renderEnhancedView(row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 5\n  }, this);\n};\n_s(DataDisplay, \"1/Gw7MhQtm38OZGRpAO1z77zB/M=\");\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DataDisplay","processedData","flattenData","segmentationData","groupingData","_s","userGroups","setUserGroups","newGroupName","setNewGroupName","selectedGroup","setSelectedGroup","editingGroupIndex","setEditingGroupIndex","editingGroupName","setEditingGroupName","usedValues","setUsedValues","Set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isDuplicatedText","text","length","halfLength","Math","floor","firstHalf","substring","includes","cleanDuplicatedText","hasSegmentationData","value","segmentations","some","seg","segments","getSegmentationData","find","isValueUsed","has","handleSegmentClick","segment","e","stopPropagation","console","log","segmentValue","addToGroup","handleTagClick","renderTag","source","key","isLastStep","valueText","segmentation","onClick","title","disabled","map","segIdx","segmentText","isSubstring","renderEnhancedView","row","type","renderSubstringSegmentationView","processed","previous","original","renderSeparatedValues","separated","result","lastIndex","matchDetails","sortedMatches","sort","a","b","startIndex","forEach","match","idx","unprocessedText","push","endIndex","item","Array","isArray","every","v","val","renderGroupedData","Object","entries","index","filter","addUserGroup","trim","id","Date","now","name","items","startEditingGroupName","saveGroupName","updatedGroups","handleEditKeyDown","groupIndex","prev","removeFromGroup","itemIndex","valueToRemove","splice","isUsedInOtherGroups","group","newUsedValues","delete","toggleGroupSelection","renderUserGroups","onChange","target","placeholder","onKeyDown","onBlur","autoFocus","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/DataDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SeparationClassifier.css';\n\nconst DataDisplay = ({ processedData, flattenData, segmentationData, groupingData }) => {\n  // Add state for user-defined groups\n  const [userGroups, setUserGroups] = useState([]);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [editingGroupIndex, setEditingGroupIndex] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  \n  // Track which values have been added to any group\n  const [usedValues, setUsedValues] = useState(new Set());\n\n  if (!processedData) {\n    return <div className=\"no-data\">처리할 데이터가 없습니다</div>;\n  }\n\n  // Check if the text is a duplicated string (contains itself twice)\n  const isDuplicatedText = (text) => {\n    if (typeof text !== 'string' || text.length === 0) return false;\n    const halfLength = Math.floor(text.length / 2);\n    const firstHalf = text.substring(0, halfLength);\n    return text.includes(firstHalf + firstHalf);\n  };\n\n  // Remove duplicated text if needed\n  const cleanDuplicatedText = (text) => {\n    if (!isDuplicatedText(text)) return text;\n    const halfLength = Math.floor(text.length / 2);\n    return text.substring(0, halfLength);\n  };\n\n  // Check if a value has segmentation data\n  const hasSegmentationData = (value) => {\n    if (!segmentationData || !segmentationData.segmentations) return false;\n    \n    const segmentations = segmentationData.segmentations;\n    return segmentations.some(seg => seg.value === value && seg.segments.length > 1);\n  };\n\n  // Get segmentation data for a value\n  const getSegmentationData = (value) => {\n    if (!segmentationData || !segmentationData.segmentations) return null;\n    \n    const segmentations = segmentationData.segmentations;\n    return segmentations.find(seg => seg.value === value);\n  };\n\n  // Check if a value has been used in any group\n  const isValueUsed = (value) => {\n    return usedValues.has(value);\n  };\n\n  // Handle segment click\n  const handleSegmentClick = (segment, e) => {\n    // 전파 중지 - 부모의 클릭 이벤트가 발생하지 않도록\n    e.stopPropagation();\n    console.log('Segment clicked:', segment);\n    \n    // If a group is selected, add the segment to that group\n    if (selectedGroup !== null) {\n      const segmentValue = typeof segment === 'string' ? segment : segment.text;\n      addToGroup(selectedGroup, segmentValue);\n    }\n  };\n\n  // Handle whole tag click\n  const handleTagClick = (value) => {\n    console.log('Whole tag clicked:', value);\n    \n    // If a group is selected and value not already used, add the value to that group\n    if (selectedGroup !== null && !isValueUsed(value)) {\n      addToGroup(selectedGroup, value);\n    }\n  };\n\n  // Helper function to render a tag with appropriate styling\n  const renderTag = (value, source, key, isLastStep) => {\n    let className = `value-tag ${\n      source === 'bracket' ? 'bracket-source' : \n      source === 'clean-text' ? 'text-source' : 'delimiter-source'\n    }`;\n    \n    // Add class if this value is already used in a group\n    if (isValueUsed(typeof value === 'string' ? value : value.value)) {\n      className += ' used-value';\n    }\n    \n    // Check if we have segmentation data for this value\n    const valueText = typeof value === 'string' ? value : value.value;\n    const segmentation = getSegmentationData(valueText);\n    \n    if (segmentation && segmentation.segments.length > 1) {\n      // Render with inner segments\n      return (\n        <div key={key} className={`${className} tag-container ${isValueUsed(valueText) ? 'used-value' : ''}`}>\n          <button \n            className=\"whole-tag-button\" \n            onClick={() => handleTagClick(valueText)}\n            title=\"전체 태그 선택\"\n            disabled={isValueUsed(valueText)}\n          >\n            {valueText}\n          </button>\n          <div className=\"segments-container\">\n            {segmentation.segments.map((segment, segIdx) => {\n              const segmentText = segment.text;\n              return (\n                <button \n                  key={`seg-${segIdx}`} \n                  className={`segment-button ${segment.isSubstring ? 'segment-matched' : 'segment-unmatched'} ${isValueUsed(segmentText) ? 'used-value' : ''}`}\n                  onClick={(e) => handleSegmentClick(segment, e)}\n                  disabled={isValueUsed(segmentText)}\n                >\n                  {segmentText}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      );\n    }\n    \n    // No segmentation, render normally but still clickable\n    return (\n      <button \n        key={key} \n        className={`${className} clickable-tag simple-tag-button ${isValueUsed(valueText) ? 'used-value' : ''}`}\n        onClick={() => handleTagClick(valueText)}\n        disabled={isValueUsed(valueText)}\n      >\n        {valueText}\n      </button>\n    );\n  };\n\n  // Render the enhanced view that shows processed and unprocessed parts in sequence\n  const renderEnhancedView = (row) => {\n    // Handle substring segmentation data\n    if (row.type === 'substring-segmentation') {\n      return renderSubstringSegmentationView(row);\n    }\n    \n    // Check if this is the last pipeline step (right before substring segmentation)\n    const isLastStep = segmentationData && segmentationData.processed && \n                       (segmentationData.processed.previous &&\n                        segmentationData.processed.previous.type === row.type);\n    \n    // Clean up potentially duplicated original text\n    let original = row.original;\n    if (isDuplicatedText(original)) {\n      original = cleanDuplicatedText(original);\n    }\n    \n    if (!original || typeof original !== 'string') {\n      return renderSeparatedValues(row, isLastStep);\n    }\n    \n    // If no separation has happened yet\n    if (!row.separated || row.separated.length === 0) {\n      return <span className=\"unprocessed-tag\">{original}</span>;\n    }\n    \n    if (row.type === 'bracket-separation') {\n      // For bracket separation, highlight brackets and content\n      let result = [];\n      let lastIndex = 0;\n      \n      // Sort match details by start index if available\n      const matchDetails = row.matchDetails || [];\n      const sortedMatches = [...matchDetails].sort((a, b) => a.startIndex - b.startIndex);\n      \n      sortedMatches.forEach((match, idx) => {\n        // Add unprocessed text before this match\n        if (match.startIndex > lastIndex) {\n          const unprocessedText = original.substring(lastIndex, match.startIndex);\n          result.push(\n            <span key={`unproc-${idx}`} className=\"unprocessed-tag\">{unprocessedText}</span>\n          );\n        }\n        \n        // Add the processed bracket content\n        result.push(\n          renderTag(match.value, 'bracket', `proc-${idx}`, isLastStep)\n        );\n        \n        lastIndex = match.endIndex;\n      });\n      \n      // Add any remaining text\n      if (lastIndex < original.length) {\n        result.push(\n          <span key=\"unproc-last\" className=\"unprocessed-tag\">\n            {original.substring(lastIndex)}\n          </span>\n        );\n      }\n      \n      return result;\n    }\n    \n    // Fallback to original display method\n    return renderSeparatedValues(row, isLastStep);\n  };\n  \n  // Render substring segmentation view with segmented parts\n  const renderSubstringSegmentationView = (row) => {\n    if (!row.previous || !row.previous.separated || row.previous.separated.length === 0) {\n      return <span className=\"no-values\">이전 단계의 값이 없습니다</span>;\n    }\n    \n    return (\n      <div className=\"substring-segmentation-view\">\n        {row.separated.map((item, idx) => {\n          const value = typeof item === 'string' ? item : item.value;\n          const segments = item.segments || [];\n          const source = item.source || 'text';\n          \n          // If there are segments, render them\n          if (segments.length > 1) {\n            return (\n              <div \n                key={idx} \n                className={`value-tag tag-container ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'} ${isValueUsed(value) ? 'used-value' : ''}`}\n              >\n                <button \n                  className=\"whole-tag-button\" \n                  onClick={() => handleTagClick(value)}\n                  title=\"전체 태그 선택\"\n                  disabled={isValueUsed(value)}\n                >\n                  {value}\n                </button>\n                <div className=\"segments-container\">\n                  {segments.map((segment, segIdx) => {\n                    const segmentText = segment.text;\n                    return (\n                      <button \n                        key={`seg-${segIdx}`} \n                        className={`segment-button ${segment.isSubstring ? 'segment-matched' : 'segment-unmatched'} ${isValueUsed(segmentText) ? 'used-value' : ''}`}\n                        onClick={(e) => handleSegmentClick(segment, e)}\n                        disabled={isValueUsed(segmentText)}\n                      >\n                        {segmentText}\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n          \n          // No segments, render normally\n          return (\n            <button \n              key={idx} \n              className={`value-tag simple-tag-button ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'} ${isValueUsed(value) ? 'used-value' : ''}`}\n              onClick={() => handleTagClick(value)}\n              disabled={isValueUsed(value)}\n            >\n              {value}\n            </button>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderSeparatedValues = (row, isLastStep) => {\n    if (!row.separated || row.separated.length === 0) {\n      return <span className=\"no-values\">추출된 값 없음</span>;\n    }\n\n    if (Array.isArray(row.separated) && row.separated.every(v => typeof v === 'string')) {\n      // Old format (just strings)\n      return row.separated.map((val, idx) => \n        renderTag(val, 'text', idx, isLastStep)\n      );\n    } \n    \n    // New format (with metadata)\n    return row.separated.map((item, idx) => \n      renderTag(item, item.source || 'text', idx, isLastStep)\n    );\n  };\n  \n  // Render grouped data without duplicates\n  const renderGroupedData = () => {\n    if (!groupingData) {\n      return null;\n    }\n    \n    return (\n      <div className=\"grouped-data-section\">\n        <h3>그룹핑된 데이터 (중복 제거)</h3>\n        <div className=\"grouped-data-content\">\n          {Object.entries(groupingData).map(([key, segments], index) => (\n            <div key={`group-${index}`} className=\"grouped-item\">\n              <div className=\"group-key\">{key}</div>\n              <div className=\"group-segments\">\n                {Array.isArray(segments) && segments.filter(segment => !isValueUsed(segment)).map((segment, idx) => (\n                  <button \n                    key={`segment-${idx}`} \n                    className=\"segment-item\"\n                    onClick={() => handleTagClick(segment)}\n                    disabled={isValueUsed(segment)}\n                  >\n                    {segment}\n                  </button>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // Add new user group\n  const addUserGroup = () => {\n    if (newGroupName.trim() === '') return;\n    \n    setUserGroups([\n      ...userGroups,\n      { id: Date.now(), name: newGroupName, items: [] }\n    ]);\n    setNewGroupName('');\n  };\n\n  // Start editing a group name\n  const startEditingGroupName = (index, name, e) => {\n    e.stopPropagation(); // Prevent group selection\n    setEditingGroupIndex(index);\n    setEditingGroupName(name);\n  };\n\n  // Save the edited group name\n  const saveGroupName = (index, e) => {\n    e.stopPropagation(); // Prevent group selection\n    \n    if (editingGroupName.trim() === '') return;\n    \n    const updatedGroups = [...userGroups];\n    updatedGroups[index].name = editingGroupName;\n    setUserGroups(updatedGroups);\n    setEditingGroupIndex(null);\n    setEditingGroupName('');\n  };\n\n  // Handle keydown in the editing input\n  const handleEditKeyDown = (index, e) => {\n    if (e.key === 'Enter') {\n      saveGroupName(index, e);\n    } else if (e.key === 'Escape') {\n      setEditingGroupIndex(null);\n      setEditingGroupName('');\n    }\n  };\n\n  // Add segment to specific group\n  const addToGroup = (groupIndex, value) => {\n    // Don't add if already exists in this group or in any other group\n    if (userGroups[groupIndex].items.includes(value) || isValueUsed(value)) return;\n    \n    const updatedGroups = [...userGroups];\n    updatedGroups[groupIndex].items.push(value);\n    setUserGroups(updatedGroups);\n    \n    // Mark this value as used\n    setUsedValues(prev => new Set([...prev, value]));\n  };\n\n  // Remove item from group\n  const removeFromGroup = (groupIndex, itemIndex) => {\n    const valueToRemove = userGroups[groupIndex].items[itemIndex];\n    const updatedGroups = [...userGroups];\n    updatedGroups[groupIndex].items.splice(itemIndex, 1);\n    setUserGroups(updatedGroups);\n    \n    // Check if the value exists in any other group before removing from usedValues\n    const isUsedInOtherGroups = userGroups.some((group, idx) => \n      idx !== groupIndex && group.items.includes(valueToRemove)\n    );\n    \n    if (!isUsedInOtherGroups) {\n      const newUsedValues = new Set(usedValues);\n      newUsedValues.delete(valueToRemove);\n      setUsedValues(newUsedValues);\n    }\n  };\n\n  // Select group to add items to\n  const toggleGroupSelection = (index) => {\n    setSelectedGroup(selectedGroup === index ? null : index);\n  };\n\n  // Render user-defined groups\n  const renderUserGroups = () => {\n    return (\n      <div className=\"user-groups-section\">\n        <h3>사용자 정의 그룹</h3>\n        \n        {/* Group creation form */}\n        <div className=\"group-creation-form\">\n          <input\n            type=\"text\"\n            value={newGroupName}\n            onChange={(e) => setNewGroupName(e.target.value)}\n            placeholder=\"새 그룹 이름 입력\"\n            className=\"group-name-input\"\n          />\n          <button onClick={addUserGroup} className=\"add-group-btn\">\n            <span>+</span> 그룹 추가\n          </button>\n        </div>\n        \n        {/* Groups list */}\n        <div className=\"user-groups-list\">\n          {userGroups.length === 0 ? (\n            <div className=\"no-groups-message\">\n              생성된 그룹이 없습니다. 위 입력창에서 그룹을 추가해주세요.\n            </div>\n          ) : (\n            userGroups.map((group, groupIndex) => (\n              <div \n                key={group.id} \n                className={`user-group-box ${selectedGroup === groupIndex ? 'selected-group' : ''}`}\n                onClick={() => toggleGroupSelection(groupIndex)}\n              >\n                <div className=\"user-group-header\">\n                  {editingGroupIndex === groupIndex ? (\n                    <div className=\"user-group-name-edit\">\n                      <input\n                        type=\"text\"\n                        value={editingGroupName}\n                        onChange={(e) => setEditingGroupName(e.target.value)}\n                        onClick={(e) => e.stopPropagation()} // Prevent group selection\n                        onKeyDown={(e) => handleEditKeyDown(groupIndex, e)}\n                        onBlur={(e) => saveGroupName(groupIndex, e)}\n                        autoFocus\n                        className=\"group-name-edit-input\"\n                      />\n                    </div>\n                  ) : (\n                    <div className=\"user-group-name-container\">\n                      <div className=\"user-group-name\">{group.name}</div>\n                      <button \n                        className=\"edit-group-name-btn\"\n                        onClick={(e) => startEditingGroupName(groupIndex, group.name, e)}\n                        title=\"그룹명 수정\"\n                      >\n                        ✎\n                      </button>\n                    </div>\n                  )}\n                  <div className=\"user-group-selection-status\">\n                    {selectedGroup === groupIndex ? '선택됨' : '클릭하여 선택'}\n                  </div>\n                </div>\n                <div className=\"user-group-items\">\n                  {group.items.length === 0 ? (\n                    <div className=\"empty-group-message\">\n                      왼쪽 분절값을 클릭하여 이 그룹에 추가하세요\n                    </div>\n                  ) : (\n                    <div className=\"user-group-items-list\">\n                      {group.items.map((item, itemIndex) => (\n                        <div key={itemIndex} className=\"user-group-item\">\n                          <span className=\"item-text\">{item}</span>\n                          <button \n                            className=\"remove-item-btn\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              removeFromGroup(groupIndex, itemIndex);\n                            }}\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"data-display\">\n      {/* Layout with two column when grouping data is available */}\n      {groupingData && (\n        <div className=\"grouped-data-layout\">\n          <div className=\"grouped-data-wrapper\">\n            {renderGroupedData()}\n          </div>\n          <div className=\"user-groups-wrapper\">\n            {renderUserGroups()}\n          </div>\n        </div>\n      )}\n      \n      {/* Display the table with processed data */}\n      <div className=\"processed-data-section\">\n        <h3>처리된 데이터</h3>\n        <table className=\"data-table\">\n          <tbody>\n            {flattenData(processedData).map((row, index) => (\n              <tr key={index}>\n                <td className=\"enhanced-view\">\n                  {renderEnhancedView(row)}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default DataDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}