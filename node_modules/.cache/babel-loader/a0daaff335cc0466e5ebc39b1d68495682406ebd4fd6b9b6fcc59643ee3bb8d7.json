{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupingSheet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GroupingSheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupingSheet = ({\n  segmentValues = []\n}) => {\n  _s();\n  // 기본 빈 그룹들 생성 (미처리 + 추가 빈 그룹들)\n  const [groups, setGroups] = useState([{\n    id: 'unprocessed',\n    name: '미처리',\n    items: [],\n    isDefault: true,\n    isEditable: false\n  }, {\n    id: 'group-1',\n    name: '그룹 1',\n    items: [],\n    isDefault: false,\n    isEditable: true\n  }, {\n    id: 'group-2',\n    name: '그룹 2',\n    items: [],\n    isDefault: false,\n    isEditable: true\n  }, {\n    id: 'group-3',\n    name: '그룹 3',\n    items: [],\n    isDefault: false,\n    isEditable: true\n  }]);\n\n  // 값들의 그룹 할당 상태 관리\n  const [valueGroups, setValueGroups] = useState({});\n\n  // 선택된 그룹 관리\n  const [selectedGroupId, setSelectedGroupId] = useState('group-1');\n\n  // 컴포넌트 마운트시 미처리 그룹에 모든 분절값 추가\n  useEffect(() => {\n    if (segmentValues.length > 0) {\n      // 초기 상태에서 모든 값은 미처리 그룹에 할당\n      const initialValueGroups = {};\n      segmentValues.forEach(value => {\n        initialValueGroups[value] = 'unprocessed';\n      });\n      setValueGroups(initialValueGroups);\n\n      // 미처리 그룹에 값 할당\n      setGroups(prevGroups => {\n        const updatedGroups = [...prevGroups];\n        const unprocessedGroup = updatedGroups.find(g => g.id === 'unprocessed');\n        if (unprocessedGroup) {\n          unprocessedGroup.items = [...segmentValues];\n        }\n        return updatedGroups;\n      });\n    }\n  }, [segmentValues]);\n\n  // 그룹 선택 함수\n  const selectGroup = groupId => {\n    if (groupId !== 'unprocessed') {\n      setSelectedGroupId(groupId);\n    }\n  };\n\n  // 값을 그룹에 할당하는 함수\n  const assignToGroup = (value, groupId) => {\n    // 같은 그룹으로 이동이면 무시\n    if (valueGroups[value] === groupId) return;\n\n    // 현재 할당된 그룹에서 제거\n    const currentGroupId = valueGroups[value];\n    if (currentGroupId) {\n      setGroups(prevGroups => {\n        return prevGroups.map(group => {\n          if (group.id === currentGroupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item !== value)\n            };\n          }\n          return group;\n        });\n      });\n    }\n\n    // 새 그룹에 추가\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            items: [...group.items, value]\n          };\n        }\n        return group;\n      });\n    });\n\n    // 값의 그룹 매핑 업데이트\n    setValueGroups({\n      ...valueGroups,\n      [value]: groupId\n    });\n  };\n\n  // 아이템 클릭 핸들러\n  const handleItemClick = (value, currentGroupId) => {\n    // 미처리 항목을 클릭한 경우, 선택된 그룹으로 이동\n    if (currentGroupId === 'unprocessed' && selectedGroupId !== 'unprocessed') {\n      assignToGroup(value, selectedGroupId);\n    }\n    // 다른 그룹의 항목을 클릭한 경우, 미처리로 되돌림\n    else if (currentGroupId !== 'unprocessed') {\n      assignToGroup(value, 'unprocessed');\n    }\n  };\n\n  // 그룹명 변경 함수\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  const startEditingGroupName = (group, e) => {\n    // 이벤트 전파 방지 (그룹 선택과 충돌방지)\n    e.stopPropagation();\n    if (!group.isEditable) return; // 수정 불가 그룹은 변경 불가\n    setEditingGroupId(group.id);\n    setEditingGroupName(group.name);\n  };\n  const saveGroupName = () => {\n    if (!editingGroupName.trim()) return;\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === editingGroupId) {\n          return {\n            ...group,\n            name: editingGroupName.trim()\n          };\n        }\n        return group;\n      });\n    });\n    setEditingGroupId(null);\n    setEditingGroupName('');\n  };\n\n  // 그룹 추가 함수\n  const addGroup = () => {\n    const newGroupId = `group-${Date.now()}`;\n    const newGroup = {\n      id: newGroupId,\n      name: `그룹 ${groups.length}`,\n      items: [],\n      isDefault: false,\n      isEditable: true\n    };\n    setGroups([...groups, newGroup]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouping-sheet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouping-help\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"1. \\uADF8\\uB8F9 \\uD5E4\\uB354\\uB97C \\uD074\\uB9AD\\uD558\\uC5EC \\uADF8\\uB8F9\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694 (\\uD30C\\uB780\\uC0C9\\uC73C\\uB85C \\uD45C\\uC2DC\\uB428) 2. \\uBBF8\\uCC98\\uB9AC \\uD56D\\uBAA9\\uC744 \\uD074\\uB9AD\\uD558\\uBA74 \\uC120\\uD0DD\\uB41C \\uADF8\\uB8F9\\uC73C\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4 3. \\uADF8\\uB8F9\\uC758 \\uD56D\\uBAA9\\uC744 \\uD074\\uB9AD\\uD558\\uBA74 \\uBBF8\\uCC98\\uB9AC\\uB85C \\uB3CC\\uC544\\uAC11\\uB2C8\\uB2E4 4. \\uADF8\\uB8F9\\uBA85\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC774\\uB984\\uC744 \\uBCC0\\uACBD\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouping-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-group-btn\",\n        onClick: addGroup,\n        children: \"\\uC0C8 \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouping-grid\",\n        children: groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `group-header ${selectedGroupId === group.id ? 'selected-group-header' : ''} ${group.id === 'unprocessed' ? 'unprocessed-header' : ''}`,\n            onClick: () => selectGroup(group.id),\n            children: editingGroupId === group.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-name-edit\",\n              onClick: e => e.stopPropagation(),\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editingGroupName,\n                onChange: e => setEditingGroupName(e.target.value),\n                onBlur: saveGroupName,\n                onKeyDown: e => e.key === 'Enter' && saveGroupName(),\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"group-name\",\n                onClick: e => startEditingGroupName(group, e),\n                title: !group.isEditable ? \"이 그룹명은 변경할 수 없습니다\" : \"클릭하여 그룹명 변경\",\n                children: [group.name, \" (\", group.items.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `group-column ${selectedGroupId === group.id ? 'selected-group' : ''} ${group.id === 'unprocessed' ? 'unprocessed-column' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-items\",\n              children: [group.items.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `group-item ${group.id === 'unprocessed' || group.id !== 'unprocessed' ? 'clickable' : ''}`,\n                onClick: () => handleItemClick(value, group.id),\n                children: value\n              }, `${group.id}-${value}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this)), group.items.length === 0 && group.id !== 'unprocessed' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-group-message\",\n                children: \"\\uBBF8\\uCC98\\uB9AC \\uD56D\\uBAA9\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC774 \\uADF8\\uB8F9\\uC5D0 \\uCD94\\uAC00\\uD558\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupingSheet, \"kVXuW643wSgXUiLUf+LKsxWB6cc=\");\n_c = GroupingSheet;\nexport default GroupingSheet;\nvar _c;\n$RefreshReg$(_c, \"GroupingSheet\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GroupingSheet","segmentValues","_s","groups","setGroups","id","name","items","isDefault","isEditable","valueGroups","setValueGroups","selectedGroupId","setSelectedGroupId","length","initialValueGroups","forEach","value","prevGroups","updatedGroups","unprocessedGroup","find","g","selectGroup","groupId","assignToGroup","currentGroupId","map","group","filter","item","handleItemClick","editingGroupId","setEditingGroupId","editingGroupName","setEditingGroupName","startEditingGroupName","e","stopPropagation","saveGroupName","trim","addGroup","newGroupId","Date","now","newGroup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","target","onBlur","onKeyDown","key","autoFocus","title","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupingSheet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GroupingSheet.css';\n\nconst GroupingSheet = ({ segmentValues = [] }) => {\n  // 기본 빈 그룹들 생성 (미처리 + 추가 빈 그룹들)\n  const [groups, setGroups] = useState([\n    { id: 'unprocessed', name: '미처리', items: [], isDefault: true, isEditable: false },\n    { id: 'group-1', name: '그룹 1', items: [], isDefault: false, isEditable: true },\n    { id: 'group-2', name: '그룹 2', items: [], isDefault: false, isEditable: true },\n    { id: 'group-3', name: '그룹 3', items: [], isDefault: false, isEditable: true }\n  ]);\n  \n  // 값들의 그룹 할당 상태 관리\n  const [valueGroups, setValueGroups] = useState({});\n  \n  // 선택된 그룹 관리\n  const [selectedGroupId, setSelectedGroupId] = useState('group-1');\n  \n  // 컴포넌트 마운트시 미처리 그룹에 모든 분절값 추가\n  useEffect(() => {\n    if (segmentValues.length > 0) {\n      // 초기 상태에서 모든 값은 미처리 그룹에 할당\n      const initialValueGroups = {};\n      segmentValues.forEach(value => {\n        initialValueGroups[value] = 'unprocessed';\n      });\n      \n      setValueGroups(initialValueGroups);\n      \n      // 미처리 그룹에 값 할당\n      setGroups(prevGroups => {\n        const updatedGroups = [...prevGroups];\n        const unprocessedGroup = updatedGroups.find(g => g.id === 'unprocessed');\n        if (unprocessedGroup) {\n          unprocessedGroup.items = [...segmentValues];\n        }\n        return updatedGroups;\n      });\n    }\n  }, [segmentValues]);\n  \n  // 그룹 선택 함수\n  const selectGroup = (groupId) => {\n    if (groupId !== 'unprocessed') {\n      setSelectedGroupId(groupId);\n    }\n  };\n  \n  // 값을 그룹에 할당하는 함수\n  const assignToGroup = (value, groupId) => {\n    // 같은 그룹으로 이동이면 무시\n    if (valueGroups[value] === groupId) return;\n    \n    // 현재 할당된 그룹에서 제거\n    const currentGroupId = valueGroups[value];\n    if (currentGroupId) {\n      setGroups(prevGroups => {\n        return prevGroups.map(group => {\n          if (group.id === currentGroupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item !== value)\n            };\n          }\n          return group;\n        });\n      });\n    }\n    \n    // 새 그룹에 추가\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            items: [...group.items, value]\n          };\n        }\n        return group;\n      });\n    });\n    \n    // 값의 그룹 매핑 업데이트\n    setValueGroups({\n      ...valueGroups,\n      [value]: groupId\n    });\n  };\n  \n  // 아이템 클릭 핸들러\n  const handleItemClick = (value, currentGroupId) => {\n    // 미처리 항목을 클릭한 경우, 선택된 그룹으로 이동\n    if (currentGroupId === 'unprocessed' && selectedGroupId !== 'unprocessed') {\n      assignToGroup(value, selectedGroupId);\n    }\n    // 다른 그룹의 항목을 클릭한 경우, 미처리로 되돌림\n    else if (currentGroupId !== 'unprocessed') {\n      assignToGroup(value, 'unprocessed');\n    }\n  };\n  \n  // 그룹명 변경 함수\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  \n  const startEditingGroupName = (group, e) => {\n    // 이벤트 전파 방지 (그룹 선택과 충돌방지)\n    e.stopPropagation();\n    \n    if (!group.isEditable) return; // 수정 불가 그룹은 변경 불가\n    setEditingGroupId(group.id);\n    setEditingGroupName(group.name);\n  };\n  \n  const saveGroupName = () => {\n    if (!editingGroupName.trim()) return;\n    \n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === editingGroupId) {\n          return {\n            ...group,\n            name: editingGroupName.trim()\n          };\n        }\n        return group;\n      });\n    });\n    \n    setEditingGroupId(null);\n    setEditingGroupName('');\n  };\n  \n  // 그룹 추가 함수\n  const addGroup = () => {\n    const newGroupId = `group-${Date.now()}`;\n    const newGroup = {\n      id: newGroupId,\n      name: `그룹 ${groups.length}`,\n      items: [],\n      isDefault: false,\n      isEditable: true\n    };\n    \n    setGroups([...groups, newGroup]);\n  };\n  \n  return (\n    <div className=\"grouping-sheet\">\n      {/* 도움말 */}\n      <div className=\"grouping-help\">\n        <p>\n          1. 그룹 헤더를 클릭하여 그룹을 선택하세요 (파란색으로 표시됨)\n          2. 미처리 항목을 클릭하면 선택된 그룹으로 이동합니다\n          3. 그룹의 항목을 클릭하면 미처리로 돌아갑니다\n          4. 그룹명을 클릭하여 이름을 변경할 수 있습니다\n        </p>\n      </div>\n      \n      {/* 버튼 영역 */}\n      <div className=\"grouping-actions\">\n        <button className=\"add-group-btn\" onClick={addGroup}>새 그룹 추가</button>\n      </div>\n      \n      {/* 그리드 컨테이너로 변경 */}\n      <div className=\"sheet-container\">\n        <div className=\"grouping-grid\">\n          {/* 그룹별 열 생성 */}\n          {groups.map(group => (\n            <div key={group.id} className=\"group-col\">\n              {/* 그룹 헤더 */}\n              <div \n                className={`group-header ${selectedGroupId === group.id ? 'selected-group-header' : ''} ${group.id === 'unprocessed' ? 'unprocessed-header' : ''}`}\n                onClick={() => selectGroup(group.id)}\n              >\n                {editingGroupId === group.id ? (\n                  <div className=\"group-name-edit\" onClick={(e) => e.stopPropagation()}>\n                    <input\n                      type=\"text\"\n                      value={editingGroupName}\n                      onChange={(e) => setEditingGroupName(e.target.value)}\n                      onBlur={saveGroupName}\n                      onKeyDown={(e) => e.key === 'Enter' && saveGroupName()}\n                      autoFocus\n                    />\n                  </div>\n                ) : (\n                  <div className=\"group-title\">\n                    <span \n                      className=\"group-name\"\n                      onClick={(e) => startEditingGroupName(group, e)}\n                      title={!group.isEditable ? \"이 그룹명은 변경할 수 없습니다\" : \"클릭하여 그룹명 변경\"}\n                    >\n                      {group.name} ({group.items.length})\n                    </span>\n                  </div>\n                )}\n              </div>\n              \n              {/* 그룹 콘텐츠 */}\n              <div \n                className={`group-column ${selectedGroupId === group.id ? 'selected-group' : ''} ${group.id === 'unprocessed' ? 'unprocessed-column' : ''}`}\n              >\n                <div className=\"group-items\">\n                  {group.items.map(value => (\n                    <div \n                      key={`${group.id}-${value}`}\n                      className={`group-item ${(group.id === 'unprocessed' || group.id !== 'unprocessed') ? 'clickable' : ''}`}\n                      onClick={() => handleItemClick(value, group.id)}\n                    >\n                      {value}\n                    </div>\n                  ))}\n                  {group.items.length === 0 && group.id !== 'unprocessed' && (\n                    <div className=\"empty-group-message\">\n                      미처리 항목을 클릭하여 이 그룹에 추가하세요\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupingSheet; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}