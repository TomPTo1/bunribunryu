{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/ChannelList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchChannels } from '../services/api';\nimport './ChannelList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelList = ({\n  onChannelSelect\n}) => {\n  _s();\n  const [channels, setChannels] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedChannel, setSelectedChannel] = useState(null);\n  useEffect(() => {\n    const getChannels = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchChannels();\n        console.log('API Response:', response);\n        setChannels(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setChannels([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getChannels();\n  }, []);\n  const handleChannelClick = channel => {\n    setSelectedChannel(channel.채널키);\n    if (onChannelSelect) {\n      onChannelSelect(channel.채널키);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"\\uC5D0\\uB7EC: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCC44\\uB110 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-list\",\n      children: channels && channels.length > 0 ? channels.map(channel => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `channel-item ${selectedChannel === channel.채널키 ? 'selected' : ''}`,\n        onClick: () => handleChannelClick(channel),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-info\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: channel.채널키 || 'Unknown Channel'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, channel._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-channels\",\n        children: \"\\uCC44\\uB110 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelList, \"fPm3g6gXPhib6b1YYGh2s2DfYto=\");\n_c = ChannelList;\nexport default ChannelList;\nvar _c;\n$RefreshReg$(_c, \"ChannelList\");","map":{"version":3,"names":["React","useState","useEffect","fetchChannels","jsxDEV","_jsxDEV","ChannelList","onChannelSelect","_s","channels","setChannels","loading","setLoading","error","setError","selectedChannel","setSelectedChannel","getChannels","response","console","log","list","err","message","handleChannelClick","channel","채널키","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/ChannelList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchChannels } from '../services/api';\nimport './ChannelList.css';\n\nconst ChannelList = ({ onChannelSelect }) => {\n  const [channels, setChannels] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedChannel, setSelectedChannel] = useState(null);\n\n  useEffect(() => {\n    const getChannels = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchChannels();\n        console.log('API Response:', response);\n        setChannels(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setChannels([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getChannels();\n  }, []);\n\n  const handleChannelClick = (channel) => {\n    setSelectedChannel(channel.채널키);\n    if (onChannelSelect) {\n      onChannelSelect(channel.채널키);\n    }\n  };\n\n  if (loading) return <div className=\"loading\">로딩 중...</div>;\n  if (error) return <div className=\"error\">에러: {error}</div>;\n\n  return (\n    <div className=\"channel-list-container\">\n      <h2>채널 목록</h2>\n      <div className=\"channel-list\">\n        {channels && channels.length > 0 ? (\n          channels.map((channel) => (\n            <div \n              key={channel._id} \n              className={`channel-item ${selectedChannel === channel.채널키 ? 'selected' : ''}`}\n              onClick={() => handleChannelClick(channel)}\n            >\n              <div className=\"channel-info\">\n                <h3>{channel.채널키 || 'Unknown Channel'}</h3>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"no-channels\">채널 정보가 없습니다.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChannelList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}