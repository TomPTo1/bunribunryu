{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/BrowseMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileExplorerColumn from './FileExplorerColumn';\nimport WorkspaceColumn from './WorkspaceColumn';\nimport ControlColumn from './ControlColumn';\nimport './BrowseMode.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrowseMode = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState(null);\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n    // In a real app, this would load the file content from the backend\n    // For now, we'll just set dummy content\n    if (file) {\n      setFileContent({\n        path: file.path,\n        name: file.name,\n        type: file.type,\n        content: `Sample content for ${file.name}`\n      });\n    } else {\n      setFileContent(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"browse-mode-container\",\n    children: [/*#__PURE__*/_jsxDEV(FileExplorerColumn, {\n      onFileSelect: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkspaceColumn, {\n      selectedFile: selectedFile,\n      fileContent: fileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlColumn, {\n      selectedFile: selectedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(BrowseMode, \"/2fhsLXTtDUH3OU5MRLHZSpDA2k=\");\n_c = BrowseMode;\nexport default BrowseMode;\nvar _c;\n$RefreshReg$(_c, \"BrowseMode\");","map":{"version":3,"names":["React","useState","FileExplorerColumn","WorkspaceColumn","ControlColumn","jsxDEV","_jsxDEV","BrowseMode","_s","selectedFile","setSelectedFile","fileContent","setFileContent","handleFileSelect","file","path","name","type","content","className","children","onFileSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/BrowseMode.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FileExplorerColumn from './FileExplorerColumn';\nimport WorkspaceColumn from './WorkspaceColumn';\nimport ControlColumn from './ControlColumn';\nimport './BrowseMode.css';\n\nconst BrowseMode = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState(null);\n\n  const handleFileSelect = (file) => {\n    setSelectedFile(file);\n    // In a real app, this would load the file content from the backend\n    // For now, we'll just set dummy content\n    if (file) {\n      setFileContent({\n        path: file.path,\n        name: file.name,\n        type: file.type,\n        content: `Sample content for ${file.name}`\n      });\n    } else {\n      setFileContent(null);\n    }\n  };\n\n  return (\n    <div className=\"browse-mode-container\">\n      <FileExplorerColumn onFileSelect={handleFileSelect} />\n      <WorkspaceColumn selectedFile={selectedFile} fileContent={fileContent} />\n      <ControlColumn selectedFile={selectedFile} />\n    </div>\n  );\n};\n\nexport default BrowseMode; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMY,gBAAgB,GAAIC,IAAI,IAAK;IACjCJ,eAAe,CAACI,IAAI,CAAC;IACrB;IACA;IACA,IAAIA,IAAI,EAAE;MACRF,cAAc,CAAC;QACbG,IAAI,EAAED,IAAI,CAACC,IAAI;QACfC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfC,OAAO,EAAE,sBAAsBJ,IAAI,CAACE,IAAI;MAC1C,CAAC,CAAC;IACJ,CAAC,MAAM;MACLJ,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCd,OAAA,CAACJ,kBAAkB;MAACmB,YAAY,EAAER;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDnB,OAAA,CAACH,eAAe;MAACM,YAAY,EAAEA,YAAa;MAACE,WAAW,EAAEA;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzEnB,OAAA,CAACF,aAAa;MAACK,YAAY,EAAEA;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACjB,EAAA,CA3BID,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}