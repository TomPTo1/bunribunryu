{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchHeaderList, searchHeaderList } from '../services/api';\nimport './Column.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderList = ({\n  channel,\n  onHeaderSelect,\n  selectedHeader,\n  similarityGroups,\n  headerSearchTerm\n}) => {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('all'); // 'all', 'withGroup', or 'withoutGroup'\n  const [headerToGroupMap, setHeaderToGroupMap] = useState({});\n  const [groupedHeaders, setGroupedHeaders] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n\n  // Handle headerSearchTerm updates from right-clicks in other components\n  useEffect(() => {\n    if (headerSearchTerm && headerSearchTerm !== searchTerm) {\n      setSearchTerm(headerSearchTerm);\n      setIsSearchMode(true);\n    }\n  }, [headerSearchTerm]);\n  useEffect(() => {\n    if (!channel) return;\n    const getHeaders = async () => {\n      setLoading(true);\n      try {\n        let response;\n        if (isSearchMode && searchTerm.trim()) {\n          // Use search API with keyword\n          response = await searchHeaderList(channel, searchTerm);\n        } else {\n          // Use regular API without keyword\n          response = await fetchHeaderList(channel);\n        }\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getHeaders();\n  }, [channel, searchTerm, isSearchMode]);\n\n  // Handle search form submission\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      setIsSearchMode(true);\n    } else {\n      setIsSearchMode(false);\n    }\n  };\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    if (!value.trim()) {\n      setIsSearchMode(false);\n    }\n  };\n\n  // 유사군이 변경될 때마다 관련 데이터를 업데이트\n  useEffect(() => {\n    console.log('HeaderList - similarityGroups 변경감지:', similarityGroups);\n\n    // 유사군에 포함된 모든 헤더 추출\n    const newGroupedHeaders = similarityGroups && similarityGroups.length > 0 ? similarityGroups.flatMap(group =>\n    // 대표어를 제외한 헤더만 포함\n    group.items.filter(item => item.header !== group.representative).map(item => item.header)) : [];\n\n    // 각 헤더별로 유사군 매핑 생성\n    const newHeaderToGroupMap = {};\n    if (similarityGroups && similarityGroups.length > 0) {\n      similarityGroups.forEach((group, idx) => {\n        console.log(`HeaderList - 유사군 #${idx + 1} 처리:`, group.representative, group.items.length);\n\n        // 대표어에 유사군 카운트 태그 추가\n        newHeaderToGroupMap[group.representative] = {\n          isRepresentative: true,\n          count: group.items.length\n        };\n\n        // 대표어가 아닌 항목들은 매핑에서 제외 (목록에 표시되지 않음)\n        group.items.forEach(item => {\n          if (item.header !== group.representative) {\n            newHeaderToGroupMap[item.header] = {\n              representative: group.representative,\n              count: group.items.length\n            };\n          }\n        });\n      });\n    }\n    console.log('HeaderList - headerToGroupMap 업데이트:', newHeaderToGroupMap);\n    console.log('HeaderList - groupedHeaders 업데이트:', newGroupedHeaders);\n    setGroupedHeaders(newGroupedHeaders);\n    setHeaderToGroupMap(newHeaderToGroupMap);\n  }, [similarityGroups]);\n\n  // 유사군에 속하지 않거나 대표어인 헤더만 표시\n  const filteredHeaders = headers.filter(item => !groupedHeaders.includes(item.header));\n\n  // 유사군이 있는 헤더 (대표어)와 없는 헤더를 구분\n  const headersWithGroups = filteredHeaders.filter(item => headerToGroupMap[item.header] && headerToGroupMap[item.header].isRepresentative);\n  const headersWithoutGroups = filteredHeaders.filter(item => !headerToGroupMap[item.header] || !headerToGroupMap[item.header].isRepresentative);\n\n  // 활성 탭에 따라 표시할 헤더 목록 선택\n  let displayHeaders = filteredHeaders;\n  if (activeTab === 'withGroup') {\n    displayHeaders = headersWithGroups;\n  } else if (activeTab === 'withoutGroup') {\n    displayHeaders = headersWithoutGroups;\n  }\n  if (!channel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"column-title\",\n      children: \"\\uD5E4\\uB354 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'all' ? 'active' : ''}`,\n        onClick: () => setActiveTab('all'),\n        children: [\"\\uC804\\uCCB4 (\", filteredHeaders.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'withGroup' ? 'active' : ''}`,\n        onClick: () => setActiveTab('withGroup'),\n        children: [\"\\uC720\\uC0AC\\uAD70 \\uC788\\uC74C (\", headersWithGroups.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'withoutGroup' ? 'active' : ''}`,\n        onClick: () => setActiveTab('withoutGroup'),\n        children: [\"\\uC720\\uC0AC\\uAD70 \\uC5C6\\uC74C (\", headersWithoutGroups.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchSubmit,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), isSearchMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-status\",\n      children: [\"\\\"\", searchTerm, \"\\\" \\uAC80\\uC0C9 \\uACB0\\uACFC \", headers.length, \"\\uAC74\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-search-button\",\n        onClick: () => {\n          setSearchTerm('');\n          setIsSearchMode(false);\n        },\n        children: \"\\uAC80\\uC0C9 \\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"\\uC5D0\\uB7EC: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this) : displayHeaders.length > 0 ? displayHeaders.map((item, index) => {\n        // 각 헤더 항목 처리 시 로그 추가\n        const hasGroupInfo = headerToGroupMap[item.header];\n        const isRepresentative = hasGroupInfo && headerToGroupMap[item.header].isRepresentative;\n        const groupCount = isRepresentative ? headerToGroupMap[item.header].count : 0;\n        if (isRepresentative) {\n          console.log(`헤더 렌더링 - 대표어 표시: ${item.header}, 유사군 수: ${groupCount}`);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `column-item ${selectedHeader === item.header ? 'selected' : ''}`,\n          onClick: () => onHeaderSelect(item.header),\n          children: [item.header, isRepresentative && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"similarity-tag\",\n            title: `${groupCount}개의 유사어가 있습니다`,\n            children: [\"\\uC720\\uC0AC\\uAD70 \", groupCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 19\n          }, this), hasGroupInfo && !isRepresentative && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"similarity-tag\",\n            title: `대표어: ${headerToGroupMap[item.header].representative}`,\n            children: \"\\uC720\\uC0AC\\uAD70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: activeTab === 'withGroup' ? '유사군이 있는 헤더가 없습니다.' : activeTab === 'withoutGroup' ? '유사군이 없는 헤더가 없습니다.' : '헤더 정보가 없습니다.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderList, \"Uyd8iHHvJ51VNQTuFOJg4jp3kHc=\");\n_c = HeaderList;\nexport default HeaderList;\nvar _c;\n$RefreshReg$(_c, \"HeaderList\");","map":{"version":3,"names":["React","useState","useEffect","fetchHeaderList","searchHeaderList","jsxDEV","_jsxDEV","HeaderList","channel","onHeaderSelect","selectedHeader","similarityGroups","headerSearchTerm","_s","headers","setHeaders","loading","setLoading","error","setError","activeTab","setActiveTab","headerToGroupMap","setHeaderToGroupMap","groupedHeaders","setGroupedHeaders","searchTerm","setSearchTerm","isSearchMode","setIsSearchMode","getHeaders","response","trim","console","log","list","err","message","handleSearchSubmit","e","preventDefault","handleSearchChange","value","target","newGroupedHeaders","length","flatMap","group","items","filter","item","header","representative","map","newHeaderToGroupMap","forEach","idx","isRepresentative","count","filteredHeaders","includes","headersWithGroups","headersWithoutGroups","displayHeaders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","placeholder","index","hasGroupInfo","groupCount","title","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchHeaderList, searchHeaderList } from '../services/api';\nimport './Column.css';\n\nconst HeaderList = ({ channel, onHeaderSelect, selectedHeader, similarityGroups, headerSearchTerm }) => {\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('all'); // 'all', 'withGroup', or 'withoutGroup'\n  const [headerToGroupMap, setHeaderToGroupMap] = useState({});\n  const [groupedHeaders, setGroupedHeaders] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n\n  // Handle headerSearchTerm updates from right-clicks in other components\n  useEffect(() => {\n    if (headerSearchTerm && headerSearchTerm !== searchTerm) {\n      setSearchTerm(headerSearchTerm);\n      setIsSearchMode(true);\n    }\n  }, [headerSearchTerm]);\n\n  useEffect(() => {\n    if (!channel) return;\n    \n    const getHeaders = async () => {\n      setLoading(true);\n      try {\n        let response;\n        if (isSearchMode && searchTerm.trim()) {\n          // Use search API with keyword\n          response = await searchHeaderList(channel, searchTerm);\n        } else {\n          // Use regular API without keyword\n          response = await fetchHeaderList(channel);\n        }\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getHeaders();\n  }, [channel, searchTerm, isSearchMode]);\n\n  // Handle search form submission\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      setIsSearchMode(true);\n    } else {\n      setIsSearchMode(false);\n    }\n  };\n\n  // Handle search input change\n  const handleSearchChange = (e) => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    if (!value.trim()) {\n      setIsSearchMode(false);\n    }\n  };\n\n  // 유사군이 변경될 때마다 관련 데이터를 업데이트\n  useEffect(() => {\n    console.log('HeaderList - similarityGroups 변경감지:', similarityGroups);\n    \n    // 유사군에 포함된 모든 헤더 추출\n    const newGroupedHeaders = similarityGroups && similarityGroups.length > 0\n      ? similarityGroups.flatMap(group => \n          // 대표어를 제외한 헤더만 포함\n          group.items\n            .filter(item => item.header !== group.representative)\n            .map(item => item.header)\n        )\n      : [];\n    \n    // 각 헤더별로 유사군 매핑 생성\n    const newHeaderToGroupMap = {};\n    if (similarityGroups && similarityGroups.length > 0) {\n      similarityGroups.forEach((group, idx) => {\n        console.log(`HeaderList - 유사군 #${idx + 1} 처리:`, group.representative, group.items.length);\n        \n        // 대표어에 유사군 카운트 태그 추가\n        newHeaderToGroupMap[group.representative] = {\n          isRepresentative: true,\n          count: group.items.length\n        };\n        \n        // 대표어가 아닌 항목들은 매핑에서 제외 (목록에 표시되지 않음)\n        group.items.forEach(item => {\n          if (item.header !== group.representative) {\n            newHeaderToGroupMap[item.header] = {\n              representative: group.representative,\n              count: group.items.length\n            };\n          }\n        });\n      });\n    }\n    \n    console.log('HeaderList - headerToGroupMap 업데이트:', newHeaderToGroupMap);\n    console.log('HeaderList - groupedHeaders 업데이트:', newGroupedHeaders);\n    \n    setGroupedHeaders(newGroupedHeaders);\n    setHeaderToGroupMap(newHeaderToGroupMap);\n  }, [similarityGroups]);\n\n  // 유사군에 속하지 않거나 대표어인 헤더만 표시\n  const filteredHeaders = headers.filter(item => \n    !groupedHeaders.includes(item.header)\n  );\n\n  // 유사군이 있는 헤더 (대표어)와 없는 헤더를 구분\n  const headersWithGroups = filteredHeaders.filter(item => \n    headerToGroupMap[item.header] && headerToGroupMap[item.header].isRepresentative\n  );\n  \n  const headersWithoutGroups = filteredHeaders.filter(item => \n    !headerToGroupMap[item.header] || !headerToGroupMap[item.header].isRepresentative\n  );\n\n  // 활성 탭에 따라 표시할 헤더 목록 선택\n  let displayHeaders = filteredHeaders;\n  if (activeTab === 'withGroup') {\n    displayHeaders = headersWithGroups;\n  } else if (activeTab === 'withoutGroup') {\n    displayHeaders = headersWithoutGroups;\n  }\n\n  if (!channel) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널을 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"column-container\">\n      <h2 className=\"column-title\">\n        헤더 목록\n        {/* : {channel} */}\n      </h2>\n      \n      <div className=\"tabs\">\n        <button \n          className={`tab ${activeTab === 'all' ? 'active' : ''}`}\n          onClick={() => setActiveTab('all')}\n        >\n          전체 ({filteredHeaders.length})\n        </button>\n        <button \n          className={`tab ${activeTab === 'withGroup' ? 'active' : ''}`}\n          onClick={() => setActiveTab('withGroup')}\n        >\n          유사군 있음 ({headersWithGroups.length})\n        </button>\n        <button \n          className={`tab ${activeTab === 'withoutGroup' ? 'active' : ''}`}\n          onClick={() => setActiveTab('withoutGroup')}\n        >\n          유사군 없음 ({headersWithoutGroups.length})\n        </button>\n      </div>\n      \n      <form onSubmit={handleSearchSubmit} className=\"search-form\">\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n          placeholder=\"검색어를 입력하세요\"\n          className=\"search-input\"\n        />\n        <button type=\"submit\" className=\"search-button\">검색</button>\n      </form>\n      \n      {isSearchMode && (\n        <div className=\"search-status\">\n          \"{searchTerm}\" 검색 결과 {headers.length}건\n          <button \n            className=\"clear-search-button\" \n            onClick={() => {\n              setSearchTerm('');\n              setIsSearchMode(false);\n            }}\n          >\n            검색 취소\n          </button>\n        </div>\n      )}\n      \n      <div className=\"column-content\">\n        {loading ? (\n          <div className=\"loading\">로딩 중...</div>\n        ) : error ? (\n          <div className=\"error\">에러: {error}</div>\n        ) : displayHeaders.length > 0 ? (\n          displayHeaders.map((item, index) => {\n            // 각 헤더 항목 처리 시 로그 추가\n            const hasGroupInfo = headerToGroupMap[item.header];\n            const isRepresentative = hasGroupInfo && headerToGroupMap[item.header].isRepresentative;\n            const groupCount = isRepresentative ? headerToGroupMap[item.header].count : 0;\n            \n            if (isRepresentative) {\n              console.log(`헤더 렌더링 - 대표어 표시: ${item.header}, 유사군 수: ${groupCount}`);\n            }\n            \n            return (\n              <div\n                key={index}\n                className={`column-item ${selectedHeader === item.header ? 'selected' : ''}`}\n                onClick={() => onHeaderSelect(item.header)}\n              >\n                {item.header}\n                {isRepresentative && (\n                  <span className=\"similarity-tag\" title={`${groupCount}개의 유사어가 있습니다`}>\n                    유사군 {groupCount}\n                  </span>\n                )}\n                {hasGroupInfo && !isRepresentative && (\n                  <span className=\"similarity-tag\" title={`대표어: ${headerToGroupMap[item.header].representative}`}>\n                    유사군\n                  </span>\n                )}\n              </div>\n            );\n          })\n        ) : (\n          <div className=\"column-empty\">\n            {activeTab === 'withGroup' ? '유사군이 있는 헤더가 없습니다.' : \n             activeTab === 'withoutGroup' ? '유사군이 없는 헤더가 없습니다.' : \n             '헤더 정보가 없습니다.'}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}