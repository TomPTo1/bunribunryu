{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchHeaderList } from '../services/api';\nimport Column from './Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderList = ({\n  channel,\n  onHeaderSelect,\n  selectedHeader,\n  groupedHeaders\n}) => {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getHeaders = async () => {\n      if (!channel) return;\n      setLoading(true);\n      try {\n        const response = await fetchHeaderList(channel);\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getHeaders();\n  }, [channel]);\n  if (!channel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Filter out headers that are part of similarity groups\n  const filteredHeaders = headers.filter(header => {\n    // If groupedHeaders is not defined or empty, show all headers\n    if (!groupedHeaders || Object.keys(groupedHeaders).length === 0) {\n      return true;\n    }\n\n    // Check if this header is in any of the grouped headers\n    const headerText = header.header;\n    const isPartOfGroup = Object.keys(groupedHeaders).some(key => {\n      return headerText === key;\n    });\n\n    // Show headers that are not part of any group\n    return !isPartOfGroup;\n  });\n  return /*#__PURE__*/_jsxDEV(Column, {\n    title: `헤더 목록: ${channel}`,\n    items: filteredHeaders,\n    onItemClick: onHeaderSelect,\n    renderItem: {\n      display: item => item.header,\n      value: item => item.header\n    },\n    selectedItem: selectedHeader,\n    loading: loading,\n    error: error,\n    emptyMessage: \"\\uD5E4\\uB354 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderList, \"D3Yao2wsxtQMHD+hQw6SGkJ9P5g=\");\n_c = HeaderList;\nexport default HeaderList;\nvar _c;\n$RefreshReg$(_c, \"HeaderList\");","map":{"version":3,"names":["React","useState","useEffect","fetchHeaderList","Column","jsxDEV","_jsxDEV","HeaderList","channel","onHeaderSelect","selectedHeader","groupedHeaders","_s","headers","setHeaders","loading","setLoading","error","setError","getHeaders","response","console","log","list","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredHeaders","filter","header","Object","keys","length","headerText","isPartOfGroup","some","key","title","items","onItemClick","renderItem","display","item","value","selectedItem","emptyMessage","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchHeaderList } from '../services/api';\nimport Column from './Column';\n\nconst HeaderList = ({ channel, onHeaderSelect, selectedHeader, groupedHeaders }) => {\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getHeaders = async () => {\n      if (!channel) return;\n      \n      setLoading(true);\n      try {\n        const response = await fetchHeaderList(channel);\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getHeaders();\n  }, [channel]);\n\n  if (!channel) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널을 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  // Filter out headers that are part of similarity groups\n  const filteredHeaders = headers.filter(header => {\n    // If groupedHeaders is not defined or empty, show all headers\n    if (!groupedHeaders || Object.keys(groupedHeaders).length === 0) {\n      return true;\n    }\n    \n    // Check if this header is in any of the grouped headers\n    const headerText = header.header;\n    const isPartOfGroup = Object.keys(groupedHeaders).some(key => {\n      return headerText === key;\n    });\n    \n    // Show headers that are not part of any group\n    return !isPartOfGroup;\n  });\n\n  return (\n    <Column\n      title={`헤더 목록: ${channel}`}\n      items={filteredHeaders}\n      onItemClick={onHeaderSelect}\n      renderItem={{\n        display: item => item.header,\n        value: item => item.header\n      }}\n      selectedItem={selectedHeader}\n      loading={loading}\n      error={error}\n      emptyMessage=\"헤더 정보가 없습니다.\"\n    />\n  );\n};\n\nexport default HeaderList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}