{"ast":null,"code":"import { getFileContent } from './fileSystemService';\n\n/**\n * XLSX 파일을 파싱하여 구조 데이터 추출\n * @param {string} filePath - 파싱할 XLSX 파일 경로\n * @returns {Promise<Object>} 시트, 헤더, 데이터를 포함한 파싱된 데이터 구조\n */\nexport const parseXLSXFile = async filePath => {\n  console.log('파싱 시작:', filePath);\n  try {\n    // API 호출로 파일 내용 가져오기\n    const xlsxData = await getFileContent(filePath);\n    console.log('파싱 데이터 받음:', xlsxData ? '데이터 있음' : '데이터 없음');\n    return xlsxData;\n  } catch (error) {\n    console.error('XLSX 파일 파싱 오류:', error);\n    throw new Error(`XLSX 파싱 실패: ${error.message}`);\n  }\n};","map":{"version":3,"names":["getFileContent","parseXLSXFile","filePath","console","log","xlsxData","error","Error","message"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/services/xlsxParserService.js"],"sourcesContent":["import { getFileContent } from './fileSystemService';\n\n/**\n * XLSX 파일을 파싱하여 구조 데이터 추출\n * @param {string} filePath - 파싱할 XLSX 파일 경로\n * @returns {Promise<Object>} 시트, 헤더, 데이터를 포함한 파싱된 데이터 구조\n */\nexport const parseXLSXFile = async (filePath) => {\n  console.log('파싱 시작:', filePath);\n  \n  try {\n    // API 호출로 파일 내용 가져오기\n    const xlsxData = await getFileContent(filePath);\n    console.log('파싱 데이터 받음:', xlsxData ? '데이터 있음' : '데이터 없음');\n    \n    return xlsxData;\n  } catch (error) {\n    console.error('XLSX 파일 파싱 오류:', error);\n    throw new Error(`XLSX 파싱 실패: ${error.message}`);\n  }\n}; "],"mappings":"AAAA,SAASA,cAAc,QAAQ,qBAAqB;;AAEpD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,QAAQ,CAAC;EAE/B,IAAI;IACF;IACA,MAAMG,QAAQ,GAAG,MAAML,cAAc,CAACE,QAAQ,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAEzD,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,MAAM,IAAIC,KAAK,CAAC,eAAeD,KAAK,CAACE,OAAO,EAAE,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}