{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/SeparationClassifier.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeparationClassifier = ({\n  data,\n  onReset\n}) => {\n  _s();\n  const [processedData, setProcessedData] = useState(null);\n  const [pipeline, setPipeline] = useState([{\n    id: 'bracket-separation',\n    name: '괄호값 분리',\n    active: true\n  }]);\n  const [selectedStep, setSelectedStep] = useState('bracket-separation');\n\n  // Process data through pipeline steps\n  useEffect(() => {\n    if (data) {\n      // Process data through all active pipeline steps\n      let result = {\n        ...data\n      };\n      pipeline.forEach(step => {\n        if (step.active) {\n          if (step.id === 'bracket-separation') {\n            result = processBracketSeparation(result);\n          }\n          // Add more step processors here in the future\n        }\n      });\n      setProcessedData(result);\n    } else {\n      setProcessedData(null);\n    }\n  }, [data, pipeline]);\n  const processBracketSeparation = input => {\n    if (typeof input === 'string') {\n      const bracketRegex = /\\[(.*?)\\]|\\((.*?)\\)|\\{(.*?)\\}/g;\n      const matches = [];\n      let match;\n      while ((match = bracketRegex.exec(input)) !== null) {\n        const value = match[1] || match[2] || match[3];\n        if (value) matches.push(value);\n      }\n      return {\n        original: input,\n        separated: matches,\n        type: 'bracket-separation'\n      };\n    } else if (Array.isArray(input)) {\n      return input.map(item => processBracketSeparation(item));\n    } else if (typeof input === 'object' && input !== null) {\n      const result = {};\n      for (const key in input) {\n        result[key] = processBracketSeparation(input[key]);\n      }\n      return result;\n    }\n    return input;\n  };\n  const toggleStepActive = stepId => {\n    setPipeline(pipeline.map(step => step.id === stepId ? {\n      ...step,\n      active: !step.active\n    } : step));\n  };\n  const selectStep = stepId => {\n    setSelectedStep(stepId);\n  };\n\n  // Flatten data structure to generate simple rows\n  const flattenData = (data, path = '', rows = []) => {\n    if (!data) return rows;\n    if (data.type === 'bracket-separation') {\n      rows.push({\n        path,\n        original: data.original,\n        separated: data.separated\n      });\n    } else if (Array.isArray(data)) {\n      data.forEach((item, index) => {\n        const itemPath = path ? `${path}[${index}]` : `[${index}]`;\n        flattenData(item, itemPath, rows);\n      });\n    } else if (typeof data === 'object' && data !== null) {\n      Object.entries(data).forEach(([key, value]) => {\n        const keyPath = path ? `${path}.${key}` : key;\n        flattenData(value, keyPath, rows);\n      });\n    } else if (path) {\n      // Simple value\n      rows.push({\n        path,\n        original: data,\n        separated: []\n      });\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"separation-classifier\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"classifier-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uCC98\\uB9AC\\uB41C \\uB370\\uC774\\uD130\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-content\",\n          children: processedData ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"data-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uD544\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uC6D0\\uBCF8 \\uAC12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\uCD94\\uCD9C\\uB41C \\uAC12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: flattenData(processedData).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"field-cell\",\n                  children: row.path || '(root)'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"original-cell\",\n                  children: typeof row.original === 'string' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    dangerouslySetInnerHTML: {\n                      __html: row.original.replace(/(\\[.*?\\]|\\(.*?\\)|\\{.*?\\})/g, '<span class=\"highlight-bracket\">$1</span>')\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 27\n                  }, this) : String(row.original)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"separated-cell\",\n                  children: row.separated && row.separated.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"separated-values\",\n                    children: row.separated.map((val, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value-tag\",\n                      children: val\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no-values\",\n                    children: \"\\uCD94\\uCD9C\\uB41C \\uAC12 \\uC5C6\\uC74C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data\",\n            children: \"\\uCC98\\uB9AC\\uD560 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pipeline-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD30C\\uC774\\uD504\\uB77C\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pipeline-list\",\n          children: [pipeline.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `pipeline-step ${step.active ? 'active' : 'inactive'} ${selectedStep === step.id ? 'selected' : ''}`,\n            onClick: () => selectStep(step.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-number\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-title\",\n                children: step.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-control\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"toggle\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: step.active,\n                    onChange: () => toggleStepActive(step.id),\n                    onClick: e => e.stopPropagation()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"toggle-track\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, step.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-step\",\n            children: \"+ \\uCC98\\uB9AC \\uB2E8\\uACC4 \\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pipeline-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-button\",\n            onClick: onReset,\n            children: \"\\uCD08\\uAE30\\uD654\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .separation-classifier {\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n        \n        .classifier-layout {\n          display: flex;\n          gap: 20px;\n          height: 100%;\n        }\n        \n        /* Data View - left side (wider) */\n        .data-view {\n          flex: 3;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n          padding: 16px;\n          overflow: auto;\n        }\n        \n        .data-content {\n          height: calc(100% - 40px);\n          overflow: auto;\n        }\n        \n        /* Pipeline Panel - right side (narrower) */\n        .pipeline-panel {\n          flex: 1;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n          padding: 16px;\n          display: flex;\n          flex-direction: column;\n        }\n        \n        h3 {\n          margin-top: 0;\n          margin-bottom: 16px;\n          color: #202124;\n          font-size: 16px;\n        }\n        \n        .pipeline-list {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n          flex-grow: 1;\n        }\n        \n        .pipeline-step {\n          display: flex;\n          align-items: center;\n          padding: 10px;\n          border-radius: 6px;\n          background: #f8f9fa;\n          border: 1px solid #dadce0;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n        \n        .pipeline-step:hover {\n          background: #f1f3f4;\n        }\n        \n        .pipeline-step.active {\n          border-color: #4285F4;\n        }\n        \n        .pipeline-step.selected {\n          background: #e8f0fe;\n        }\n        \n        .step-number {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 24px;\n          height: 24px;\n          border-radius: 50%;\n          background: #4285F4;\n          color: white;\n          font-weight: bold;\n          margin-right: 10px;\n        }\n        \n        .pipeline-step.inactive .step-number {\n          background: #dadce0;\n        }\n        \n        .step-details {\n          flex: 1;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        \n        .step-title {\n          font-weight: 500;\n        }\n        \n        .add-step {\n          margin-top: 8px;\n          padding: 10px;\n          border: 1px dashed #dadce0;\n          background: none;\n          border-radius: 6px;\n          color: #4285F4;\n          cursor: pointer;\n          text-align: center;\n          font-weight: 500;\n        }\n        \n        .add-step:hover {\n          background: #f8f9fa;\n        }\n        \n        .pipeline-actions {\n          margin-top: 16px;\n        }\n        \n        .reset-button {\n          width: 100%;\n          padding: 8px 16px;\n          background: #4285F4;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-weight: 500;\n        }\n        \n        .reset-button:hover {\n          background: #1a73e8;\n        }\n        \n        /* Toggle Switch */\n        .toggle {\n          position: relative;\n          display: inline-block;\n          width: 32px;\n          height: 16px;\n        }\n        \n        .toggle input {\n          opacity: 0;\n          width: 0;\n          height: 0;\n        }\n        \n        .toggle-track {\n          position: absolute;\n          cursor: pointer;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: #ccc;\n          transition: .3s;\n          border-radius: 16px;\n        }\n        \n        .toggle-track:before {\n          position: absolute;\n          content: \"\";\n          height: 12px;\n          width: 12px;\n          left: 2px;\n          bottom: 2px;\n          background-color: white;\n          transition: .3s;\n          border-radius: 50%;\n        }\n        \n        input:checked + .toggle-track {\n          background-color: #4285F4;\n        }\n        \n        input:checked + .toggle-track:before {\n          transform: translateX(16px);\n        }\n        \n        /* Data Table */\n        .data-table {\n          width: 100%;\n          border-collapse: collapse;\n          font-size: 14px;\n        }\n        \n        .data-table th,\n        .data-table td {\n          padding: 10px;\n          text-align: left;\n          border-bottom: 1px solid #eee;\n        }\n        \n        .data-table th {\n          background: #f8f9fa;\n          font-weight: 600;\n          color: #5f6368;\n        }\n        \n        .field-cell {\n          font-family: monospace;\n          color: #188038;\n          max-width: 200px;\n          overflow-wrap: break-word;\n        }\n        \n        .original-cell {\n          font-family: monospace;\n          color: #202124;\n          max-width: 300px;\n          overflow-wrap: break-word;\n        }\n        \n        .highlight-bracket {\n          background-color: #fce8e6;\n          color: #d93025;\n          border-radius: 2px;\n          padding: 0 2px;\n        }\n        \n        .separated-cell {\n          max-width: 300px;\n        }\n        \n        .separated-values {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 6px;\n        }\n        \n        .value-tag {\n          background: #e8f0fe;\n          color: #1967d2;\n          padding: 3px 8px;\n          border-radius: 16px;\n          font-size: 13px;\n          white-space: nowrap;\n        }\n        \n        .no-values {\n          color: #5f6368;\n          font-style: italic;\n        }\n        \n        .no-data {\n          color: #5f6368;\n          font-style: italic;\n          padding: 20px;\n          text-align: center;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(SeparationClassifier, \"uMNK5ltFdG9nIMZOdODJb0wbdSA=\");\n_c = SeparationClassifier;\nexport default SeparationClassifier;\nvar _c;\n$RefreshReg$(_c, \"SeparationClassifier\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SeparationClassifier","data","onReset","_s","processedData","setProcessedData","pipeline","setPipeline","id","name","active","selectedStep","setSelectedStep","result","forEach","step","processBracketSeparation","input","bracketRegex","matches","match","exec","value","push","original","separated","type","Array","isArray","map","item","key","toggleStepActive","stepId","selectStep","flattenData","path","rows","index","itemPath","Object","entries","keyPath","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","dangerouslySetInnerHTML","__html","replace","String","length","val","idx","onClick","checked","onChange","e","stopPropagation","jsx","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/SeparationClassifier.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SeparationClassifier = ({ data, onReset }) => {\n  const [processedData, setProcessedData] = useState(null);\n  const [pipeline, setPipeline] = useState([\n    { id: 'bracket-separation', name: '괄호값 분리', active: true }\n  ]);\n  const [selectedStep, setSelectedStep] = useState('bracket-separation');\n  \n  // Process data through pipeline steps\n  useEffect(() => {\n    if (data) {\n      // Process data through all active pipeline steps\n      let result = { ...data };\n      \n      pipeline.forEach(step => {\n        if (step.active) {\n          if (step.id === 'bracket-separation') {\n            result = processBracketSeparation(result);\n          }\n          // Add more step processors here in the future\n        }\n      });\n      \n      setProcessedData(result);\n    } else {\n      setProcessedData(null);\n    }\n  }, [data, pipeline]);\n\n  const processBracketSeparation = (input) => {\n    if (typeof input === 'string') {\n      const bracketRegex = /\\[(.*?)\\]|\\((.*?)\\)|\\{(.*?)\\}/g;\n      const matches = [];\n      let match;\n      \n      while ((match = bracketRegex.exec(input)) !== null) {\n        const value = match[1] || match[2] || match[3];\n        if (value) matches.push(value);\n      }\n      \n      return {\n        original: input,\n        separated: matches,\n        type: 'bracket-separation'\n      };\n    } else if (Array.isArray(input)) {\n      return input.map(item => processBracketSeparation(item));\n    } else if (typeof input === 'object' && input !== null) {\n      const result = {};\n      for (const key in input) {\n        result[key] = processBracketSeparation(input[key]);\n      }\n      return result;\n    }\n    \n    return input;\n  };\n\n  const toggleStepActive = (stepId) => {\n    setPipeline(pipeline.map(step => \n      step.id === stepId ? { ...step, active: !step.active } : step\n    ));\n  };\n\n  const selectStep = (stepId) => {\n    setSelectedStep(stepId);\n  };\n\n  // Flatten data structure to generate simple rows\n  const flattenData = (data, path = '', rows = []) => {\n    if (!data) return rows;\n    \n    if (data.type === 'bracket-separation') {\n      rows.push({\n        path,\n        original: data.original,\n        separated: data.separated\n      });\n    } else if (Array.isArray(data)) {\n      data.forEach((item, index) => {\n        const itemPath = path ? `${path}[${index}]` : `[${index}]`;\n        flattenData(item, itemPath, rows);\n      });\n    } else if (typeof data === 'object' && data !== null) {\n      Object.entries(data).forEach(([key, value]) => {\n        const keyPath = path ? `${path}.${key}` : key;\n        flattenData(value, keyPath, rows);\n      });\n    } else if (path) {\n      // Simple value\n      rows.push({\n        path,\n        original: data,\n        separated: []\n      });\n    }\n    \n    return rows;\n  };\n\n  return (\n    <div className=\"separation-classifier\">\n      <div className=\"classifier-layout\">\n        {/* Left side - Data View (wider) */}\n        <div className=\"data-view\">\n          <h3>처리된 데이터</h3>\n          <div className=\"data-content\">\n            {processedData ? (\n              <table className=\"data-table\">\n                <thead>\n                  <tr>\n                    <th>필드</th>\n                    <th>원본 값</th>\n                    <th>추출된 값</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {flattenData(processedData).map((row, index) => (\n                    <tr key={index}>\n                      <td className=\"field-cell\">{row.path || '(root)'}</td>\n                      <td className=\"original-cell\">\n                        {typeof row.original === 'string' ? (\n                          <div dangerouslySetInnerHTML={{ \n                            __html: row.original.replace(\n                              /(\\[.*?\\]|\\(.*?\\)|\\{.*?\\})/g, \n                              '<span class=\"highlight-bracket\">$1</span>'\n                            )\n                          }} />\n                        ) : (\n                          String(row.original)\n                        )}\n                      </td>\n                      <td className=\"separated-cell\">\n                        {row.separated && row.separated.length > 0 ? (\n                          <div className=\"separated-values\">\n                            {row.separated.map((val, idx) => (\n                              <span key={idx} className=\"value-tag\">{val}</span>\n                            ))}\n                          </div>\n                        ) : (\n                          <span className=\"no-values\">추출된 값 없음</span>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <div className=\"no-data\">처리할 데이터가 없습니다</div>\n            )}\n          </div>\n        </div>\n        \n        {/* Right side - Pipeline (narrower) */}\n        <div className=\"pipeline-panel\">\n          <h3>파이프라인</h3>\n          <div className=\"pipeline-list\">\n            {pipeline.map((step, index) => (\n              <div \n                key={step.id}\n                className={`pipeline-step ${step.active ? 'active' : 'inactive'} ${selectedStep === step.id ? 'selected' : ''}`}\n                onClick={() => selectStep(step.id)}\n              >\n                <div className=\"step-number\">{index + 1}</div>\n                <div className=\"step-details\">\n                  <div className=\"step-title\">{step.name}</div>\n                  <div className=\"step-control\">\n                    <label className=\"toggle\">\n                      <input \n                        type=\"checkbox\" \n                        checked={step.active}\n                        onChange={() => toggleStepActive(step.id)}\n                        onClick={(e) => e.stopPropagation()}\n                      />\n                      <span className=\"toggle-track\"></span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            ))}\n            \n            <button className=\"add-step\">\n              + 처리 단계 추가\n            </button>\n          </div>\n          \n          <div className=\"pipeline-actions\">\n            <button className=\"reset-button\" onClick={onReset}>\n              초기화\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <style jsx>{`\n        .separation-classifier {\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n        \n        .classifier-layout {\n          display: flex;\n          gap: 20px;\n          height: 100%;\n        }\n        \n        /* Data View - left side (wider) */\n        .data-view {\n          flex: 3;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n          padding: 16px;\n          overflow: auto;\n        }\n        \n        .data-content {\n          height: calc(100% - 40px);\n          overflow: auto;\n        }\n        \n        /* Pipeline Panel - right side (narrower) */\n        .pipeline-panel {\n          flex: 1;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n          padding: 16px;\n          display: flex;\n          flex-direction: column;\n        }\n        \n        h3 {\n          margin-top: 0;\n          margin-bottom: 16px;\n          color: #202124;\n          font-size: 16px;\n        }\n        \n        .pipeline-list {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n          flex-grow: 1;\n        }\n        \n        .pipeline-step {\n          display: flex;\n          align-items: center;\n          padding: 10px;\n          border-radius: 6px;\n          background: #f8f9fa;\n          border: 1px solid #dadce0;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n        \n        .pipeline-step:hover {\n          background: #f1f3f4;\n        }\n        \n        .pipeline-step.active {\n          border-color: #4285F4;\n        }\n        \n        .pipeline-step.selected {\n          background: #e8f0fe;\n        }\n        \n        .step-number {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 24px;\n          height: 24px;\n          border-radius: 50%;\n          background: #4285F4;\n          color: white;\n          font-weight: bold;\n          margin-right: 10px;\n        }\n        \n        .pipeline-step.inactive .step-number {\n          background: #dadce0;\n        }\n        \n        .step-details {\n          flex: 1;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        \n        .step-title {\n          font-weight: 500;\n        }\n        \n        .add-step {\n          margin-top: 8px;\n          padding: 10px;\n          border: 1px dashed #dadce0;\n          background: none;\n          border-radius: 6px;\n          color: #4285F4;\n          cursor: pointer;\n          text-align: center;\n          font-weight: 500;\n        }\n        \n        .add-step:hover {\n          background: #f8f9fa;\n        }\n        \n        .pipeline-actions {\n          margin-top: 16px;\n        }\n        \n        .reset-button {\n          width: 100%;\n          padding: 8px 16px;\n          background: #4285F4;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-weight: 500;\n        }\n        \n        .reset-button:hover {\n          background: #1a73e8;\n        }\n        \n        /* Toggle Switch */\n        .toggle {\n          position: relative;\n          display: inline-block;\n          width: 32px;\n          height: 16px;\n        }\n        \n        .toggle input {\n          opacity: 0;\n          width: 0;\n          height: 0;\n        }\n        \n        .toggle-track {\n          position: absolute;\n          cursor: pointer;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: #ccc;\n          transition: .3s;\n          border-radius: 16px;\n        }\n        \n        .toggle-track:before {\n          position: absolute;\n          content: \"\";\n          height: 12px;\n          width: 12px;\n          left: 2px;\n          bottom: 2px;\n          background-color: white;\n          transition: .3s;\n          border-radius: 50%;\n        }\n        \n        input:checked + .toggle-track {\n          background-color: #4285F4;\n        }\n        \n        input:checked + .toggle-track:before {\n          transform: translateX(16px);\n        }\n        \n        /* Data Table */\n        .data-table {\n          width: 100%;\n          border-collapse: collapse;\n          font-size: 14px;\n        }\n        \n        .data-table th,\n        .data-table td {\n          padding: 10px;\n          text-align: left;\n          border-bottom: 1px solid #eee;\n        }\n        \n        .data-table th {\n          background: #f8f9fa;\n          font-weight: 600;\n          color: #5f6368;\n        }\n        \n        .field-cell {\n          font-family: monospace;\n          color: #188038;\n          max-width: 200px;\n          overflow-wrap: break-word;\n        }\n        \n        .original-cell {\n          font-family: monospace;\n          color: #202124;\n          max-width: 300px;\n          overflow-wrap: break-word;\n        }\n        \n        .highlight-bracket {\n          background-color: #fce8e6;\n          color: #d93025;\n          border-radius: 2px;\n          padding: 0 2px;\n        }\n        \n        .separated-cell {\n          max-width: 300px;\n        }\n        \n        .separated-values {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 6px;\n        }\n        \n        .value-tag {\n          background: #e8f0fe;\n          color: #1967d2;\n          padding: 3px 8px;\n          border-radius: 16px;\n          font-size: 13px;\n          white-space: nowrap;\n        }\n        \n        .no-values {\n          color: #5f6368;\n          font-style: italic;\n        }\n        \n        .no-data {\n          color: #5f6368;\n          font-style: italic;\n          padding: 20px;\n          text-align: center;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default SeparationClassifier; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}