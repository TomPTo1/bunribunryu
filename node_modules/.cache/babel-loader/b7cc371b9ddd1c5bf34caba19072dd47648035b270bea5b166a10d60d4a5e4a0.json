{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/HeaderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { fetchHeaderList, searchHeaderList, fetchHeaderSimilarityList } from '../services/api';\nimport './Column.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeaderList = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  channel,\n  onHeaderSelect,\n  selectedHeader,\n  similarityGroups,\n  headerSearchTerm,\n  onSimilarityGroupUpdate,\n  onRemoveGroup,\n  similarityViewTrigger,\n  onSimilarityViewProcessed\n}, ref) => {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('all'); // 'all', 'withGroup', or 'withoutGroup'\n  const [headerToGroupMap, setHeaderToGroupMap] = useState({});\n  const [groupedHeaders, setGroupedHeaders] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n\n  // Added for similar header selection functionality\n  const [viewMode, setViewMode] = useState('list'); // 'list' or 'similarSelection'\n  const [similarHeaders, setSimilarHeaders] = useState([]);\n  const [selectedSimilarityGroup, setSelectedSimilarityGroup] = useState([]);\n  const [representativeHeader, setRepresentativeHeader] = useState(null);\n  const [isSelectedGroupCollapsed, setIsSelectedGroupCollapsed] = useState(false);\n  const [similarHeaderLoading, setSimilarHeaderLoading] = useState(false);\n  const [similarHeaderError, setSimilarHeaderError] = useState(null);\n  const [currentSimilarityHeader, setCurrentSimilarityHeader] = useState(null);\n\n  // 마지막 클릭된 헤더와 타임스탬프를 저장\n  const lastClickRef = useRef({\n    header: null,\n    timestamp: 0\n  });\n\n  // Expose functions to parent component\n  useImperativeHandle(ref, () => ({\n    viewSimilarHeaders: header => {\n      handleViewSimilarHeaders(header);\n    }\n  }));\n\n  // Handle headerSearchTerm updates from right-clicks in other components\n  useEffect(() => {\n    // Only sync headerSearchTerm -> searchTerm when in list view and when it makes sense\n    if (viewMode === 'list' && headerSearchTerm && headerSearchTerm !== searchTerm && !searchTerm.trim()) {\n      // Only update if our current search is empty\n      setSearchTerm(headerSearchTerm);\n      setIsSearchMode(true);\n    }\n  }, [headerSearchTerm, searchTerm, viewMode]);\n\n  // Handle similarity view trigger from HeaderCombinationList\n  useEffect(() => {\n    if (similarityViewTrigger && channel) {\n      handleViewSimilarHeaders(similarityViewTrigger);\n      // Call the callback to reset the trigger\n      if (onSimilarityViewProcessed) {\n        onSimilarityViewProcessed();\n      }\n    }\n  }, [similarityViewTrigger, channel]);\n  useEffect(() => {\n    if (!channel) return;\n    const getHeaders = async () => {\n      setLoading(true);\n      try {\n        let response;\n        if (isSearchMode && searchTerm.trim()) {\n          // Use search API with keyword\n          response = await searchHeaderList(channel, searchTerm);\n        } else {\n          // Use regular API without keyword\n          response = await fetchHeaderList(channel);\n        }\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getHeaders();\n  }, [channel, searchTerm, isSearchMode]);\n\n  // Handle search form submission\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      setIsSearchMode(true);\n    } else {\n      setIsSearchMode(false);\n    }\n  };\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    if (!value.trim()) {\n      setIsSearchMode(false);\n    }\n  };\n\n  // 유사군이 변경될 때마다 관련 데이터를 업데이트\n  useEffect(() => {\n    console.log('HeaderList - similarityGroups 변경감지:', similarityGroups);\n\n    // 유사군에 포함된 모든 헤더 추출\n    const newGroupedHeaders = similarityGroups && similarityGroups.length > 0 ? similarityGroups.flatMap(group =>\n    // 대표어를 제외한 헤더만 포함\n    group.items.filter(item => item.header !== group.representative).map(item => item.header)) : [];\n\n    // 각 헤더별로 유사군 매핑 생성\n    const newHeaderToGroupMap = {};\n    if (similarityGroups && similarityGroups.length > 0) {\n      similarityGroups.forEach((group, idx) => {\n        console.log(`HeaderList - 유사군 #${idx + 1} 처리:`, group.representative, group.items.length);\n\n        // 대표어에 유사군 카운트 태그 추가\n        newHeaderToGroupMap[group.representative] = {\n          isRepresentative: true,\n          count: group.items.length\n        };\n\n        // 대표어가 아닌 항목들은 매핑에서 제외 (목록에 표시되지 않음)\n        group.items.forEach(item => {\n          if (item.header !== group.representative) {\n            newHeaderToGroupMap[item.header] = {\n              representative: group.representative,\n              count: group.items.length\n            };\n          }\n        });\n      });\n    }\n    console.log('HeaderList - headerToGroupMap 업데이트:', newHeaderToGroupMap);\n    console.log('HeaderList - groupedHeaders 업데이트:', newGroupedHeaders);\n    setGroupedHeaders(newGroupedHeaders);\n    setHeaderToGroupMap(newHeaderToGroupMap);\n  }, [similarityGroups]);\n\n  // Similar header selection functions\n  const handleViewSimilarHeaders = header => {\n    if (!channel || !header) return;\n\n    // Reset selection state\n    setSelectedSimilarityGroup([]);\n    setRepresentativeHeader(null);\n\n    // Store the current header being viewed\n    setCurrentSimilarityHeader(header);\n\n    // Change view mode and fetch similar headers\n    setViewMode('similarSelection');\n    fetchSimilarHeaders(header);\n  };\n  const fetchSimilarHeaders = async header => {\n    if (!channel || !header) return;\n    setSimilarHeaderLoading(true);\n    try {\n      const response = await fetchHeaderSimilarityList(channel, header);\n      console.log('Similar headers response:', response);\n      setSimilarHeaders(response.list || []);\n      setSimilarHeaderError(null);\n    } catch (err) {\n      setSimilarHeaderError(err.message);\n      setSimilarHeaders([]);\n    } finally {\n      setSimilarHeaderLoading(false);\n    }\n  };\n  const handleBackToHeaderList = () => {\n    // First set view mode to list\n    setViewMode('list');\n\n    // Reset similarity-related states\n    setSelectedSimilarityGroup([]);\n    setRepresentativeHeader(null);\n    setCurrentSimilarityHeader(null);\n\n    // Force reset of search input state (with a small delay to avoid React conflict)\n    setTimeout(() => {\n      setSearchTerm('');\n      setIsSearchMode(false);\n    }, 50);\n\n    // Notify parent to clear headerSearchTerm if available\n    if (onSimilarityViewProcessed) {\n      onSimilarityViewProcessed(true); // Pass true to indicate search term should be cleared\n    }\n  };\n  const handleSimilarHeaderSelect = (header, setAsRepresentative = false) => {\n    // 중복 클릭 방지 및 디바운싱\n    const now = Date.now();\n    if (lastClickRef.current.header === header && now - lastClickRef.current.timestamp < 500) {\n      // 0.5초 이내에 동일한 헤더를 다시 클릭한 경우 무시\n      return;\n    }\n\n    // 클릭 정보 업데이트\n    lastClickRef.current = {\n      header,\n      timestamp: now\n    };\n\n    // 버그 수정: 중복 호출 방지를 위한 체크 추가\n    const headerObj = similarHeaders.find(h => h.header === header);\n    if (!headerObj) return; // 헤더가 존재하지 않으면 무시\n\n    // 이미 선택된 헤더인지 확인\n    const isAlreadySelected = selectedSimilarityGroup.some(h => h.header === header);\n    const isRepresentative = representativeHeader === header;\n    if (isAlreadySelected) {\n      if (setAsRepresentative && !isRepresentative) {\n        // 이미 선택된 헤더를 대표어로 설정 (우클릭)\n        setRepresentativeHeader(header);\n      } else {\n        // 이미 선택된 헤더의 선택 해제 (다시 클릭)\n        const newGroup = selectedSimilarityGroup.filter(h => h.header !== header);\n        setSelectedSimilarityGroup(newGroup);\n\n        // 대표어가 제거된 경우 새로운 대표어 선택\n        if (isRepresentative && newGroup.length > 0) {\n          setRepresentativeHeader(newGroup[0].header);\n        } else if (isRepresentative) {\n          setRepresentativeHeader(null);\n        }\n      }\n    } else {\n      // 선택되지 않은 경우, 선택에 추가\n      const newGroup = [...selectedSimilarityGroup, headerObj];\n      setSelectedSimilarityGroup(newGroup);\n\n      // 우클릭인 경우에만 대표어로 설정 (명시적으로 로직 분리)\n      if (setAsRepresentative) {\n        // 우클릭 - 대표어로 설정\n        setRepresentativeHeader(header);\n      }\n      // 좌클릭은 단순히 선택만 되고 대표어로 설정되지 않음\n    }\n  };\n  const handleRemoveFromGroup = header => {\n    setSelectedSimilarityGroup(prev => prev.filter(h => h.header !== header));\n    // If representative header is removed, reset it\n    if (representativeHeader === header) {\n      setRepresentativeHeader(selectedSimilarityGroup.length > 1 ? selectedSimilarityGroup[0].header : null);\n    }\n  };\n  const handleSetRepresentative = header => {\n    setRepresentativeHeader(header);\n  };\n  const handleSaveGroup = () => {\n    if (selectedSimilarityGroup.length > 0 && representativeHeader) {\n      // 유사군 데이터를 일관된 형식으로 변환\n      const groupData = selectedSimilarityGroup.map(item => ({\n        header: item.header,\n        // 기타 필요한 속성 유지\n        ...item\n      }));\n\n      // 선택한 그룹에 현재 선택한 헤더가 없다면 추가\n      const hasCurrentHeader = groupData.some(item => item.header === currentSimilarityHeader);\n      if (!hasCurrentHeader && currentSimilarityHeader) {\n        groupData.push({\n          header: currentSimilarityHeader\n        });\n      }\n      console.log('저장할 유사군 데이터:', groupData, representativeHeader);\n      onSimilarityGroupUpdate && onSimilarityGroupUpdate(groupData, representativeHeader);\n\n      // 저장 후에도 화면을 유지\n      // setViewMode('list'); 삭제\n\n      // 저장 후에도 선택된 그룹과 대표어 유지\n      // setSelectedSimilarityGroup([]);\n      // setRepresentativeHeader(null);\n    }\n  };\n\n  // 유사군에 속하지 않거나 대표어인 헤더만 표시\n  const filteredHeaders = headers.filter(item => !groupedHeaders.includes(item.header));\n\n  // 유사군이 있는 헤더 (대표어)와 없는 헤더를 구분\n  const headersWithGroups = filteredHeaders.filter(item => headerToGroupMap[item.header] && headerToGroupMap[item.header].isRepresentative);\n  const headersWithoutGroups = filteredHeaders.filter(item => !headerToGroupMap[item.header] || !headerToGroupMap[item.header].isRepresentative);\n\n  // 활성 탭에 따라 표시할 헤더 목록 선택\n  let displayHeaders = filteredHeaders;\n  if (activeTab === 'withGroup') {\n    displayHeaders = headersWithGroups;\n  } else if (activeTab === 'withoutGroup') {\n    displayHeaders = headersWithoutGroups;\n  }\n  if (!channel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Create a list of all headers that are already part of saved groups\n  const savedGroupHeaders = similarityGroups ? similarityGroups.flatMap(group => group.items.map(item => item.header)) : [];\n\n  // Filter out headers that are already in the selected group or in any saved group\n  const filteredSimilarHeaders = similarHeaders.filter(h => !selectedSimilarityGroup.some(selected => selected.header === h.header) && !savedGroupHeaders.includes(h.header));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `column-container ${viewMode === 'similarSelection' ? 'similarity-view' : ''}`,\n    children: viewMode === 'list' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"column-title\",\n        children: \"\\uD5E4\\uB354 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearchSubmit,\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          className: \"search-input\"\n          // Force the input to be editable\n          ,\n          readOnly: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-button\",\n          children: \"\\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), isSearchMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-status\",\n        children: [\"\\\"\", searchTerm, \"\\\" \\uAC80\\uC0C9 \\uACB0\\uACFC \", headers.length, \"\\uAC74\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-search-button\",\n          onClick: () => {\n            setSearchTerm('');\n            setIsSearchMode(false);\n          },\n          children: \"\\uAC80\\uC0C9 \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-content\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"\\uB85C\\uB529 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [\"\\uC5D0\\uB7EC: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this) : displayHeaders.length > 0 ? displayHeaders.map((item, index) => {\n          // 각 헤더 항목 처리 시 로그 추가\n          const hasGroupInfo = headerToGroupMap[item.header];\n          const isRepresentative = hasGroupInfo && headerToGroupMap[item.header].isRepresentative;\n          const groupCount = isRepresentative ? headerToGroupMap[item.header].count : 0;\n          if (isRepresentative) {\n            console.log(`헤더 렌더링 - 대표어 표시: ${item.header}, 유사군 수: ${groupCount}`);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `column-item ${selectedHeader === item.header ? 'selected' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column-item-content\",\n              onClick: () => onHeaderSelect(item.header),\n              children: [item.header, isRepresentative && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"similarity-tag\",\n                title: `${groupCount}개의 유사어가 있습니다`,\n                children: [\"\\uC720\\uC0AC\\uAD70 \", groupCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 25\n              }, this), hasGroupInfo && !isRepresentative && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"similarity-tag\",\n                title: `대표어: ${headerToGroupMap[item.header].representative}`,\n                children: \"\\uC720\\uC0AC\\uAD70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 21\n            }, this), !hasGroupInfo && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"view-similar-btn\",\n              onClick: () => handleViewSimilarHeaders(item.header),\n              title: \"\\uC720\\uC0AC\\uD5E4\\uB354 \\uBCF4\\uAE30\",\n              children: \"\\uC720\\uC0AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-empty\",\n          children: activeTab === 'withGroup' ? '유사군이 있는 헤더가 없습니다.' : activeTab === 'withoutGroup' ? '유사군이 없는 헤더가 없습니다.' : '헤더 정보가 없습니다.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'all' ? 'active' : ''}`,\n          onClick: () => setActiveTab('all'),\n          children: [\"\\uC804\\uCCB4 (\", filteredHeaders.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'withGroup' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withGroup'),\n          children: [\"\\uC720\\uC0AC\\uAD70 \\uC788\\uC74C (\", headersWithGroups.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'withoutGroup' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withoutGroup'),\n          children: [\"\\uC720\\uC0AC\\uAD70 \\uC5C6\\uC74C (\", headersWithoutGroups.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // Similar header selection view\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"column-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: handleBackToHeaderList,\n          children: \"\\u2190 \\uD5E4\\uB354 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title-path\",\n          title: currentSimilarityHeader,\n          children: currentSimilarityHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"similarity-vertical-layout\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"similarity-header-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"group-subtitle\",\n              children: [\"\\uC720\\uC0AC \\uD5E4\\uB354 \\uC120\\uD0DD\", selectedSimilarityGroup.length >= 2 && representativeHeader && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-group-btn action-btn header-action-btn\",\n                onClick: handleSaveGroup,\n                title: \"\\uD604\\uC7AC \\uC120\\uD0DD\\uB41C \\uC720\\uC0AC \\uD5E4\\uB354\\uB97C \\uADF8\\uB8F9\\uC73C\\uB85C \\uC800\\uC7A5\\uD569\\uB2C8\\uB2E4\",\n                children: [\"\\uC720\\uC0AC\\uAD70 \\uC800\\uC7A5 (\", selectedSimilarityGroup.length, \"\\uAC1C)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"click-guide\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guide-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"guide-icon\",\n                  children: \"\\uD83D\\uDDB1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 48\n                }, this), \" \\uC88C\\uD074\\uB9AD: \\uC720\\uC0AC\\uC5B4 \\uC120\\uD0DD\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guide-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"guide-icon\",\n                  children: \"\\uD83D\\uDDB1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 48\n                }, this), \" \\uC6B0\\uD074\\uB9AD: \\uB300\\uD45C\\uC5B4 \\uC120\\uD0DD\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guide-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"guide-icon\",\n                  children: \"\\uD83D\\uDDB1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 48\n                }, this), \" \\uC7AC\\uD074\\uB9AD: \\uC120\\uD0DD \\uD574\\uC81C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"similarity-items\",\n              children: similarHeaderLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                children: \"\\uB85C\\uB529 \\uC911...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this) : similarHeaderError ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: [\"\\uC5D0\\uB7EC: \", similarHeaderError]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 21\n              }, this) : similarHeaders && similarHeaders.length > 0 ? similarHeaders.map((item, index) => {\n                // 이미 선택된 항목인지 확인\n                const isSelected = selectedSimilarityGroup.some(h => h.header === item.header);\n                // 대표 헤더인지 확인\n                const isRepresentative = representativeHeader === item.header;\n\n                // 이미 저장된 그룹에 있는지 확인\n                const isSavedInGroup = savedGroupHeaders.includes(item.header);\n\n                // 선택 상태 클래스 결정\n                let statusClass = '';\n                if (isSelected) {\n                  statusClass = isRepresentative ? 'representative' : 'similar';\n                } else if (isSavedInGroup) {\n                  // 저장된 그룹에 있지만 현재 선택되지 않은 항목\n                  const savedGroupInfo = similarityGroups.find(group => group.items.some(g => g.header === item.header));\n                  if (savedGroupInfo) {\n                    statusClass = savedGroupInfo.representative === item.header ? 'saved-representative' : 'saved-similar';\n                  }\n                }\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `similarity-item ${statusClass}`,\n                  onClick: () => handleSimilarHeaderSelect(item.header, false),\n                  onContextMenu: e => {\n                    e.preventDefault(); // 기본 컨텍스트 메뉴 방지\n                    handleSimilarHeaderSelect(item.header, true);\n                  },\n                  children: [item.header, isSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `status-badge ${isRepresentative ? 'representative' : 'similar'}`,\n                    children: isRepresentative ? '대' : '유'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 29\n                  }, this), !isSelected && isSavedInGroup && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge saved\",\n                    children: similarityGroups.find(group => group.items.some(g => g.header === item.header) && group.representative === item.header) ? '대' : '유'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 25\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-state\",\n                children: \"\\uC720\\uC0AC\\uD55C \\uD5E4\\uB354\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'all' ? 'active' : ''}`,\n          onClick: () => setActiveTab('all'),\n          children: [\"\\uC804\\uCCB4 (\", filteredHeaders.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'withGroup' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withGroup'),\n          children: [\"\\uC720\\uC0AC\\uAD70 \\uC788\\uC74C (\", headersWithGroups.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'withoutGroup' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withoutGroup'),\n          children: [\"\\uC720\\uC0AC\\uAD70 \\uC5C6\\uC74C (\", headersWithoutGroups.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n}, \"OHukJW8Ejcbj5ux/tciq/T/u/8M=\")), \"OHukJW8Ejcbj5ux/tciq/T/u/8M=\");\n_c2 = HeaderList;\nexport default HeaderList;\nvar _c, _c2;\n$RefreshReg$(_c, \"HeaderList$forwardRef\");\n$RefreshReg$(_c2, \"HeaderList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","fetchHeaderList","searchHeaderList","fetchHeaderSimilarityList","jsxDEV","_jsxDEV","Fragment","_Fragment","HeaderList","_s","_c","channel","onHeaderSelect","selectedHeader","similarityGroups","headerSearchTerm","onSimilarityGroupUpdate","onRemoveGroup","similarityViewTrigger","onSimilarityViewProcessed","ref","headers","setHeaders","loading","setLoading","error","setError","activeTab","setActiveTab","headerToGroupMap","setHeaderToGroupMap","groupedHeaders","setGroupedHeaders","searchTerm","setSearchTerm","isSearchMode","setIsSearchMode","viewMode","setViewMode","similarHeaders","setSimilarHeaders","selectedSimilarityGroup","setSelectedSimilarityGroup","representativeHeader","setRepresentativeHeader","isSelectedGroupCollapsed","setIsSelectedGroupCollapsed","similarHeaderLoading","setSimilarHeaderLoading","similarHeaderError","setSimilarHeaderError","currentSimilarityHeader","setCurrentSimilarityHeader","lastClickRef","header","timestamp","viewSimilarHeaders","handleViewSimilarHeaders","trim","getHeaders","response","console","log","list","err","message","handleSearchSubmit","e","preventDefault","handleSearchChange","value","target","newGroupedHeaders","length","flatMap","group","items","filter","item","representative","map","newHeaderToGroupMap","forEach","idx","isRepresentative","count","fetchSimilarHeaders","handleBackToHeaderList","setTimeout","handleSimilarHeaderSelect","setAsRepresentative","now","Date","current","headerObj","find","h","isAlreadySelected","some","newGroup","handleRemoveFromGroup","prev","handleSetRepresentative","handleSaveGroup","groupData","hasCurrentHeader","push","filteredHeaders","includes","headersWithGroups","headersWithoutGroups","displayHeaders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","savedGroupHeaders","filteredSimilarHeaders","selected","onSubmit","type","onChange","placeholder","readOnly","onClick","index","hasGroupInfo","groupCount","title","isSelected","isSavedInGroup","statusClass","savedGroupInfo","g","onContextMenu","_c2","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/HeaderList.js"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { fetchHeaderList, searchHeaderList, fetchHeaderSimilarityList } from '../services/api';\nimport './Column.css';\n\nconst HeaderList = forwardRef(({ \n  channel, \n  onHeaderSelect, \n  selectedHeader, \n  similarityGroups, \n  headerSearchTerm, \n  onSimilarityGroupUpdate,\n  onRemoveGroup,\n  similarityViewTrigger,\n  onSimilarityViewProcessed\n}, ref) => {\n  const [headers, setHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('all'); // 'all', 'withGroup', or 'withoutGroup'\n  const [headerToGroupMap, setHeaderToGroupMap] = useState({});\n  const [groupedHeaders, setGroupedHeaders] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n  \n  // Added for similar header selection functionality\n  const [viewMode, setViewMode] = useState('list'); // 'list' or 'similarSelection'\n  const [similarHeaders, setSimilarHeaders] = useState([]);\n  const [selectedSimilarityGroup, setSelectedSimilarityGroup] = useState([]);\n  const [representativeHeader, setRepresentativeHeader] = useState(null);\n  const [isSelectedGroupCollapsed, setIsSelectedGroupCollapsed] = useState(false);\n  const [similarHeaderLoading, setSimilarHeaderLoading] = useState(false);\n  const [similarHeaderError, setSimilarHeaderError] = useState(null);\n  const [currentSimilarityHeader, setCurrentSimilarityHeader] = useState(null);\n  \n  // 마지막 클릭된 헤더와 타임스탬프를 저장\n  const lastClickRef = useRef({ header: null, timestamp: 0 });\n\n  // Expose functions to parent component\n  useImperativeHandle(ref, () => ({\n    viewSimilarHeaders: (header) => {\n      handleViewSimilarHeaders(header);\n    }\n  }));\n\n  // Handle headerSearchTerm updates from right-clicks in other components\n  useEffect(() => {\n    // Only sync headerSearchTerm -> searchTerm when in list view and when it makes sense\n    if (viewMode === 'list' && headerSearchTerm && \n        headerSearchTerm !== searchTerm && \n        !searchTerm.trim()) { // Only update if our current search is empty\n      setSearchTerm(headerSearchTerm);\n      setIsSearchMode(true);\n    }\n  }, [headerSearchTerm, searchTerm, viewMode]);\n  \n  // Handle similarity view trigger from HeaderCombinationList\n  useEffect(() => {\n    if (similarityViewTrigger && channel) {\n      handleViewSimilarHeaders(similarityViewTrigger);\n      // Call the callback to reset the trigger\n      if (onSimilarityViewProcessed) {\n        onSimilarityViewProcessed();\n      }\n    }\n  }, [similarityViewTrigger, channel]);\n\n  useEffect(() => {\n    if (!channel) return;\n    \n    const getHeaders = async () => {\n      setLoading(true);\n      try {\n        let response;\n        if (isSearchMode && searchTerm.trim()) {\n          // Use search API with keyword\n          response = await searchHeaderList(channel, searchTerm);\n        } else {\n          // Use regular API without keyword\n          response = await fetchHeaderList(channel);\n        }\n        console.log('Header list response:', response);\n        setHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getHeaders();\n  }, [channel, searchTerm, isSearchMode]);\n\n  // Handle search form submission\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      setIsSearchMode(true);\n    } else {\n      setIsSearchMode(false);\n    }\n  };\n\n  // Handle search input change\n  const handleSearchChange = (e) => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    if (!value.trim()) {\n      setIsSearchMode(false);\n    }\n  };\n\n  // 유사군이 변경될 때마다 관련 데이터를 업데이트\n  useEffect(() => {\n    console.log('HeaderList - similarityGroups 변경감지:', similarityGroups);\n    \n    // 유사군에 포함된 모든 헤더 추출\n    const newGroupedHeaders = similarityGroups && similarityGroups.length > 0\n      ? similarityGroups.flatMap(group => \n          // 대표어를 제외한 헤더만 포함\n          group.items\n            .filter(item => item.header !== group.representative)\n            .map(item => item.header)\n        )\n      : [];\n    \n    // 각 헤더별로 유사군 매핑 생성\n    const newHeaderToGroupMap = {};\n    if (similarityGroups && similarityGroups.length > 0) {\n      similarityGroups.forEach((group, idx) => {\n        console.log(`HeaderList - 유사군 #${idx + 1} 처리:`, group.representative, group.items.length);\n        \n        // 대표어에 유사군 카운트 태그 추가\n        newHeaderToGroupMap[group.representative] = {\n          isRepresentative: true,\n          count: group.items.length\n        };\n        \n        // 대표어가 아닌 항목들은 매핑에서 제외 (목록에 표시되지 않음)\n        group.items.forEach(item => {\n          if (item.header !== group.representative) {\n            newHeaderToGroupMap[item.header] = {\n              representative: group.representative,\n              count: group.items.length\n            };\n          }\n        });\n      });\n    }\n    \n    console.log('HeaderList - headerToGroupMap 업데이트:', newHeaderToGroupMap);\n    console.log('HeaderList - groupedHeaders 업데이트:', newGroupedHeaders);\n    \n    setGroupedHeaders(newGroupedHeaders);\n    setHeaderToGroupMap(newHeaderToGroupMap);\n  }, [similarityGroups]);\n\n  // Similar header selection functions\n  const handleViewSimilarHeaders = (header) => {\n    if (!channel || !header) return;\n    \n    // Reset selection state\n    setSelectedSimilarityGroup([]);\n    setRepresentativeHeader(null);\n    \n    // Store the current header being viewed\n    setCurrentSimilarityHeader(header);\n    \n    // Change view mode and fetch similar headers\n    setViewMode('similarSelection');\n    fetchSimilarHeaders(header);\n  };\n  \n  const fetchSimilarHeaders = async (header) => {\n    if (!channel || !header) return;\n    \n    setSimilarHeaderLoading(true);\n    try {\n      const response = await fetchHeaderSimilarityList(channel, header);\n      console.log('Similar headers response:', response);\n      setSimilarHeaders(response.list || []);\n      setSimilarHeaderError(null);\n    } catch (err) {\n      setSimilarHeaderError(err.message);\n      setSimilarHeaders([]);\n    } finally {\n      setSimilarHeaderLoading(false);\n    }\n  };\n  \n  const handleBackToHeaderList = () => {\n    // First set view mode to list\n    setViewMode('list');\n    \n    // Reset similarity-related states\n    setSelectedSimilarityGroup([]);\n    setRepresentativeHeader(null);\n    setCurrentSimilarityHeader(null);\n    \n    // Force reset of search input state (with a small delay to avoid React conflict)\n    setTimeout(() => {\n      setSearchTerm('');\n      setIsSearchMode(false);\n    }, 50);\n    \n    // Notify parent to clear headerSearchTerm if available\n    if (onSimilarityViewProcessed) {\n      onSimilarityViewProcessed(true); // Pass true to indicate search term should be cleared\n    }\n  };\n  \n  const handleSimilarHeaderSelect = (header, setAsRepresentative = false) => {\n    // 중복 클릭 방지 및 디바운싱\n    const now = Date.now();\n    if (lastClickRef.current.header === header && \n        now - lastClickRef.current.timestamp < 500) {\n      // 0.5초 이내에 동일한 헤더를 다시 클릭한 경우 무시\n      return;\n    }\n    \n    // 클릭 정보 업데이트\n    lastClickRef.current = { header, timestamp: now };\n    \n    // 버그 수정: 중복 호출 방지를 위한 체크 추가\n    const headerObj = similarHeaders.find(h => h.header === header);\n    \n    if (!headerObj) return; // 헤더가 존재하지 않으면 무시\n\n    // 이미 선택된 헤더인지 확인\n    const isAlreadySelected = selectedSimilarityGroup.some(h => h.header === header);\n    const isRepresentative = representativeHeader === header;\n    \n    if (isAlreadySelected) {\n      if (setAsRepresentative && !isRepresentative) {\n        // 이미 선택된 헤더를 대표어로 설정 (우클릭)\n        setRepresentativeHeader(header);\n      } else {\n        // 이미 선택된 헤더의 선택 해제 (다시 클릭)\n        const newGroup = selectedSimilarityGroup.filter(h => h.header !== header);\n        setSelectedSimilarityGroup(newGroup);\n        \n        // 대표어가 제거된 경우 새로운 대표어 선택\n        if (isRepresentative && newGroup.length > 0) {\n          setRepresentativeHeader(newGroup[0].header);\n        } else if (isRepresentative) {\n          setRepresentativeHeader(null);\n        }\n      }\n    } else {\n      // 선택되지 않은 경우, 선택에 추가\n      const newGroup = [...selectedSimilarityGroup, headerObj];\n      setSelectedSimilarityGroup(newGroup);\n      \n      // 우클릭인 경우에만 대표어로 설정 (명시적으로 로직 분리)\n      if (setAsRepresentative) {\n        // 우클릭 - 대표어로 설정\n        setRepresentativeHeader(header);\n      }\n      // 좌클릭은 단순히 선택만 되고 대표어로 설정되지 않음\n    }\n  };\n  \n  const handleRemoveFromGroup = (header) => {\n    setSelectedSimilarityGroup(prev => prev.filter(h => h.header !== header));\n    // If representative header is removed, reset it\n    if (representativeHeader === header) {\n      setRepresentativeHeader(selectedSimilarityGroup.length > 1 ? selectedSimilarityGroup[0].header : null);\n    }\n  };\n  \n  const handleSetRepresentative = (header) => {\n    setRepresentativeHeader(header);\n  };\n  \n  const handleSaveGroup = () => {\n    if (selectedSimilarityGroup.length > 0 && representativeHeader) {\n      // 유사군 데이터를 일관된 형식으로 변환\n      const groupData = selectedSimilarityGroup.map(item => ({\n        header: item.header,\n        // 기타 필요한 속성 유지\n        ...item\n      }));\n      \n      // 선택한 그룹에 현재 선택한 헤더가 없다면 추가\n      const hasCurrentHeader = groupData.some(item => item.header === currentSimilarityHeader);\n      if (!hasCurrentHeader && currentSimilarityHeader) {\n        groupData.push({ header: currentSimilarityHeader });\n      }\n      \n      console.log('저장할 유사군 데이터:', groupData, representativeHeader);\n      \n      onSimilarityGroupUpdate && onSimilarityGroupUpdate(\n        groupData, \n        representativeHeader\n      );\n      \n      // 저장 후에도 화면을 유지\n      // setViewMode('list'); 삭제\n      \n      // 저장 후에도 선택된 그룹과 대표어 유지\n      // setSelectedSimilarityGroup([]);\n      // setRepresentativeHeader(null);\n    }\n  };\n\n  // 유사군에 속하지 않거나 대표어인 헤더만 표시\n  const filteredHeaders = headers.filter(item => \n    !groupedHeaders.includes(item.header)\n  );\n\n  // 유사군이 있는 헤더 (대표어)와 없는 헤더를 구분\n  const headersWithGroups = filteredHeaders.filter(item => \n    headerToGroupMap[item.header] && headerToGroupMap[item.header].isRepresentative\n  );\n  \n  const headersWithoutGroups = filteredHeaders.filter(item => \n    !headerToGroupMap[item.header] || !headerToGroupMap[item.header].isRepresentative\n  );\n\n  // 활성 탭에 따라 표시할 헤더 목록 선택\n  let displayHeaders = filteredHeaders;\n  if (activeTab === 'withGroup') {\n    displayHeaders = headersWithGroups;\n  } else if (activeTab === 'withoutGroup') {\n    displayHeaders = headersWithoutGroups;\n  }\n\n  if (!channel) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널을 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  // Create a list of all headers that are already part of saved groups\n  const savedGroupHeaders = similarityGroups ? similarityGroups.flatMap(group => \n    group.items.map(item => item.header)\n  ) : [];\n\n  // Filter out headers that are already in the selected group or in any saved group\n  const filteredSimilarHeaders = similarHeaders.filter(\n    h => !selectedSimilarityGroup.some(selected => selected.header === h.header) &&\n         !savedGroupHeaders.includes(h.header)\n  );\n  \n  return (\n    <div className={`column-container ${viewMode === 'similarSelection' ? 'similarity-view' : ''}`}>\n      {viewMode === 'list' ? (\n        <>\n          <h2 className=\"column-title\">\n            헤더 목록\n            {/* : {channel} */}\n          </h2>\n          \n          <form onSubmit={handleSearchSubmit} className=\"search-form\">\n            <input\n              type=\"text\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              placeholder=\"검색어를 입력하세요\"\n              className=\"search-input\"\n              // Force the input to be editable\n              readOnly={false} \n            />\n            <button type=\"submit\" className=\"search-button\">검색</button>\n          </form>\n          \n          {isSearchMode && (\n            <div className=\"search-status\">\n              \"{searchTerm}\" 검색 결과 {headers.length}건\n              <button \n                className=\"clear-search-button\" \n                onClick={() => {\n                  setSearchTerm('');\n                  setIsSearchMode(false);\n                }}\n              >\n                검색 취소\n              </button>\n            </div>\n          )}\n          \n          <div className=\"column-content\">\n            {loading ? (\n              <div className=\"loading\">로딩 중...</div>\n            ) : error ? (\n              <div className=\"error\">에러: {error}</div>\n            ) : displayHeaders.length > 0 ? (\n              displayHeaders.map((item, index) => {\n                // 각 헤더 항목 처리 시 로그 추가\n                const hasGroupInfo = headerToGroupMap[item.header];\n                const isRepresentative = hasGroupInfo && headerToGroupMap[item.header].isRepresentative;\n                const groupCount = isRepresentative ? headerToGroupMap[item.header].count : 0;\n                \n                if (isRepresentative) {\n                  console.log(`헤더 렌더링 - 대표어 표시: ${item.header}, 유사군 수: ${groupCount}`);\n                }\n                \n                return (\n                  <div\n                    key={index}\n                    className={`column-item ${selectedHeader === item.header ? 'selected' : ''}`}\n                  >\n                    <div \n                      className=\"column-item-content\"\n                      onClick={() => onHeaderSelect(item.header)}\n                    >\n                      {item.header}\n                      {isRepresentative && (\n                        <span className=\"similarity-tag\" title={`${groupCount}개의 유사어가 있습니다`}>\n                          유사군 {groupCount}\n                        </span>\n                      )}\n                      {hasGroupInfo && !isRepresentative && (\n                        <span className=\"similarity-tag\" title={`대표어: ${headerToGroupMap[item.header].representative}`}>\n                          유사군\n                        </span>\n                      )}\n                    </div>\n                    {!hasGroupInfo && (\n                      <button \n                        className=\"view-similar-btn\" \n                        onClick={() => handleViewSimilarHeaders(item.header)}\n                        title=\"유사헤더 보기\"\n                      >\n                        유사\n                      </button>\n                    )}\n                  </div>\n                );\n              })\n            ) : (\n              <div className=\"column-empty\">\n                {activeTab === 'withGroup' ? '유사군이 있는 헤더가 없습니다.' : \n                 activeTab === 'withoutGroup' ? '유사군이 없는 헤더가 없습니다.' : \n                 '헤더 정보가 없습니다.'}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"tabs\">\n            <button \n              className={`tab ${activeTab === 'all' ? 'active' : ''}`}\n              onClick={() => setActiveTab('all')}\n            >\n              전체 ({filteredHeaders.length})\n            </button>\n            <button \n              className={`tab ${activeTab === 'withGroup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('withGroup')}\n            >\n              유사군 있음 ({headersWithGroups.length})\n            </button>\n            <button \n              className={`tab ${activeTab === 'withoutGroup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('withoutGroup')}\n            >\n              유사군 없음 ({headersWithoutGroups.length})\n            </button>\n          </div>\n        </>\n      ) : (\n        // Similar header selection view\n        <>\n          <h2 className=\"column-title\">\n            <button className=\"back-button\" onClick={handleBackToHeaderList}>\n              ← 헤더 목록\n            </button>\n            <span className=\"title-path\" title={currentSimilarityHeader}>\n              {currentSimilarityHeader}\n            </span>\n          </h2>\n          \n          <div className=\"column-content\">\n            <div className=\"similarity-vertical-layout\">\n              <div className=\"similarity-header-section\">\n                <h3 className=\"group-subtitle\">\n                  유사 헤더 선택\n                  {selectedSimilarityGroup.length >= 2 && representativeHeader && (\n                    <button \n                      className=\"save-group-btn action-btn header-action-btn\"\n                      onClick={handleSaveGroup}\n                      title=\"현재 선택된 유사 헤더를 그룹으로 저장합니다\"\n                    >\n                      유사군 저장 ({selectedSimilarityGroup.length}개)\n                    </button>\n                  )}\n                </h3>\n                \n                <div className=\"click-guide\">\n                  <span className=\"guide-item\"><span className=\"guide-icon\">🖱️</span> 좌클릭: 유사어 선택</span>\n                  <span className=\"guide-item\"><span className=\"guide-icon\">🖱️</span> 우클릭: 대표어 선택</span>\n                  <span className=\"guide-item\"><span className=\"guide-icon\">🖱️</span> 재클릭: 선택 해제</span>\n                </div>\n                \n                <div className=\"similarity-items\">\n                  {similarHeaderLoading ? (\n                    <div className=\"loading\">로딩 중...</div>\n                  ) : similarHeaderError ? (\n                    <div className=\"error\">에러: {similarHeaderError}</div>\n                  ) : similarHeaders && similarHeaders.length > 0 ? (\n                    similarHeaders.map((item, index) => {\n                      // 이미 선택된 항목인지 확인\n                      const isSelected = selectedSimilarityGroup.some(h => h.header === item.header);\n                      // 대표 헤더인지 확인\n                      const isRepresentative = representativeHeader === item.header;\n                      \n                      // 이미 저장된 그룹에 있는지 확인\n                      const isSavedInGroup = savedGroupHeaders.includes(item.header);\n                      \n                      // 선택 상태 클래스 결정\n                      let statusClass = '';\n                      if (isSelected) {\n                        statusClass = isRepresentative ? 'representative' : 'similar';\n                      } else if (isSavedInGroup) {\n                        // 저장된 그룹에 있지만 현재 선택되지 않은 항목\n                        const savedGroupInfo = similarityGroups.find(group => \n                          group.items.some(g => g.header === item.header)\n                        );\n                        if (savedGroupInfo) {\n                          statusClass = savedGroupInfo.representative === item.header ? 'saved-representative' : 'saved-similar';\n                        }\n                      }\n                      \n                      return (\n                        <div \n                          key={index} \n                          className={`similarity-item ${statusClass}`}\n                          onClick={() => handleSimilarHeaderSelect(item.header, false)}\n                          onContextMenu={(e) => {\n                            e.preventDefault(); // 기본 컨텍스트 메뉴 방지\n                            handleSimilarHeaderSelect(item.header, true);\n                          }}\n                        >\n                          {item.header}\n                          {isSelected && (\n                            <span className={`status-badge ${isRepresentative ? 'representative' : 'similar'}`}>\n                              {isRepresentative ? '대' : '유'}\n                            </span>\n                          )}\n                          {!isSelected && isSavedInGroup && (\n                            <span className=\"status-badge saved\">\n                              {similarityGroups.find(group => \n                                group.items.some(g => g.header === item.header) && \n                                group.representative === item.header\n                              ) ? '대' : '유'}\n                            </span>\n                          )}\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div className=\"empty-state\">유사한 헤더가 없습니다.</div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"tabs\">\n            <button \n              className={`tab ${activeTab === 'all' ? 'active' : ''}`}\n              onClick={() => setActiveTab('all')}\n            >\n              전체 ({filteredHeaders.length})\n            </button>\n            <button \n              className={`tab ${activeTab === 'withGroup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('withGroup')}\n            >\n              유사군 있음 ({headersWithGroups.length})\n            </button>\n            <button \n              className={`tab ${activeTab === 'withoutGroup' ? 'active' : ''}`}\n              onClick={() => setActiveTab('withoutGroup')}\n            >\n              유사군 없음 ({headersWithoutGroups.length})\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n});\n\nexport default HeaderList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}