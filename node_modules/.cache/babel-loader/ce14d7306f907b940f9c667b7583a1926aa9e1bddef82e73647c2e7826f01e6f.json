{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/ChannelList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ChannelList.css';\nimport { fetchChannelList } from '../services/api';\nimport HeaderList from './HeaderList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelList = () => {\n  _s();\n  const [channels, setChannels] = useState([]);\n  const [selectedChannel, setSelectedChannel] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getChannels = async () => {\n      try {\n        const data = await fetchChannelList();\n        setChannels(data.list || []);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    getChannels();\n  }, []);\n  const handleChannelClick = channel => {\n    setSelectedChannel(channel.채널키);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"\\uC5D0\\uB7EC: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCC44\\uB110 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-list\",\n      children: channels && channels.length > 0 ? channels.map(channel => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `channel-item ${selectedChannel === channel.채널키 ? 'selected' : ''}`,\n        onClick: () => handleChannelClick(channel),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-info\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: channel.채널키 || 'Unknown Channel'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, channel._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-channels\",\n        children: \"\\uCC44\\uB110 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), selectedChannel && /*#__PURE__*/_jsxDEV(HeaderList, {\n      channel: selectedChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelList, \"ieXQDAriX2gWkJT+dvWNzQ+O9Xg=\");\n_c = ChannelList;\nexport default ChannelList;\nvar _c;\n$RefreshReg$(_c, \"ChannelList\");","map":{"version":3,"names":["React","useState","useEffect","fetchChannelList","HeaderList","jsxDEV","_jsxDEV","ChannelList","_s","channels","setChannels","selectedChannel","setSelectedChannel","loading","setLoading","error","setError","getChannels","data","list","err","message","handleChannelClick","channel","채널키","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/ChannelList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ChannelList.css';\nimport { fetchChannelList } from '../services/api';\nimport HeaderList from './HeaderList';\n\nconst ChannelList = () => {\n  const [channels, setChannels] = useState([]);\n  const [selectedChannel, setSelectedChannel] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getChannels = async () => {\n      try {\n        const data = await fetchChannelList();\n        setChannels(data.list || []);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    getChannels();\n  }, []);\n\n  const handleChannelClick = (channel) => {\n    setSelectedChannel(channel.채널키);\n  };\n\n  if (loading) return <div className=\"loading\">로딩 중...</div>;\n  if (error) return <div className=\"error\">에러: {error}</div>;\n\n  return (\n    <div className=\"channel-list-container\">\n      <h2>채널 목록</h2>\n      <div className=\"channel-list\">\n        {channels && channels.length > 0 ? (\n          channels.map((channel) => (\n            <div \n              key={channel._id} \n              className={`channel-item ${selectedChannel === channel.채널키 ? 'selected' : ''}`}\n              onClick={() => handleChannelClick(channel)}\n            >\n              <div className=\"channel-info\">\n                <h3>{channel.채널키 || 'Unknown Channel'}</h3>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"no-channels\">채널 정보가 없습니다.</div>\n        )}\n      </div>\n\n      {selectedChannel && <HeaderList channel={selectedChannel} />}\n    </div>\n  );\n};\n\nexport default ChannelList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}