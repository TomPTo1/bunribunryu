{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/DataDisplay.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SeparationClassifier.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataDisplay = ({\n  processedData,\n  flattenData,\n  segmentationData,\n  groupingData\n}) => {\n  _s();\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [groupNameInput, setGroupNameInput] = useState('');\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n  if (!processedData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\uCC98\\uB9AC\\uD560 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if we have grouping data\n  const hasGroupingData = groupingData && groupingData.uniqueValues && Array.isArray(groupingData.uniqueValues);\n\n  // Render grouping interface if we have grouping data\n  const renderGroupingInterface = () => {\n    if (!hasGroupingData) return null;\n    const {\n      uniqueValues,\n      groups\n    } = groupingData;\n\n    // Handle segmentation value click to add to selected group\n    const handleValueClick = value => {\n      if (!selectedGroupId) {\n        alert('먼저 그룹을 선택해주세요');\n        return;\n      }\n      if (groupingData && groupingData.onAddValueToGroup) {\n        groupingData.onAddValueToGroup(selectedGroupId, value);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouping-interface\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouping-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segmentation-values-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uBD84\\uC808\\uAC12 \\uBAA9\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"segmentation-values-list\",\n            children: uniqueValues.map((value, index) => {\n              // Skip values that are already in any group\n              const isInAnyGroup = groups && groups.some(group => group.items && group.items.includes(value));\n              if (isInAnyGroup) {\n                return null;\n              }\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"segmentation-value-item clickable\",\n                onClick: () => handleValueClick(value),\n                title: \"\\uD074\\uB9AD\\uD558\\uC5EC \\uC120\\uD0DD\\uB41C \\uADF8\\uB8F9\\uC5D0 \\uCD94\\uAC00\",\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-boxes-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uADF8\\uB8F9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-boxes-list\",\n            children: [groups && groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `group-box ${selectedGroupId === group.id ? 'selected-group' : ''}`,\n              onClick: () => setSelectedGroupId(group.id),\n              children: [editingGroupId === group.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-name-edit\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: groupNameInput,\n                  onChange: e => setGroupNameInput(e.target.value),\n                  onBlur: () => {\n                    if (groupingData && groupingData.onUpdateGroupName) {\n                      groupingData.onUpdateGroupName(group.id, groupNameInput);\n                    }\n                    setEditingGroupId(null);\n                  },\n                  autoFocus: true,\n                  onClick: e => e.stopPropagation() // Prevent group selection when editing name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-box-name\",\n                onClick: e => {\n                  e.stopPropagation(); // Prevent group selection when clicking on name to edit\n                  setEditingGroupId(group.id);\n                  setGroupNameInput(group.name);\n                },\n                children: group.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-box-content\",\n                children: group.items && group.items.length > 0 ? group.items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-item\",\n                  onClick: e => {\n                    e.stopPropagation(); // Prevent group selection when clicking item\n                    if (groupingData && groupingData.onRemoveValueFromGroup) {\n                      groupingData.onRemoveValueFromGroup(group.id, item);\n                    }\n                  },\n                  title: \"\\uD074\\uB9AD\\uD558\\uC5EC \\uADF8\\uB8F9\\uC5D0\\uC11C \\uC81C\\uAC70\",\n                  children: item\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"empty-group\",\n                  children: \"\\uBE48 \\uADF8\\uB8F9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, group.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-group-button\",\n              onClick: () => {\n                if (groupingData && groupingData.onAddGroup) {\n                  groupingData.onAddGroup();\n                }\n              },\n              children: \"+ \\uC0C8 \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Check if the text is a duplicated string (contains itself twice)\n  const isDuplicatedText = text => {\n    if (typeof text !== 'string' || text.length === 0) return false;\n    const halfLength = Math.floor(text.length / 2);\n    const firstHalf = text.substring(0, halfLength);\n    return text.includes(firstHalf + firstHalf);\n  };\n\n  // Remove duplicated text if needed\n  const cleanDuplicatedText = text => {\n    if (!isDuplicatedText(text)) return text;\n    const halfLength = Math.floor(text.length / 2);\n    return text.substring(0, halfLength);\n  };\n\n  // Check if a value has segmentation data\n  const hasSegmentationData = value => {\n    if (!segmentationData || !segmentationData.segmentations) return false;\n    const segmentations = segmentationData.segmentations;\n    return segmentations.some(seg => seg.value === value && seg.segments.length > 1);\n  };\n\n  // Get segmentation data for a value\n  const getSegmentationData = value => {\n    if (!segmentationData || !segmentationData.segmentations) return null;\n    const segmentations = segmentationData.segmentations;\n    return segmentations.find(seg => seg.value === value);\n  };\n\n  // Handle segment click\n  const handleSegmentClick = (segment, e) => {\n    // 전파 중지 - 부모의 클릭 이벤트가 발생하지 않도록\n    e.stopPropagation();\n    console.log('Segment clicked:', segment);\n    // 필요에 따라 여기에 추가 동작 구현 (예: 검색, 필터링 등)\n  };\n\n  // Handle whole tag click\n  const handleTagClick = value => {\n    console.log('Whole tag clicked:', value);\n    // 필요에 따라 여기에 추가 동작 구현 (예: 검색, 필터링 등)\n  };\n\n  // Helper function to render a tag with appropriate styling\n  const renderTag = (value, source, key, isLastStep) => {\n    let className = `value-tag ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'}`;\n\n    // Check if we have segmentation data for this value\n    const valueText = typeof value === 'string' ? value : value.value;\n    const segmentation = getSegmentationData(valueText);\n    if (segmentation && segmentation.segments.length > 1) {\n      // Render with inner segments\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${className} tag-container`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"whole-tag-button\",\n          onClick: () => handleTagClick(valueText),\n          title: \"\\uC804\\uCCB4 \\uD0DC\\uADF8 \\uC120\\uD0DD\",\n          children: valueText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segments-container\",\n          children: segmentation.segments.map((segment, segIdx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `segment-button ${segment.isSubstring ? 'segment-matched' : 'segment-unmatched'}`,\n            onClick: e => handleSegmentClick(segment, e),\n            children: segment.text\n          }, `seg-${segIdx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this);\n    }\n\n    // No segmentation, render normally but still clickable\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${className} clickable-tag simple-tag-button`,\n      onClick: () => handleTagClick(valueText),\n      children: valueText\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render the enhanced view that shows processed and unprocessed parts in sequence\n  const renderEnhancedView = row => {\n    // Handle substring segmentation data\n    if (row.type === 'substring-segmentation') {\n      return renderSubstringSegmentationView(row);\n    }\n\n    // Check if this is the last pipeline step (right before substring segmentation)\n    const isLastStep = segmentationData && segmentationData.processed && segmentationData.processed.previous && segmentationData.processed.previous.type === row.type;\n\n    // Clean up potentially duplicated original text\n    let original = row.original;\n    if (isDuplicatedText(original)) {\n      original = cleanDuplicatedText(original);\n    }\n    if (!original || typeof original !== 'string') {\n      return renderSeparatedValues(row, isLastStep);\n    }\n\n    // If no separation has happened yet\n    if (!row.separated || row.separated.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unprocessed-tag\",\n        children: original\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 14\n      }, this);\n    }\n    if (row.type === 'bracket-separation') {\n      // For bracket separation, highlight brackets and content\n      let result = [];\n      let lastIndex = 0;\n\n      // Sort match details by start index if available\n      const matchDetails = row.matchDetails || [];\n      const sortedMatches = [...matchDetails].sort((a, b) => a.startIndex - b.startIndex);\n      sortedMatches.forEach((match, idx) => {\n        // Add unprocessed text before this match\n        if (match.startIndex > lastIndex) {\n          const unprocessedText = original.substring(lastIndex, match.startIndex);\n          result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"unprocessed-tag\",\n            children: unprocessedText\n          }, `unproc-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this));\n        }\n\n        // Add the processed bracket content\n        result.push(renderTag(match.value, 'bracket', `proc-${idx}`, isLastStep));\n        lastIndex = match.endIndex;\n      });\n\n      // Add any remaining text\n      if (lastIndex < original.length) {\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"unprocessed-tag\",\n          children: original.substring(lastIndex)\n        }, \"unproc-last\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this));\n      }\n      return result;\n    }\n\n    // Fallback to original display method\n    return renderSeparatedValues(row, isLastStep);\n  };\n\n  // Render substring segmentation view with segmented parts\n  const renderSubstringSegmentationView = row => {\n    if (!row.previous || !row.previous.separated || row.previous.separated.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-values\",\n        children: \"\\uC774\\uC804 \\uB2E8\\uACC4\\uC758 \\uAC12\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"substring-segmentation-view\",\n      children: row.separated.map((item, idx) => {\n        const value = typeof item === 'string' ? item : item.value;\n        const segments = item.segments || [];\n        const source = item.source || 'text';\n\n        // If there are segments, render them\n        if (segments.length > 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `value-tag tag-container ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"whole-tag-button\",\n              onClick: () => handleTagClick(value),\n              title: \"\\uC804\\uCCB4 \\uD0DC\\uADF8 \\uC120\\uD0DD\",\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"segments-container\",\n              children: segments.map((segment, segIdx) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `segment-button ${segment.isSubstring ? 'segment-matched' : 'segment-unmatched'}`,\n                onClick: e => handleSegmentClick(segment, e),\n                children: segment.text\n              }, `seg-${segIdx}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this);\n        }\n\n        // No segments, render normally\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `value-tag simple-tag-button ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'}`,\n          onClick: () => handleTagClick(value),\n          children: value\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSeparatedValues = (row, isLastStep) => {\n    if (!row.separated || row.separated.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-values\",\n        children: \"\\uCD94\\uCD9C\\uB41C \\uAC12 \\uC5C6\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 14\n      }, this);\n    }\n    if (Array.isArray(row.separated) && row.separated.every(v => typeof v === 'string')) {\n      // Old format (just strings)\n      return row.separated.map((val, idx) => renderTag(val, 'text', idx, isLastStep));\n    }\n\n    // New format (with metadata)\n    return row.separated.map((item, idx) => renderTag(item, item.source || 'text', idx, isLastStep));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-display\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: flattenData(processedData).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"enhanced-view\",\n            children: renderEnhancedView(row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s(DataDisplay, \"264AF81oLGw/KLuDSjihK2cwV94=\");\n_c = DataDisplay;\nexport default DataDisplay;\n\n// Create a separate component for the grouping interface\nexport const GroupingPanel = ({\n  groupingData\n}) => {\n  _s2();\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [groupNameInput, setGroupNameInput] = useState('');\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n  if (!groupingData || !groupingData.uniqueValues || !Array.isArray(groupingData.uniqueValues)) {\n    return null;\n  }\n  const {\n    uniqueValues,\n    groups\n  } = groupingData;\n\n  // Handle segmentation value click to add to selected group\n  const handleValueClick = value => {\n    if (!selectedGroupId) {\n      alert('먼저 그룹을 선택해주세요');\n      return;\n    }\n    if (groupingData.onAddValueToGroup) {\n      groupingData.onAddValueToGroup(selectedGroupId, value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouping-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouping-interface\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouping-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segmentation-values-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uBD84\\uC808\\uAC12 \\uBAA9\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"segmentation-values-list\",\n            children: uniqueValues.map((value, index) => {\n              // Skip values that are already in any group\n              const isInAnyGroup = groups && groups.some(group => group.items && group.items.includes(value));\n              if (isInAnyGroup) {\n                return null;\n              }\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"segmentation-value-item clickable\",\n                onClick: () => handleValueClick(value),\n                title: \"\\uD074\\uB9AD\\uD558\\uC5EC \\uC120\\uD0DD\\uB41C \\uADF8\\uB8F9\\uC5D0 \\uCD94\\uAC00\",\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-boxes-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uADF8\\uB8F9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-boxes-list\",\n            children: [groups && groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `group-box ${selectedGroupId === group.id ? 'selected-group' : ''}`,\n              onClick: () => setSelectedGroupId(group.id),\n              children: [editingGroupId === group.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-name-edit\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: groupNameInput,\n                  onChange: e => setGroupNameInput(e.target.value),\n                  onBlur: () => {\n                    if (groupingData.onUpdateGroupName) {\n                      groupingData.onUpdateGroupName(group.id, groupNameInput);\n                    }\n                    setEditingGroupId(null);\n                  },\n                  autoFocus: true,\n                  onClick: e => e.stopPropagation() // Prevent group selection when editing name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-box-name\",\n                onClick: e => {\n                  e.stopPropagation(); // Prevent group selection when clicking on name to edit\n                  setEditingGroupId(group.id);\n                  setGroupNameInput(group.name);\n                },\n                children: group.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-box-content\",\n                children: group.items && group.items.length > 0 ? group.items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-item\",\n                  onClick: e => {\n                    e.stopPropagation(); // Prevent group selection when clicking item\n                    if (groupingData.onRemoveValueFromGroup) {\n                      groupingData.onRemoveValueFromGroup(group.id, item);\n                    }\n                  },\n                  title: \"\\uD074\\uB9AD\\uD558\\uC5EC \\uADF8\\uB8F9\\uC5D0\\uC11C \\uC81C\\uAC70\",\n                  children: item\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"empty-group\",\n                  children: \"\\uBE48 \\uADF8\\uB8F9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this)]\n            }, group.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-group-button\",\n              onClick: () => {\n                if (groupingData.onAddGroup) {\n                  groupingData.onAddGroup();\n                }\n              },\n              children: \"+ \\uC0C8 \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n};\n_s2(GroupingPanel, \"264AF81oLGw/KLuDSjihK2cwV94=\");\n_c2 = GroupingPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"DataDisplay\");\n$RefreshReg$(_c2, \"GroupingPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DataDisplay","processedData","flattenData","segmentationData","groupingData","_s","editingGroupId","setEditingGroupId","groupNameInput","setGroupNameInput","selectedGroupId","setSelectedGroupId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hasGroupingData","uniqueValues","Array","isArray","renderGroupingInterface","groups","handleValueClick","value","alert","onAddValueToGroup","map","index","isInAnyGroup","some","group","items","includes","onClick","title","id","type","onChange","e","target","onBlur","onUpdateGroupName","autoFocus","stopPropagation","name","length","item","idx","onRemoveValueFromGroup","onAddGroup","isDuplicatedText","text","halfLength","Math","floor","firstHalf","substring","cleanDuplicatedText","hasSegmentationData","segmentations","seg","segments","getSegmentationData","find","handleSegmentClick","segment","console","log","handleTagClick","renderTag","source","key","isLastStep","valueText","segmentation","segIdx","isSubstring","renderEnhancedView","row","renderSubstringSegmentationView","processed","previous","original","renderSeparatedValues","separated","result","lastIndex","matchDetails","sortedMatches","sort","a","b","startIndex","forEach","match","unprocessedText","push","endIndex","every","v","val","_c","GroupingPanel","_s2","_c2","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/DataDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SeparationClassifier.css';\n\nconst DataDisplay = ({ processedData, flattenData, segmentationData, groupingData }) => {\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [groupNameInput, setGroupNameInput] = useState('');\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n  \n  if (!processedData) {\n    return <div className=\"no-data\">처리할 데이터가 없습니다</div>;\n  }\n\n  // Check if we have grouping data\n  const hasGroupingData = groupingData && groupingData.uniqueValues && Array.isArray(groupingData.uniqueValues);\n  \n  // Render grouping interface if we have grouping data\n  const renderGroupingInterface = () => {\n    if (!hasGroupingData) return null;\n    \n    const { uniqueValues, groups } = groupingData;\n    \n    // Handle segmentation value click to add to selected group\n    const handleValueClick = (value) => {\n      if (!selectedGroupId) {\n        alert('먼저 그룹을 선택해주세요');\n        return;\n      }\n      \n      if (groupingData && groupingData.onAddValueToGroup) {\n        groupingData.onAddValueToGroup(selectedGroupId, value);\n      }\n    };\n    \n    return (\n      <div className=\"grouping-interface\">\n        <div className=\"grouping-layout\">\n          {/* Left side - Segmentation values */}\n          <div className=\"segmentation-values-container\">\n            <h4>분절값 목록</h4>\n            <div className=\"segmentation-values-list\">\n              {uniqueValues.map((value, index) => {\n                // Skip values that are already in any group\n                const isInAnyGroup = groups && groups.some(group => \n                  group.items && group.items.includes(value)\n                );\n                \n                if (isInAnyGroup) {\n                  return null;\n                }\n                \n                return (\n                  <div \n                    key={index} \n                    className=\"segmentation-value-item clickable\"\n                    onClick={() => handleValueClick(value)}\n                    title=\"클릭하여 선택된 그룹에 추가\"\n                  >\n                    {value}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          \n          {/* Right side - Group boxes */}\n          <div className=\"group-boxes-container\">\n            <h4>그룹</h4>\n            <div className=\"group-boxes-list\">\n              {groups && groups.map((group) => (\n                <div \n                  key={group.id} \n                  className={`group-box ${selectedGroupId === group.id ? 'selected-group' : ''}`}\n                  onClick={() => setSelectedGroupId(group.id)}\n                >\n                  {editingGroupId === group.id ? (\n                    <div className=\"group-name-edit\">\n                      <input \n                        type=\"text\" \n                        value={groupNameInput} \n                        onChange={(e) => setGroupNameInput(e.target.value)}\n                        onBlur={() => {\n                          if (groupingData && groupingData.onUpdateGroupName) {\n                            groupingData.onUpdateGroupName(group.id, groupNameInput);\n                          }\n                          setEditingGroupId(null);\n                        }}\n                        autoFocus\n                        onClick={(e) => e.stopPropagation()} // Prevent group selection when editing name\n                      />\n                    </div>\n                  ) : (\n                    <div \n                      className=\"group-box-name\"\n                      onClick={(e) => {\n                        e.stopPropagation(); // Prevent group selection when clicking on name to edit\n                        setEditingGroupId(group.id);\n                        setGroupNameInput(group.name);\n                      }}\n                    >\n                      {group.name}\n                    </div>\n                  )}\n                  <div className=\"group-box-content\">\n                    {group.items && group.items.length > 0 ? (\n                      group.items.map((item, idx) => (\n                        <div \n                          key={idx} \n                          className=\"group-item\"\n                          onClick={(e) => {\n                            e.stopPropagation(); // Prevent group selection when clicking item\n                            if (groupingData && groupingData.onRemoveValueFromGroup) {\n                              groupingData.onRemoveValueFromGroup(group.id, item);\n                            }\n                          }}\n                          title=\"클릭하여 그룹에서 제거\"\n                        >\n                          {item}\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"empty-group\">빈 그룹</div>\n                    )}\n                  </div>\n                </div>\n              ))}\n              \n              {/* Add new group button */}\n              <button \n                className=\"add-group-button\"\n                onClick={() => {\n                  if (groupingData && groupingData.onAddGroup) {\n                    groupingData.onAddGroup();\n                  }\n                }}\n              >\n                + 새 그룹 추가\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Check if the text is a duplicated string (contains itself twice)\n  const isDuplicatedText = (text) => {\n    if (typeof text !== 'string' || text.length === 0) return false;\n    const halfLength = Math.floor(text.length / 2);\n    const firstHalf = text.substring(0, halfLength);\n    return text.includes(firstHalf + firstHalf);\n  };\n\n  // Remove duplicated text if needed\n  const cleanDuplicatedText = (text) => {\n    if (!isDuplicatedText(text)) return text;\n    const halfLength = Math.floor(text.length / 2);\n    return text.substring(0, halfLength);\n  };\n\n  // Check if a value has segmentation data\n  const hasSegmentationData = (value) => {\n    if (!segmentationData || !segmentationData.segmentations) return false;\n    \n    const segmentations = segmentationData.segmentations;\n    return segmentations.some(seg => seg.value === value && seg.segments.length > 1);\n  };\n\n  // Get segmentation data for a value\n  const getSegmentationData = (value) => {\n    if (!segmentationData || !segmentationData.segmentations) return null;\n    \n    const segmentations = segmentationData.segmentations;\n    return segmentations.find(seg => seg.value === value);\n  };\n\n  // Handle segment click\n  const handleSegmentClick = (segment, e) => {\n    // 전파 중지 - 부모의 클릭 이벤트가 발생하지 않도록\n    e.stopPropagation();\n    console.log('Segment clicked:', segment);\n    // 필요에 따라 여기에 추가 동작 구현 (예: 검색, 필터링 등)\n  };\n\n  // Handle whole tag click\n  const handleTagClick = (value) => {\n    console.log('Whole tag clicked:', value);\n    // 필요에 따라 여기에 추가 동작 구현 (예: 검색, 필터링 등)\n  };\n\n  // Helper function to render a tag with appropriate styling\n  const renderTag = (value, source, key, isLastStep) => {\n    let className = `value-tag ${\n      source === 'bracket' ? 'bracket-source' : \n      source === 'clean-text' ? 'text-source' : 'delimiter-source'\n    }`;\n    \n    // Check if we have segmentation data for this value\n    const valueText = typeof value === 'string' ? value : value.value;\n    const segmentation = getSegmentationData(valueText);\n    \n    if (segmentation && segmentation.segments.length > 1) {\n      // Render with inner segments\n      return (\n        <div key={key} className={`${className} tag-container`}>\n          <button \n            className=\"whole-tag-button\" \n            onClick={() => handleTagClick(valueText)}\n            title=\"전체 태그 선택\"\n          >\n            {valueText}\n          </button>\n          <div className=\"segments-container\">\n            {segmentation.segments.map((segment, segIdx) => (\n              <button \n                key={`seg-${segIdx}`} \n                className={`segment-button ${segment.isSubstring ? 'segment-matched' : 'segment-unmatched'}`}\n                onClick={(e) => handleSegmentClick(segment, e)}\n              >\n                {segment.text}\n              </button>\n            ))}\n          </div>\n        </div>\n      );\n    }\n    \n    // No segmentation, render normally but still clickable\n    return (\n      <button \n        key={key} \n        className={`${className} clickable-tag simple-tag-button`}\n        onClick={() => handleTagClick(valueText)}\n      >\n        {valueText}\n      </button>\n    );\n  };\n\n  // Render the enhanced view that shows processed and unprocessed parts in sequence\n  const renderEnhancedView = (row) => {\n    // Handle substring segmentation data\n    if (row.type === 'substring-segmentation') {\n      return renderSubstringSegmentationView(row);\n    }\n    \n    // Check if this is the last pipeline step (right before substring segmentation)\n    const isLastStep = segmentationData && segmentationData.processed && \n                       (segmentationData.processed.previous &&\n                        segmentationData.processed.previous.type === row.type);\n    \n    // Clean up potentially duplicated original text\n    let original = row.original;\n    if (isDuplicatedText(original)) {\n      original = cleanDuplicatedText(original);\n    }\n    \n    if (!original || typeof original !== 'string') {\n      return renderSeparatedValues(row, isLastStep);\n    }\n    \n    // If no separation has happened yet\n    if (!row.separated || row.separated.length === 0) {\n      return <span className=\"unprocessed-tag\">{original}</span>;\n    }\n    \n    if (row.type === 'bracket-separation') {\n      // For bracket separation, highlight brackets and content\n      let result = [];\n      let lastIndex = 0;\n      \n      // Sort match details by start index if available\n      const matchDetails = row.matchDetails || [];\n      const sortedMatches = [...matchDetails].sort((a, b) => a.startIndex - b.startIndex);\n      \n      sortedMatches.forEach((match, idx) => {\n        // Add unprocessed text before this match\n        if (match.startIndex > lastIndex) {\n          const unprocessedText = original.substring(lastIndex, match.startIndex);\n          result.push(\n            <span key={`unproc-${idx}`} className=\"unprocessed-tag\">{unprocessedText}</span>\n          );\n        }\n        \n        // Add the processed bracket content\n        result.push(\n          renderTag(match.value, 'bracket', `proc-${idx}`, isLastStep)\n        );\n        \n        lastIndex = match.endIndex;\n      });\n      \n      // Add any remaining text\n      if (lastIndex < original.length) {\n        result.push(\n          <span key=\"unproc-last\" className=\"unprocessed-tag\">\n            {original.substring(lastIndex)}\n          </span>\n        );\n      }\n      \n      return result;\n    }\n    \n    // Fallback to original display method\n    return renderSeparatedValues(row, isLastStep);\n  };\n  \n  // Render substring segmentation view with segmented parts\n  const renderSubstringSegmentationView = (row) => {\n    if (!row.previous || !row.previous.separated || row.previous.separated.length === 0) {\n      return <span className=\"no-values\">이전 단계의 값이 없습니다</span>;\n    }\n    \n    return (\n      <div className=\"substring-segmentation-view\">\n        {row.separated.map((item, idx) => {\n          const value = typeof item === 'string' ? item : item.value;\n          const segments = item.segments || [];\n          const source = item.source || 'text';\n          \n          // If there are segments, render them\n          if (segments.length > 1) {\n            return (\n              <div \n                key={idx} \n                className={`value-tag tag-container ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'}`}\n              >\n                <button \n                  className=\"whole-tag-button\" \n                  onClick={() => handleTagClick(value)}\n                  title=\"전체 태그 선택\"\n                >\n                  {value}\n                </button>\n                <div className=\"segments-container\">\n                  {segments.map((segment, segIdx) => (\n                    <button \n                      key={`seg-${segIdx}`} \n                      className={`segment-button ${segment.isSubstring ? 'segment-matched' : 'segment-unmatched'}`}\n                      onClick={(e) => handleSegmentClick(segment, e)}\n                    >\n                      {segment.text}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            );\n          }\n          \n          // No segments, render normally\n          return (\n            <button \n              key={idx} \n              className={`value-tag simple-tag-button ${source === 'bracket' ? 'bracket-source' : source === 'clean-text' ? 'text-source' : 'delimiter-source'}`}\n              onClick={() => handleTagClick(value)}\n            >\n              {value}\n            </button>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderSeparatedValues = (row, isLastStep) => {\n    if (!row.separated || row.separated.length === 0) {\n      return <span className=\"no-values\">추출된 값 없음</span>;\n    }\n\n    if (Array.isArray(row.separated) && row.separated.every(v => typeof v === 'string')) {\n      // Old format (just strings)\n      return row.separated.map((val, idx) => \n        renderTag(val, 'text', idx, isLastStep)\n      );\n    } \n    \n    // New format (with metadata)\n    return row.separated.map((item, idx) => \n      renderTag(item, item.source || 'text', idx, isLastStep)\n    );\n  };\n\n  return (\n    <div className=\"data-display\">\n      <table className=\"data-table\">\n        <tbody>\n          {flattenData(processedData).map((row, index) => (\n            <tr key={index}>\n              <td className=\"enhanced-view\">\n                {renderEnhancedView(row)}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DataDisplay;\n\n// Create a separate component for the grouping interface\nexport const GroupingPanel = ({ groupingData }) => {\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [groupNameInput, setGroupNameInput] = useState('');\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n  \n  if (!groupingData || !groupingData.uniqueValues || !Array.isArray(groupingData.uniqueValues)) {\n    return null;\n  }\n  \n  const { uniqueValues, groups } = groupingData;\n  \n  // Handle segmentation value click to add to selected group\n  const handleValueClick = (value) => {\n    if (!selectedGroupId) {\n      alert('먼저 그룹을 선택해주세요');\n      return;\n    }\n    \n    if (groupingData.onAddValueToGroup) {\n      groupingData.onAddValueToGroup(selectedGroupId, value);\n    }\n  };\n  \n  return (\n    <div className=\"grouping-panel\">\n      <div className=\"grouping-interface\">\n        <div className=\"grouping-layout\">\n          {/* Left side - Segmentation values */}\n          <div className=\"segmentation-values-container\">\n            <h4>분절값 목록</h4>\n            <div className=\"segmentation-values-list\">\n              {uniqueValues.map((value, index) => {\n                // Skip values that are already in any group\n                const isInAnyGroup = groups && groups.some(group => \n                  group.items && group.items.includes(value)\n                );\n                \n                if (isInAnyGroup) {\n                  return null;\n                }\n                \n                return (\n                  <div \n                    key={index} \n                    className=\"segmentation-value-item clickable\"\n                    onClick={() => handleValueClick(value)}\n                    title=\"클릭하여 선택된 그룹에 추가\"\n                  >\n                    {value}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          \n          {/* Right side - Group boxes */}\n          <div className=\"group-boxes-container\">\n            <h4>그룹</h4>\n            <div className=\"group-boxes-list\">\n              {groups && groups.map((group) => (\n                <div \n                  key={group.id} \n                  className={`group-box ${selectedGroupId === group.id ? 'selected-group' : ''}`}\n                  onClick={() => setSelectedGroupId(group.id)}\n                >\n                  {editingGroupId === group.id ? (\n                    <div className=\"group-name-edit\">\n                      <input \n                        type=\"text\" \n                        value={groupNameInput} \n                        onChange={(e) => setGroupNameInput(e.target.value)}\n                        onBlur={() => {\n                          if (groupingData.onUpdateGroupName) {\n                            groupingData.onUpdateGroupName(group.id, groupNameInput);\n                          }\n                          setEditingGroupId(null);\n                        }}\n                        autoFocus\n                        onClick={(e) => e.stopPropagation()} // Prevent group selection when editing name\n                      />\n                    </div>\n                  ) : (\n                    <div \n                      className=\"group-box-name\"\n                      onClick={(e) => {\n                        e.stopPropagation(); // Prevent group selection when clicking on name to edit\n                        setEditingGroupId(group.id);\n                        setGroupNameInput(group.name);\n                      }}\n                    >\n                      {group.name}\n                    </div>\n                  )}\n                  <div className=\"group-box-content\">\n                    {group.items && group.items.length > 0 ? (\n                      group.items.map((item, idx) => (\n                        <div \n                          key={idx} \n                          className=\"group-item\"\n                          onClick={(e) => {\n                            e.stopPropagation(); // Prevent group selection when clicking item\n                            if (groupingData.onRemoveValueFromGroup) {\n                              groupingData.onRemoveValueFromGroup(group.id, item);\n                            }\n                          }}\n                          title=\"클릭하여 그룹에서 제거\"\n                        >\n                          {item}\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"empty-group\">빈 그룹</div>\n                    )}\n                  </div>\n                </div>\n              ))}\n              \n              {/* Add new group button */}\n              <button \n                className=\"add-group-button\"\n                onClick={() => {\n                  if (groupingData.onAddGroup) {\n                    groupingData.onAddGroup();\n                  }\n                }}\n              >\n                + 새 그룹 추가\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}