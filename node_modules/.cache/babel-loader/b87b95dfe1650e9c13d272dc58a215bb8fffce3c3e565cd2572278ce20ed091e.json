{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/SegmentationGrouping.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SegmentationGrouping = ({\n  config,\n  onUpdateConfig,\n  onAddGroup,\n  onUpdateGroupName,\n  segmentationData\n}) => {\n  _s();\n  const [replaceNumbers, setReplaceNumbers] = useState(config.replaceNumbers || false);\n\n  // Process segmentation data with number replacement if enabled\n  const processedSegmentationData = useMemo(() => {\n    if (!segmentationData) return null;\n\n    // If replaceNumbers is enabled, replace numeric values with \\d+\n    if (replaceNumbers) {\n      const processedData = {\n        ...segmentationData\n      };\n      if (processedData.segments) {\n        processedData.segments = processedData.segments.map(segment => {\n          if (segment && /^\\d+$/.test(segment.value)) {\n            return {\n              ...segment,\n              value: '\\\\d+',\n              originalValue: segment.value\n            };\n          }\n          return segment;\n        });\n      }\n      return processedData;\n    }\n    return segmentationData;\n  }, [segmentationData, replaceNumbers]);\n\n  // Define groups handling logic\n  const handleAddGroup = () => {\n    if (onAddGroup) onAddGroup();\n  };\n  const handleGroupNameChange = (groupId, newName) => {\n    if (onUpdateGroupName) onUpdateGroupName(groupId, newName);\n  };\n  const handleToggleReplaceNumbers = () => {\n    const newValue = !replaceNumbers;\n    setReplaceNumbers(newValue);\n    onUpdateConfig({\n      replaceNumbers: newValue\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"segmentation-grouping\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouping-options\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: replaceNumbers,\n            onChange: handleToggleReplaceNumbers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), \"\\uC22B\\uC790 \\uD328\\uD134 \\uCE58\\uD658 (\\\\d+)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option-description\",\n          children: \"\\uC22B\\uC790\\uAC12\\uC744 \\\\d+ \\uD328\\uD134\\uC73C\\uB85C \\uCE58\\uD658\\uD558\\uC5EC \\uADF8\\uB8F9\\uD654\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uADF8\\uB8F9 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), config.groups && config.groups.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-list\",\n        children: config.groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: group.name,\n            onChange: e => handleGroupNameChange(group.id, e.target.value),\n            placeholder: \"\\uADF8\\uB8F9 \\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-items\",\n            children: group.items && group.items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"group-item-tag\",\n              children: item\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC815\\uC758\\uB41C \\uADF8\\uB8F9\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-group-btn\",\n        onClick: handleAddGroup,\n        children: \"+ \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SegmentationGrouping, \"2isCBkXA5S+eqV1PmoedfBiAxSM=\");\n_c = SegmentationGrouping;\nexport default SegmentationGrouping;\nvar _c;\n$RefreshReg$(_c, \"SegmentationGrouping\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","SegmentationGrouping","config","onUpdateConfig","onAddGroup","onUpdateGroupName","segmentationData","_s","replaceNumbers","setReplaceNumbers","processedSegmentationData","processedData","segments","map","segment","test","value","originalValue","handleAddGroup","handleGroupNameChange","groupId","newName","handleToggleReplaceNumbers","newValue","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","groups","length","group","name","e","id","target","placeholder","items","item","idx","onClick","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/SegmentationGrouping.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\n\nconst SegmentationGrouping = ({ \n  config, \n  onUpdateConfig, \n  onAddGroup, \n  onUpdateGroupName,\n  segmentationData\n}) => {\n  const [replaceNumbers, setReplaceNumbers] = useState(config.replaceNumbers || false);\n  \n  // Process segmentation data with number replacement if enabled\n  const processedSegmentationData = useMemo(() => {\n    if (!segmentationData) return null;\n    \n    // If replaceNumbers is enabled, replace numeric values with \\d+\n    if (replaceNumbers) {\n      const processedData = { ...segmentationData };\n      \n      if (processedData.segments) {\n        processedData.segments = processedData.segments.map(segment => {\n          if (segment && /^\\d+$/.test(segment.value)) {\n            return { ...segment, value: '\\\\d+', originalValue: segment.value };\n          }\n          return segment;\n        });\n      }\n      \n      return processedData;\n    }\n    \n    return segmentationData;\n  }, [segmentationData, replaceNumbers]);\n  \n  // Define groups handling logic\n  const handleAddGroup = () => {\n    if (onAddGroup) onAddGroup();\n  };\n\n  const handleGroupNameChange = (groupId, newName) => {\n    if (onUpdateGroupName) onUpdateGroupName(groupId, newName);\n  };\n\n  const handleToggleReplaceNumbers = () => {\n    const newValue = !replaceNumbers;\n    setReplaceNumbers(newValue);\n    onUpdateConfig({ replaceNumbers: newValue });\n  };\n\n  return (\n    <div className=\"segmentation-grouping\">\n      <div className=\"grouping-options\">\n        <div className=\"option-item\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={replaceNumbers}\n              onChange={handleToggleReplaceNumbers}\n            />\n            숫자 패턴 치환 (\\d+)\n          </label>\n          <p className=\"option-description\">숫자값을 \\d+ 패턴으로 치환하여 그룹화합니다.</p>\n        </div>\n      </div>\n\n      <div className=\"groups-container\">\n        <h4>그룹 목록</h4>\n        {config.groups && config.groups.length > 0 ? (\n          <div className=\"group-list\">\n            {config.groups.map(group => (\n              <div key={group.id} className=\"group-item\">\n                <input\n                  type=\"text\"\n                  value={group.name}\n                  onChange={(e) => handleGroupNameChange(group.id, e.target.value)}\n                  placeholder=\"그룹 이름\"\n                />\n                <div className=\"group-items\">\n                  {group.items && group.items.map((item, idx) => (\n                    <span key={idx} className=\"group-item-tag\">{item}</span>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>정의된 그룹이 없습니다.</p>\n        )}\n        <button className=\"add-group-btn\" onClick={handleAddGroup}>\n          + 그룹 추가\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SegmentationGrouping; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}