{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupingSheet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './GroupingSheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupingSheet = ({\n  segmentValues = []\n}) => {\n  _s();\n  // 그룹 상태 관리\n  const [groups, setGroups] = useState([{\n    id: 'unprocessed',\n    name: '미처리',\n    items: [],\n    isDefault: true\n  }]);\n\n  // 값들의 그룹 할당 상태 관리\n  const [valueGroups, setValueGroups] = useState({});\n\n  // 새 그룹명 입력 상태\n  const [newGroupName, setNewGroupName] = useState('');\n\n  // 드래그 상태 관리\n  const [dragValue, setDragValue] = useState(null);\n  const [dropTarget, setDropTarget] = useState(null);\n\n  // 컴포넌트 마운트시 미처리 그룹에 모든 분절값 추가\n  useEffect(() => {\n    if (segmentValues.length > 0) {\n      // 초기 상태에서 모든 값은 미처리 그룹에 할당\n      const initialValueGroups = {};\n      segmentValues.forEach(value => {\n        initialValueGroups[value] = 'unprocessed';\n      });\n      setValueGroups(initialValueGroups);\n\n      // 미처리 그룹에 값 할당\n      setGroups(prevGroups => {\n        const updatedGroups = [...prevGroups];\n        const unprocessedGroup = updatedGroups.find(g => g.id === 'unprocessed');\n        if (unprocessedGroup) {\n          unprocessedGroup.items = [...segmentValues];\n        }\n        return updatedGroups;\n      });\n    }\n  }, [segmentValues]);\n\n  // 새 그룹 추가 함수\n  const addNewGroup = () => {\n    if (!newGroupName.trim()) return;\n    const newGroupId = `group-${Date.now()}`;\n    const newGroup = {\n      id: newGroupId,\n      name: newGroupName.trim(),\n      items: [],\n      isDefault: false\n    };\n    setGroups([...groups, newGroup]);\n    setNewGroupName('');\n  };\n\n  // 값을 그룹에 할당하는 함수\n  const assignToGroup = (value, groupId) => {\n    // 현재 할당된 그룹에서 제거\n    const currentGroupId = valueGroups[value];\n    if (currentGroupId) {\n      setGroups(prevGroups => {\n        return prevGroups.map(group => {\n          if (group.id === currentGroupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item !== value)\n            };\n          }\n          return group;\n        });\n      });\n    }\n\n    // 새 그룹에 추가\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            items: [...group.items, value]\n          };\n        }\n        return group;\n      });\n    });\n\n    // 값의 그룹 매핑 업데이트\n    setValueGroups({\n      ...valueGroups,\n      [value]: groupId\n    });\n  };\n\n  // 드래그 앤 드롭 핸들러\n  const handleDragStart = (e, value) => {\n    e.dataTransfer.setData('text/plain', value);\n    setDragValue(value);\n\n    // 드래그 중인 항목 스타일 설정\n    if (e.target) {\n      e.target.classList.add('dragging');\n    }\n\n    // 드래그 이미지 설정\n    const dragImage = document.createElement('div');\n    dragImage.textContent = value;\n    dragImage.style.background = '#f0f0f0';\n    dragImage.style.padding = '8px 12px';\n    dragImage.style.borderRadius = '4px';\n    dragImage.style.boxShadow = '0 2px 6px rgba(0,0,0,0.2)';\n    dragImage.style.position = 'absolute';\n    dragImage.style.top = '-1000px';\n    document.body.appendChild(dragImage);\n    e.dataTransfer.setDragImage(dragImage, 0, 0);\n\n    // 드래그 이미지 제거 타이머 설정\n    setTimeout(() => {\n      document.body.removeChild(dragImage);\n    }, 0);\n  };\n  const handleDragEnd = e => {\n    setDragValue(null);\n    setDropTarget(null);\n\n    // 드래그 중인 항목 스타일 제거\n    if (e.target) {\n      e.target.classList.remove('dragging');\n    }\n\n    // 모든 드롭 대상 스타일 제거\n    document.querySelectorAll('.drop-target').forEach(el => {\n      el.classList.remove('drop-target');\n    });\n  };\n  const handleDragOver = (e, groupId) => {\n    e.preventDefault();\n    setDropTarget(groupId);\n\n    // 드롭 대상 스타일 적용\n    const groupColumn = e.currentTarget;\n    if (groupColumn && !groupColumn.classList.contains('drop-target')) {\n      document.querySelectorAll('.drop-target').forEach(el => {\n        el.classList.remove('drop-target');\n      });\n      groupColumn.classList.add('drop-target');\n    }\n  };\n  const handleDragLeave = e => {\n    // 드롭 대상에서 벗어나면 스타일 제거\n    const groupColumn = e.currentTarget;\n    if (groupColumn) {\n      groupColumn.classList.remove('drop-target');\n    }\n  };\n  const handleDrop = (e, groupId) => {\n    e.preventDefault();\n    const value = e.dataTransfer.getData('text/plain');\n    if (value && groupId) {\n      assignToGroup(value, groupId);\n    }\n    setDragValue(null);\n    setDropTarget(null);\n\n    // 드롭 대상 스타일 제거\n    document.querySelectorAll('.drop-target').forEach(el => {\n      el.classList.remove('drop-target');\n    });\n  };\n\n  // 그룹 삭제 함수\n  const deleteGroup = groupId => {\n    if (groupId === 'unprocessed') return; // 미처리 그룹은 삭제 불가\n\n    // 해당 그룹에 있던 모든 값을 미처리로 이동\n    const groupToDelete = groups.find(g => g.id === groupId);\n    if (groupToDelete) {\n      groupToDelete.items.forEach(value => {\n        assignToGroup(value, 'unprocessed');\n      });\n    }\n\n    // 그룹 삭제\n    setGroups(groups.filter(g => g.id !== groupId));\n  };\n\n  // 그룹명 변경 함수\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  const startEditingGroupName = group => {\n    if (group.isDefault) return; // 미처리 그룹명은 변경 불가\n    setEditingGroupId(group.id);\n    setEditingGroupName(group.name);\n  };\n  const saveGroupName = () => {\n    if (!editingGroupName.trim()) return;\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === editingGroupId) {\n          return {\n            ...group,\n            name: editingGroupName.trim()\n          };\n        }\n        return group;\n      });\n    });\n    setEditingGroupId(null);\n    setEditingGroupName('');\n  };\n\n  // 키보드 단축키 처리\n  const handleKeyDown = e => {\n    // Esc 키를 누르면 드래그 취소\n    if (e.key === 'Escape' && dragValue) {\n      setDragValue(null);\n      document.querySelectorAll('.dragging').forEach(el => {\n        el.classList.remove('dragging');\n      });\n      document.querySelectorAll('.drop-target').forEach(el => {\n        el.classList.remove('drop-target');\n      });\n    }\n  };\n\n  // 키보드 이벤트 리스너 등록\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dragValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouping-sheet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-group-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newGroupName,\n        onChange: e => setNewGroupName(e.target.value),\n        placeholder: \"\\uC0C8 \\uADF8\\uB8F9 \\uC774\\uB984\",\n        className: \"new-group-input\",\n        onKeyDown: e => e.key === 'Enter' && addNewGroup()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-group-btn\",\n        onClick: addNewGroup,\n        disabled: !newGroupName.trim(),\n        children: \"\\uC0C8 \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"grouping-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: groups.map(group => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"group-header\",\n              children: editingGroupId === group.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-name-edit\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editingGroupName,\n                  onChange: e => setEditingGroupName(e.target.value),\n                  onBlur: saveGroupName,\n                  onKeyDown: e => e.key === 'Enter' && saveGroupName(),\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"group-name\",\n                  onClick: () => startEditingGroupName(group),\n                  title: group.isDefault ? \"미처리 그룹명은 변경할 수 없습니다\" : \"클릭하여 그룹명 변경\",\n                  children: [group.name, \" (\", group.items.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this), !group.isDefault && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-group-btn\",\n                  onClick: () => deleteGroup(group.id),\n                  title: \"\\uADF8\\uB8F9 \\uC0AD\\uC81C\",\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this)\n            }, group.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: groups.map(group => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `group-column ${dropTarget === group.id ? 'drop-target' : ''}`,\n              onDragOver: e => handleDragOver(e, group.id),\n              onDragLeave: handleDragLeave,\n              onDrop: e => handleDrop(e, group.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-items\",\n                children: [group.items.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `group-item ${dragValue === value ? 'dragging' : ''}`,\n                  draggable: true,\n                  onDragStart: e => handleDragStart(e, value),\n                  onDragEnd: handleDragEnd,\n                  children: value\n                }, `${group.id}-${value}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this)), group.items.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"empty-group-message\",\n                  children: \"\\uD56D\\uBAA9\\uC744 \\uC774 \\uADF8\\uB8F9\\uC73C\\uB85C \\uB4DC\\uB798\\uADF8\\uD558\\uC138\\uC694\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)\n            }, group.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grouping-help\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD56D\\uBAA9\\uC744 \\uB2E4\\uB978 \\uADF8\\uB8F9\\uC73C\\uB85C \\uB4DC\\uB798\\uADF8\\uD558\\uC5EC \\uC774\\uB3D9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC0C8 \\uADF8\\uB8F9\\uC744 \\uCD94\\uAC00\\uD558\\uB824\\uBA74 \\uC0C1\\uB2E8\\uC758 \\uC785\\uB825\\uB780\\uC744 \\uC0AC\\uC6A9\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupingSheet, \"WoQ4IvSRh6UP4H4ofjUCIkwCRGg=\");\n_c = GroupingSheet;\nexport default GroupingSheet;\nvar _c;\n$RefreshReg$(_c, \"GroupingSheet\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","GroupingSheet","segmentValues","_s","groups","setGroups","id","name","items","isDefault","valueGroups","setValueGroups","newGroupName","setNewGroupName","dragValue","setDragValue","dropTarget","setDropTarget","length","initialValueGroups","forEach","value","prevGroups","updatedGroups","unprocessedGroup","find","g","addNewGroup","trim","newGroupId","Date","now","newGroup","assignToGroup","groupId","currentGroupId","map","group","filter","item","handleDragStart","e","dataTransfer","setData","target","classList","add","dragImage","document","createElement","textContent","style","background","padding","borderRadius","boxShadow","position","top","body","appendChild","setDragImage","setTimeout","removeChild","handleDragEnd","remove","querySelectorAll","el","handleDragOver","preventDefault","groupColumn","currentTarget","contains","handleDragLeave","handleDrop","getData","deleteGroup","groupToDelete","editingGroupId","setEditingGroupId","editingGroupName","setEditingGroupName","startEditingGroupName","saveGroupName","handleKeyDown","key","window","addEventListener","removeEventListener","className","children","type","onChange","placeholder","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onBlur","autoFocus","title","onDragOver","onDragLeave","onDrop","draggable","onDragStart","onDragEnd","_c","$RefreshReg$"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/components/browse/GroupingSheet.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './GroupingSheet.css';\n\nconst GroupingSheet = ({ segmentValues = [] }) => {\n  // 그룹 상태 관리\n  const [groups, setGroups] = useState([\n    { id: 'unprocessed', name: '미처리', items: [], isDefault: true }\n  ]);\n  \n  // 값들의 그룹 할당 상태 관리\n  const [valueGroups, setValueGroups] = useState({});\n  \n  // 새 그룹명 입력 상태\n  const [newGroupName, setNewGroupName] = useState('');\n  \n  // 드래그 상태 관리\n  const [dragValue, setDragValue] = useState(null);\n  const [dropTarget, setDropTarget] = useState(null);\n  \n  // 컴포넌트 마운트시 미처리 그룹에 모든 분절값 추가\n  useEffect(() => {\n    if (segmentValues.length > 0) {\n      // 초기 상태에서 모든 값은 미처리 그룹에 할당\n      const initialValueGroups = {};\n      segmentValues.forEach(value => {\n        initialValueGroups[value] = 'unprocessed';\n      });\n      \n      setValueGroups(initialValueGroups);\n      \n      // 미처리 그룹에 값 할당\n      setGroups(prevGroups => {\n        const updatedGroups = [...prevGroups];\n        const unprocessedGroup = updatedGroups.find(g => g.id === 'unprocessed');\n        if (unprocessedGroup) {\n          unprocessedGroup.items = [...segmentValues];\n        }\n        return updatedGroups;\n      });\n    }\n  }, [segmentValues]);\n  \n  // 새 그룹 추가 함수\n  const addNewGroup = () => {\n    if (!newGroupName.trim()) return;\n    \n    const newGroupId = `group-${Date.now()}`;\n    const newGroup = {\n      id: newGroupId,\n      name: newGroupName.trim(),\n      items: [],\n      isDefault: false\n    };\n    \n    setGroups([...groups, newGroup]);\n    setNewGroupName('');\n  };\n  \n  // 값을 그룹에 할당하는 함수\n  const assignToGroup = (value, groupId) => {\n    // 현재 할당된 그룹에서 제거\n    const currentGroupId = valueGroups[value];\n    if (currentGroupId) {\n      setGroups(prevGroups => {\n        return prevGroups.map(group => {\n          if (group.id === currentGroupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item !== value)\n            };\n          }\n          return group;\n        });\n      });\n    }\n    \n    // 새 그룹에 추가\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            items: [...group.items, value]\n          };\n        }\n        return group;\n      });\n    });\n    \n    // 값의 그룹 매핑 업데이트\n    setValueGroups({\n      ...valueGroups,\n      [value]: groupId\n    });\n  };\n  \n  // 드래그 앤 드롭 핸들러\n  const handleDragStart = (e, value) => {\n    e.dataTransfer.setData('text/plain', value);\n    setDragValue(value);\n    \n    // 드래그 중인 항목 스타일 설정\n    if (e.target) {\n      e.target.classList.add('dragging');\n    }\n    \n    // 드래그 이미지 설정\n    const dragImage = document.createElement('div');\n    dragImage.textContent = value;\n    dragImage.style.background = '#f0f0f0';\n    dragImage.style.padding = '8px 12px';\n    dragImage.style.borderRadius = '4px';\n    dragImage.style.boxShadow = '0 2px 6px rgba(0,0,0,0.2)';\n    dragImage.style.position = 'absolute';\n    dragImage.style.top = '-1000px';\n    document.body.appendChild(dragImage);\n    \n    e.dataTransfer.setDragImage(dragImage, 0, 0);\n    \n    // 드래그 이미지 제거 타이머 설정\n    setTimeout(() => {\n      document.body.removeChild(dragImage);\n    }, 0);\n  };\n  \n  const handleDragEnd = (e) => {\n    setDragValue(null);\n    setDropTarget(null);\n    \n    // 드래그 중인 항목 스타일 제거\n    if (e.target) {\n      e.target.classList.remove('dragging');\n    }\n    \n    // 모든 드롭 대상 스타일 제거\n    document.querySelectorAll('.drop-target').forEach(el => {\n      el.classList.remove('drop-target');\n    });\n  };\n  \n  const handleDragOver = (e, groupId) => {\n    e.preventDefault();\n    setDropTarget(groupId);\n    \n    // 드롭 대상 스타일 적용\n    const groupColumn = e.currentTarget;\n    if (groupColumn && !groupColumn.classList.contains('drop-target')) {\n      document.querySelectorAll('.drop-target').forEach(el => {\n        el.classList.remove('drop-target');\n      });\n      groupColumn.classList.add('drop-target');\n    }\n  };\n  \n  const handleDragLeave = (e) => {\n    // 드롭 대상에서 벗어나면 스타일 제거\n    const groupColumn = e.currentTarget;\n    if (groupColumn) {\n      groupColumn.classList.remove('drop-target');\n    }\n  };\n  \n  const handleDrop = (e, groupId) => {\n    e.preventDefault();\n    const value = e.dataTransfer.getData('text/plain');\n    if (value && groupId) {\n      assignToGroup(value, groupId);\n    }\n    \n    setDragValue(null);\n    setDropTarget(null);\n    \n    // 드롭 대상 스타일 제거\n    document.querySelectorAll('.drop-target').forEach(el => {\n      el.classList.remove('drop-target');\n    });\n  };\n  \n  // 그룹 삭제 함수\n  const deleteGroup = (groupId) => {\n    if (groupId === 'unprocessed') return; // 미처리 그룹은 삭제 불가\n    \n    // 해당 그룹에 있던 모든 값을 미처리로 이동\n    const groupToDelete = groups.find(g => g.id === groupId);\n    if (groupToDelete) {\n      groupToDelete.items.forEach(value => {\n        assignToGroup(value, 'unprocessed');\n      });\n    }\n    \n    // 그룹 삭제\n    setGroups(groups.filter(g => g.id !== groupId));\n  };\n  \n  // 그룹명 변경 함수\n  const [editingGroupId, setEditingGroupId] = useState(null);\n  const [editingGroupName, setEditingGroupName] = useState('');\n  \n  const startEditingGroupName = (group) => {\n    if (group.isDefault) return; // 미처리 그룹명은 변경 불가\n    setEditingGroupId(group.id);\n    setEditingGroupName(group.name);\n  };\n  \n  const saveGroupName = () => {\n    if (!editingGroupName.trim()) return;\n    \n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        if (group.id === editingGroupId) {\n          return {\n            ...group,\n            name: editingGroupName.trim()\n          };\n        }\n        return group;\n      });\n    });\n    \n    setEditingGroupId(null);\n    setEditingGroupName('');\n  };\n  \n  // 키보드 단축키 처리\n  const handleKeyDown = (e) => {\n    // Esc 키를 누르면 드래그 취소\n    if (e.key === 'Escape' && dragValue) {\n      setDragValue(null);\n      document.querySelectorAll('.dragging').forEach(el => {\n        el.classList.remove('dragging');\n      });\n      document.querySelectorAll('.drop-target').forEach(el => {\n        el.classList.remove('drop-target');\n      });\n    }\n  };\n  \n  // 키보드 이벤트 리스너 등록\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dragValue]);\n  \n  return (\n    <div className=\"grouping-sheet\">\n      {/* 새 그룹 추가 영역 */}\n      <div className=\"add-group-area\">\n        <input\n          type=\"text\"\n          value={newGroupName}\n          onChange={(e) => setNewGroupName(e.target.value)}\n          placeholder=\"새 그룹 이름\"\n          className=\"new-group-input\"\n          onKeyDown={(e) => e.key === 'Enter' && addNewGroup()}\n        />\n        <button \n          className=\"add-group-btn\"\n          onClick={addNewGroup}\n          disabled={!newGroupName.trim()}\n        >\n          새 그룹 추가\n        </button>\n      </div>\n      \n      {/* 엑셀 시트 스타일의 테이블 */}\n      <div className=\"sheet-container\">\n        <table className=\"grouping-table\">\n          <thead>\n            <tr>\n              {groups.map(group => (\n                <th key={group.id} className=\"group-header\">\n                  {editingGroupId === group.id ? (\n                    <div className=\"group-name-edit\">\n                      <input\n                        type=\"text\"\n                        value={editingGroupName}\n                        onChange={(e) => setEditingGroupName(e.target.value)}\n                        onBlur={saveGroupName}\n                        onKeyDown={(e) => e.key === 'Enter' && saveGroupName()}\n                        autoFocus\n                      />\n                    </div>\n                  ) : (\n                    <div className=\"group-title\">\n                      <span \n                        className=\"group-name\"\n                        onClick={() => startEditingGroupName(group)}\n                        title={group.isDefault ? \"미처리 그룹명은 변경할 수 없습니다\" : \"클릭하여 그룹명 변경\"}\n                      >\n                        {group.name} ({group.items.length})\n                      </span>\n                      {!group.isDefault && (\n                        <button \n                          className=\"delete-group-btn\"\n                          onClick={() => deleteGroup(group.id)}\n                          title=\"그룹 삭제\"\n                        >\n                          ✕\n                        </button>\n                      )}\n                    </div>\n                  )}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {groups.map(group => (\n                <td \n                  key={group.id}\n                  className={`group-column ${dropTarget === group.id ? 'drop-target' : ''}`}\n                  onDragOver={(e) => handleDragOver(e, group.id)}\n                  onDragLeave={handleDragLeave}\n                  onDrop={(e) => handleDrop(e, group.id)}\n                >\n                  <div className=\"group-items\">\n                    {group.items.map(value => (\n                      <div \n                        key={`${group.id}-${value}`}\n                        className={`group-item ${dragValue === value ? 'dragging' : ''}`}\n                        draggable\n                        onDragStart={(e) => handleDragStart(e, value)}\n                        onDragEnd={handleDragEnd}\n                      >\n                        {value}\n                      </div>\n                    ))}\n                    {group.items.length === 0 && (\n                      <div className=\"empty-group-message\">\n                        항목을 이 그룹으로 드래그하세요\n                      </div>\n                    )}\n                  </div>\n                </td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      \n      {/* 도움말 */}\n      <div className=\"grouping-help\">\n        <p>\n          항목을 다른 그룹으로 드래그하여 이동할 수 있습니다. 새 그룹을 추가하려면 상단의 입력란을 사용하세요.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupingSheet; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}