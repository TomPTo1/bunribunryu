{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderCombinationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { fetchHeaderCombinationList, fetchHeaderList, fetchHeaderSimilarityList } from '../services/api';\nimport MiningView from './MiningView';\nimport './Column.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderCombinationList = ({\n  channel,\n  selectedHeader,\n  onCombinationSelect,\n  selectedCombination\n}) => {\n  _s();\n  const [combinationHeaders, setCombinationHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('combination'); // 'combination' or 'mining'\n  const [testMode, setTestMode] = useState(false); // Add test mode state\n\n  // New state for filtering and sorting\n  const [uniqueItems, setUniqueItems] = useState([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [excludedFilters, setExcludedFilters] = useState([]);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  // State for right-click search results\n  const [searchResults, setSearchResults] = useState(null);\n  const [similarityResults, setSimilarityResults] = useState(null);\n  const [rightClickedHeader, setRightClickedHeader] = useState('');\n  const [searchLoading, setSearchLoading] = useState(false);\n  useEffect(() => {\n    const getCombinationHeaders = async () => {\n      // Test mode can work without channel or header selection\n      if (!testMode && (!channel || !selectedHeader)) return;\n      setLoading(true);\n      try {\n        if (testMode) {\n          // Use sample data in test mode\n          const response = await import('../sample_data/header_combination.json');\n          console.log('Using sample data for combination headers:', response);\n          setCombinationHeaders(response.list || []);\n        } else if (channel && selectedHeader) {\n          // Use API in normal mode only if channel and header are selected\n          const headers = Array.isArray(selectedHeader) ? selectedHeader : [selectedHeader];\n          const response = await fetchHeaderCombinationList(channel, headers);\n          console.log('Combination headers response:', response);\n          setCombinationHeaders(response.list || []);\n        } else {\n          // Clear data if test mode is turned off and no channel/header is selected\n          setCombinationHeaders([]);\n        }\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCombinationHeaders();\n  }, [channel, selectedHeader, testMode]);\n\n  // Extract unique items and count their frequency when combinationHeaders changes\n  useEffect(() => {\n    if (combinationHeaders.length === 0) {\n      setUniqueItems([]);\n      return;\n    }\n    const itemFrequency = {};\n\n    // Count frequency of each unique item\n    combinationHeaders.forEach(item => {\n      if (!item.header_group) return;\n      const headers = item.header_group.split('|');\n      headers.forEach(header => {\n        if (header) {\n          if (itemFrequency[header]) {\n            itemFrequency[header]++;\n          } else {\n            itemFrequency[header] = 1;\n          }\n        }\n      });\n    });\n\n    // Convert to array and sort by frequency (descending)\n    const sortedItems = Object.entries(itemFrequency).map(([name, count]) => ({\n      name,\n      count\n    })).sort((a, b) => b.count - a.count);\n    setUniqueItems(sortedItems);\n  }, [combinationHeaders]);\n  const handleCombinationClick = combination => {\n    if (onCombinationSelect) {\n      onCombinationSelect(combination);\n    }\n  };\n\n  // Updated function to toggle filter items in cycle: none -> AND -> NOT -> none\n  const toggleFilter = item => {\n    // Check current state of the item\n    const isActive = activeFilters.includes(item);\n    const isExcluded = excludedFilters.includes(item);\n    if (!isActive && !isExcluded) {\n      // First click: Add to active filters (AND)\n      setActiveFilters([...activeFilters, item]);\n    } else if (isActive) {\n      // Second click: Move from active to excluded (NOT)\n      setActiveFilters(activeFilters.filter(filter => filter !== item));\n      setExcludedFilters([...excludedFilters, item]);\n    } else {\n      // Third click: Remove from excluded (back to none)\n      setExcludedFilters(excludedFilters.filter(filter => filter !== item));\n    }\n  };\n\n  // Reset all filters\n  const resetFilters = () => {\n    setActiveFilters([]);\n    setExcludedFilters([]);\n  };\n\n  // Function to handle right click on a header\n  const handleHeaderRightClick = async (header, e) => {\n    e.preventDefault(); // Prevent default context menu\n    e.stopPropagation();\n    if (!channel) return;\n    setRightClickedHeader(header);\n    setSearchLoading(true);\n    try {\n      // Fetch header list with search\n      const headerListResponse = await fetchHeaderList(channel, 100, '', header);\n      console.log('Header search results:', headerListResponse);\n      setSearchResults(headerListResponse.list || []);\n\n      // Fetch similarity group\n      const similarityResponse = await fetchHeaderSimilarityList(channel, header);\n      console.log('Similarity group results:', similarityResponse);\n      setSimilarityResults(similarityResponse.list || []);\n    } catch (err) {\n      console.error('Error fetching header data:', err);\n      setSearchResults([]);\n      setSimilarityResults([]);\n    } finally {\n      setSearchLoading(false);\n    }\n  };\n\n  // Function to clear search results\n  const clearSearchResults = () => {\n    setSearchResults(null);\n    setSimilarityResults(null);\n    setRightClickedHeader('');\n  };\n\n  // Function to render header_group as tags\n  const renderHeaderGroupAsTags = headerGroup => {\n    if (!headerGroup) return null;\n    const headers = headerGroup.split('|');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-tags\",\n      children: headers.map((header, index) => {\n        const isActive = activeFilters.includes(header);\n        const isExcluded = excludedFilters.includes(header);\n        const className = `similarity-tag ${isActive ? 'active' : ''} ${isExcluded ? 'filtered-out' : ''}`;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: className,\n          onClick: e => {\n            e.stopPropagation();\n            toggleFilter(header);\n          },\n          onContextMenu: e => handleHeaderRightClick(header, e),\n          children: header\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  const toggleTestMode = () => {\n    const newTestMode = !testMode;\n    setTestMode(newTestMode);\n\n    // Log the test mode state change\n    console.log(`Test mode ${newTestMode ? 'enabled' : 'disabled'}`);\n\n    // Clear combination data when turning off test mode if no channel/header selected\n    if (!newTestMode && (!channel || !selectedHeader)) {\n      setCombinationHeaders([]);\n    }\n  };\n\n  // Filter and sort the combination headers\n  const filteredAndSortedCombinations = useMemo(() => {\n    if (!combinationHeaders.length) return [];\n\n    // Filter combinations based on activeFilters and excludedFilters\n    let filtered = [...combinationHeaders];\n    if (activeFilters.length > 0 || excludedFilters.length > 0) {\n      filtered = combinationHeaders.filter(item => {\n        if (!item.header_group) return false;\n        const headers = item.header_group.split('|');\n\n        // Check if ALL active filters are included (AND logic)\n        const containsAllActive = activeFilters.length === 0 || activeFilters.every(filter => headers.includes(filter));\n\n        // Check if NONE of the excluded filters are included (NOT logic)\n        const containsNoExcluded = excludedFilters.length === 0 || !excludedFilters.some(filter => headers.includes(filter));\n        return containsAllActive && containsNoExcluded;\n      });\n    }\n\n    // Sort combinations: first by number of items (ascending), then alphabetically\n    return filtered.sort((a, b) => {\n      // Count items in each combination\n      const aCount = a.header_group ? a.header_group.split('|').length : 0;\n      const bCount = b.header_group ? b.header_group.split('|').length : 0;\n\n      // First sort by count (ascending)\n      if (aCount !== bCount) {\n        return aCount - bCount;\n      }\n\n      // Then sort alphabetically\n      return a.header_group.localeCompare(b.header_group);\n    });\n  }, [combinationHeaders, activeFilters, excludedFilters]);\n\n  // Render the right-click search results\n  const renderSearchResults = () => {\n    if (!searchResults && !similarityResults) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"'\", rightClickedHeader, \"' \\uAC80\\uC0C9 \\uACB0\\uACFC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearSearchResults,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), searchLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-loading\",\n          children: \"\\uAC80\\uC0C9 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-results-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"\\uD5E4\\uB354 \\uBAA9\\uB85D (\", (searchResults === null || searchResults === void 0 ? void 0 : searchResults.length) || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-results-list\",\n              children: searchResults && searchResults.length > 0 ? searchResults.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-result-item\",\n                children: [item.header, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-count\",\n                  children: [\"(\", item.count, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-results\",\n                children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC \\uC5C6\\uC74C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-results-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"\\uC720\\uC0AC\\uAD70 \\uBAA9\\uB85D (\", (similarityResults === null || similarityResults === void 0 ? void 0 : similarityResults.length) || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-results-list\",\n              children: similarityResults && similarityResults.length > 0 ? similarityResults.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-result-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-representative\",\n                  children: group.representative\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-members\",\n                  children: group.headers.map((header, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `group-member ${header === group.representative ? 'is-representative' : ''}`,\n                    children: header\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-results\",\n                children: \"\\uC720\\uC0AC\\uAD70 \\uACB0\\uACFC \\uC5C6\\uC74C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"column-title\",\n        children: !testMode && selectedHeader ? `헤더명 조합 목록: ${selectedHeader}` : '헤더명 조합 목록'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-mode-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Test Mode \", testMode ? 'ON' : 'OFF']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: testMode,\n            onChange: toggleTestMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'combination' ? 'active' : ''}`,\n        onClick: () => setActiveTab('combination'),\n        children: \"\\uC870\\uD569\\uBDF0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'mining' ? 'active' : ''}`,\n        onClick: () => setActiveTab('mining'),\n        children: \"\\uB9C8\\uC774\\uB2DD\\uBDF0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), activeTab === 'combination' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-header\",\n          onClick: () => setIsFilterOpen(!isFilterOpen),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD0DC\\uADF8 \\uD544\\uD130 \", activeFilters.length > 0 || excludedFilters.length > 0 ? `(${activeFilters.length + excludedFilters.length})` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-toggle-btn\",\n            children: isFilterOpen ? '▲' : '▼'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), isFilterOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD074\\uB9AD: \\uD3EC\\uD568(AND) \\u2192 \\uC81C\\uC678(NOT) \\u2192 \\uD574\\uC81C / \\uC6B0\\uD074\\uB9AD: \\uD5E4\\uB354 \\uAC80\\uC0C9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this), (activeFilters.length > 0 || excludedFilters.length > 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reset-filters-btn\",\n              onClick: resetFilters,\n              children: \"\\uCD08\\uAE30\\uD654\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-tags\",\n            children: uniqueItems.map((item, index) => {\n              const isActive = activeFilters.includes(item.name);\n              const isExcluded = excludedFilters.includes(item.name);\n              const className = `filter-tag ${isActive ? 'active' : ''} ${isExcluded ? 'excluded' : ''}`;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: className,\n                onClick: () => toggleFilter(item.name),\n                onContextMenu: e => handleHeaderRightClick(item.name, e),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag-text\",\n                  children: [item.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag-count\",\n                    children: [\"(\", item.count, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"\\uC5D0\\uB7EC: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }, this) : filteredAndSortedCombinations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-count\",\n          children: [filteredAndSortedCombinations.length, \"\\uAC1C \\uC870\\uD569 \", combinationHeaders.length !== filteredAndSortedCombinations.length ? `(전체 ${combinationHeaders.length}개 중)` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this), filteredAndSortedCombinations.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `column-item ${selectedCombination === item.header_group ? 'selected' : ''}`,\n          onClick: () => handleCombinationClick(item.header_group),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-count-badge\",\n            children: item.header_group ? item.header_group.split('|').length : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 19\n          }, this), renderHeaderGroupAsTags(item.header_group)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: activeFilters.length > 0 || excludedFilters.length > 0 ? \"필터 조건에 맞는 결과가 없습니다.\" : testMode ? \"테스트 모드가 활성화되었습니다.\" : \"채널과 헤더를 선택해주세요.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MiningView, {\n      combinationHeaders: combinationHeaders,\n      loading: loading,\n      error: error,\n      testMode: testMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this), (searchResults || similarityResults) && renderSearchResults()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderCombinationList, \"W6BEDNL5a384zbmjO2Wklbso8WM=\");\n_c = HeaderCombinationList;\nexport default HeaderCombinationList;\nvar _c;\n$RefreshReg$(_c, \"HeaderCombinationList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","fetchHeaderCombinationList","fetchHeaderList","fetchHeaderSimilarityList","MiningView","jsxDEV","_jsxDEV","HeaderCombinationList","channel","selectedHeader","onCombinationSelect","selectedCombination","_s","combinationHeaders","setCombinationHeaders","loading","setLoading","error","setError","activeTab","setActiveTab","testMode","setTestMode","uniqueItems","setUniqueItems","activeFilters","setActiveFilters","excludedFilters","setExcludedFilters","isFilterOpen","setIsFilterOpen","searchResults","setSearchResults","similarityResults","setSimilarityResults","rightClickedHeader","setRightClickedHeader","searchLoading","setSearchLoading","getCombinationHeaders","response","console","log","list","headers","Array","isArray","err","message","length","itemFrequency","forEach","item","header_group","split","header","sortedItems","Object","entries","map","name","count","sort","a","b","handleCombinationClick","combination","toggleFilter","isActive","includes","isExcluded","filter","resetFilters","handleHeaderRightClick","e","preventDefault","stopPropagation","headerListResponse","similarityResponse","clearSearchResults","renderHeaderGroupAsTags","headerGroup","className","children","index","onClick","onContextMenu","fileName","_jsxFileName","lineNumber","columnNumber","toggleTestMode","newTestMode","filteredAndSortedCombinations","filtered","containsAllActive","every","containsNoExcluded","some","aCount","bCount","localeCompare","renderSearchResults","group","representative","idx","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderCombinationList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { fetchHeaderCombinationList, fetchHeaderList, fetchHeaderSimilarityList } from '../services/api';\nimport MiningView from './MiningView';\nimport './Column.css';\n\nconst HeaderCombinationList = ({ channel, selectedHeader, onCombinationSelect, selectedCombination }) => {\n  const [combinationHeaders, setCombinationHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('combination'); // 'combination' or 'mining'\n  const [testMode, setTestMode] = useState(false); // Add test mode state\n  \n  // New state for filtering and sorting\n  const [uniqueItems, setUniqueItems] = useState([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [excludedFilters, setExcludedFilters] = useState([]);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n  \n  // State for right-click search results\n  const [searchResults, setSearchResults] = useState(null);\n  const [similarityResults, setSimilarityResults] = useState(null);\n  const [rightClickedHeader, setRightClickedHeader] = useState('');\n  const [searchLoading, setSearchLoading] = useState(false);\n\n  useEffect(() => {\n    const getCombinationHeaders = async () => {\n      // Test mode can work without channel or header selection\n      if (!testMode && (!channel || !selectedHeader)) return;\n      \n      setLoading(true);\n      try {\n        if (testMode) {\n          // Use sample data in test mode\n          const response = await import('../sample_data/header_combination.json');\n          console.log('Using sample data for combination headers:', response);\n          setCombinationHeaders(response.list || []);\n        } else if (channel && selectedHeader) {\n          // Use API in normal mode only if channel and header are selected\n          const headers = Array.isArray(selectedHeader) ? selectedHeader : [selectedHeader];\n          const response = await fetchHeaderCombinationList(channel, headers);\n          console.log('Combination headers response:', response);\n          setCombinationHeaders(response.list || []);\n        } else {\n          // Clear data if test mode is turned off and no channel/header is selected\n          setCombinationHeaders([]);\n        }\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCombinationHeaders();\n  }, [channel, selectedHeader, testMode]);\n\n  // Extract unique items and count their frequency when combinationHeaders changes\n  useEffect(() => {\n    if (combinationHeaders.length === 0) {\n      setUniqueItems([]);\n      return;\n    }\n\n    const itemFrequency = {};\n    \n    // Count frequency of each unique item\n    combinationHeaders.forEach(item => {\n      if (!item.header_group) return;\n      \n      const headers = item.header_group.split('|');\n      headers.forEach(header => {\n        if (header) {\n          if (itemFrequency[header]) {\n            itemFrequency[header]++;\n          } else {\n            itemFrequency[header] = 1;\n          }\n        }\n      });\n    });\n    \n    // Convert to array and sort by frequency (descending)\n    const sortedItems = Object.entries(itemFrequency)\n      .map(([name, count]) => ({ name, count }))\n      .sort((a, b) => b.count - a.count);\n    \n    setUniqueItems(sortedItems);\n  }, [combinationHeaders]);\n\n  const handleCombinationClick = (combination) => {\n    if (onCombinationSelect) {\n      onCombinationSelect(combination);\n    }\n  };\n\n  // Updated function to toggle filter items in cycle: none -> AND -> NOT -> none\n  const toggleFilter = (item) => {\n    // Check current state of the item\n    const isActive = activeFilters.includes(item);\n    const isExcluded = excludedFilters.includes(item);\n    \n    if (!isActive && !isExcluded) {\n      // First click: Add to active filters (AND)\n      setActiveFilters([...activeFilters, item]);\n    } else if (isActive) {\n      // Second click: Move from active to excluded (NOT)\n      setActiveFilters(activeFilters.filter(filter => filter !== item));\n      setExcludedFilters([...excludedFilters, item]);\n    } else {\n      // Third click: Remove from excluded (back to none)\n      setExcludedFilters(excludedFilters.filter(filter => filter !== item));\n    }\n  };\n\n  // Reset all filters\n  const resetFilters = () => {\n    setActiveFilters([]);\n    setExcludedFilters([]);\n  };\n\n  // Function to handle right click on a header\n  const handleHeaderRightClick = async (header, e) => {\n    e.preventDefault(); // Prevent default context menu\n    e.stopPropagation();\n    \n    if (!channel) return;\n    \n    setRightClickedHeader(header);\n    setSearchLoading(true);\n    \n    try {\n      // Fetch header list with search\n      const headerListResponse = await fetchHeaderList(channel, 100, '', header);\n      console.log('Header search results:', headerListResponse);\n      setSearchResults(headerListResponse.list || []);\n      \n      // Fetch similarity group\n      const similarityResponse = await fetchHeaderSimilarityList(channel, header);\n      console.log('Similarity group results:', similarityResponse);\n      setSimilarityResults(similarityResponse.list || []);\n    } catch (err) {\n      console.error('Error fetching header data:', err);\n      setSearchResults([]);\n      setSimilarityResults([]);\n    } finally {\n      setSearchLoading(false);\n    }\n  };\n\n  // Function to clear search results\n  const clearSearchResults = () => {\n    setSearchResults(null);\n    setSimilarityResults(null);\n    setRightClickedHeader('');\n  };\n\n  // Function to render header_group as tags\n  const renderHeaderGroupAsTags = (headerGroup) => {\n    if (!headerGroup) return null;\n    \n    const headers = headerGroup.split('|');\n    return (\n      <div className=\"header-tags\">\n        {headers.map((header, index) => {\n          const isActive = activeFilters.includes(header);\n          const isExcluded = excludedFilters.includes(header);\n          const className = `similarity-tag ${isActive ? 'active' : ''} ${isExcluded ? 'filtered-out' : ''}`;\n          \n          return (\n            <span \n              key={index} \n              className={className}\n              onClick={(e) => {\n                e.stopPropagation();\n                toggleFilter(header);\n              }}\n              onContextMenu={(e) => handleHeaderRightClick(header, e)}\n            >\n              {header}\n            </span>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const toggleTestMode = () => {\n    const newTestMode = !testMode;\n    setTestMode(newTestMode);\n    \n    // Log the test mode state change\n    console.log(`Test mode ${newTestMode ? 'enabled' : 'disabled'}`);\n    \n    // Clear combination data when turning off test mode if no channel/header selected\n    if (!newTestMode && (!channel || !selectedHeader)) {\n      setCombinationHeaders([]);\n    }\n  };\n\n  // Filter and sort the combination headers\n  const filteredAndSortedCombinations = useMemo(() => {\n    if (!combinationHeaders.length) return [];\n    \n    // Filter combinations based on activeFilters and excludedFilters\n    let filtered = [...combinationHeaders];\n    \n    if (activeFilters.length > 0 || excludedFilters.length > 0) {\n      filtered = combinationHeaders.filter(item => {\n        if (!item.header_group) return false;\n        \n        const headers = item.header_group.split('|');\n        \n        // Check if ALL active filters are included (AND logic)\n        const containsAllActive = activeFilters.length === 0 || \n          activeFilters.every(filter => headers.includes(filter));\n          \n        // Check if NONE of the excluded filters are included (NOT logic)\n        const containsNoExcluded = excludedFilters.length === 0 || \n          !excludedFilters.some(filter => headers.includes(filter));\n          \n        return containsAllActive && containsNoExcluded;\n      });\n    }\n    \n    // Sort combinations: first by number of items (ascending), then alphabetically\n    return filtered.sort((a, b) => {\n      // Count items in each combination\n      const aCount = a.header_group ? a.header_group.split('|').length : 0;\n      const bCount = b.header_group ? b.header_group.split('|').length : 0;\n      \n      // First sort by count (ascending)\n      if (aCount !== bCount) {\n        return aCount - bCount;\n      }\n      \n      // Then sort alphabetically\n      return a.header_group.localeCompare(b.header_group);\n    });\n  }, [combinationHeaders, activeFilters, excludedFilters]);\n\n  // Render the right-click search results\n  const renderSearchResults = () => {\n    if (!searchResults && !similarityResults) return null;\n    \n    return (\n      <div className=\"search-results-overlay\">\n        <div className=\"search-results-container\">\n          <div className=\"search-results-header\">\n            <h3>'{rightClickedHeader}' 검색 결과</h3>\n            <button onClick={clearSearchResults} className=\"close-button\">×</button>\n          </div>\n          \n          {searchLoading ? (\n            <div className=\"search-loading\">검색 중...</div>\n          ) : (\n            <div className=\"search-results-content\">\n              <div className=\"search-results-section\">\n                <h4>헤더 목록 ({searchResults?.length || 0})</h4>\n                <div className=\"search-results-list\">\n                  {searchResults && searchResults.length > 0 ? (\n                    searchResults.map((item, index) => (\n                      <div key={index} className=\"search-result-item\">\n                        {item.header}\n                        <span className=\"item-count\">({item.count})</span>\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"empty-results\">검색 결과 없음</div>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"search-results-section\">\n                <h4>유사군 목록 ({similarityResults?.length || 0})</h4>\n                <div className=\"search-results-list\">\n                  {similarityResults && similarityResults.length > 0 ? (\n                    similarityResults.map((group, index) => (\n                      <div key={index} className=\"search-result-group\">\n                        <div className=\"group-representative\">\n                          {group.representative}\n                        </div>\n                        <div className=\"group-members\">\n                          {group.headers.map((header, idx) => (\n                            <div key={idx} className={`group-member ${header === group.representative ? 'is-representative' : ''}`}>\n                              {header}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"empty-results\">유사군 결과 없음</div>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"column-container\">\n      <div className=\"column-title-container\">\n        <h2 className=\"column-title\">\n          {!testMode && selectedHeader \n            ? `헤더명 조합 목록: ${selectedHeader}` \n            : '헤더명 조합 목록'}\n        </h2>\n        <div className=\"test-mode-toggle\">\n          <label className=\"toggle-label\">\n            <span>Test Mode {testMode ? 'ON' : 'OFF'}</span>\n            <input \n              type=\"checkbox\" \n              checked={testMode}\n              onChange={toggleTestMode}\n            />\n            <span className=\"toggle-slider\"></span>\n          </label>\n        </div>\n      </div>\n      \n      <div className=\"tabs\">\n        <button \n          className={`tab ${activeTab === 'combination' ? 'active' : ''}`}\n          onClick={() => setActiveTab('combination')}\n        >\n          조합뷰\n        </button>\n        <button \n          className={`tab ${activeTab === 'mining' ? 'active' : ''}`}\n          onClick={() => setActiveTab('mining')}\n        >\n          마이닝뷰\n        </button>\n      </div>\n      \n      {activeTab === 'combination' ? (\n        <div className=\"tab-content\">\n          {/* Filter controls */}\n          <div className=\"filter-section\">\n            <div className=\"filter-header\" onClick={() => setIsFilterOpen(!isFilterOpen)}>\n              <h3>태그 필터 {activeFilters.length > 0 || excludedFilters.length > 0 ? `(${activeFilters.length + excludedFilters.length})` : ''}</h3>\n              <button className=\"filter-toggle-btn\">\n                {isFilterOpen ? '▲' : '▼'}\n              </button>\n            </div>\n            \n            {isFilterOpen && (\n              <div className=\"filter-content\">\n                <div className=\"filter-info\">\n                  <p>클릭: 포함(AND) → 제외(NOT) → 해제 / 우클릭: 헤더 검색</p>\n                  {(activeFilters.length > 0 || excludedFilters.length > 0) && (\n                    <button className=\"reset-filters-btn\" onClick={resetFilters}>\n                      초기화\n                    </button>\n                  )}\n                </div>\n                \n                <div className=\"filter-tags\">\n                  {uniqueItems.map((item, index) => {\n                    const isActive = activeFilters.includes(item.name);\n                    const isExcluded = excludedFilters.includes(item.name);\n                    const className = `filter-tag ${isActive ? 'active' : ''} ${isExcluded ? 'excluded' : ''}`;\n                    \n                    return (\n                      <div \n                        key={index} \n                        className={className}\n                        onClick={() => toggleFilter(item.name)}\n                        onContextMenu={(e) => handleHeaderRightClick(item.name, e)}\n                      >\n                        <span className=\"tag-text\">\n                          {item.name} <span className=\"tag-count\">({item.count})</span>\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {/* Results display */}\n          {loading ? (\n            <div className=\"loading\">로딩 중...</div>\n          ) : error ? (\n            <div className=\"error\">에러: {error}</div>\n          ) : filteredAndSortedCombinations.length > 0 ? (\n            <div className=\"column-content\">\n              {/* Results count */}\n              <div className=\"results-count\">\n                {filteredAndSortedCombinations.length}개 조합 {combinationHeaders.length !== filteredAndSortedCombinations.length ? `(전체 ${combinationHeaders.length}개 중)` : ''}\n              </div>\n              \n              {filteredAndSortedCombinations.map((item, index) => (\n                <div\n                  key={index}\n                  className={`column-item ${selectedCombination === item.header_group ? 'selected' : ''}`}\n                  onClick={() => handleCombinationClick(item.header_group)}\n                >\n                  <div className=\"item-count-badge\">\n                    {item.header_group ? item.header_group.split('|').length : 0}\n                  </div>\n                  {renderHeaderGroupAsTags(item.header_group)}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"column-empty\">\n              {activeFilters.length > 0 || excludedFilters.length > 0 ? (\n                \"필터 조건에 맞는 결과가 없습니다.\"\n              ) : testMode ? (\n                \"테스트 모드가 활성화되었습니다.\"\n              ) : (\n                \"채널과 헤더를 선택해주세요.\"\n              )}\n            </div>\n          )}\n        </div>\n      ) : (\n        <MiningView \n          combinationHeaders={combinationHeaders}\n          loading={loading}\n          error={error}\n          testMode={testMode}\n        />\n      )}\n\n      {/* Render search results popup if available */}\n      {(searchResults || similarityResults) && renderSearchResults()}\n    </div>\n  );\n};\n\nexport default HeaderCombinationList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}