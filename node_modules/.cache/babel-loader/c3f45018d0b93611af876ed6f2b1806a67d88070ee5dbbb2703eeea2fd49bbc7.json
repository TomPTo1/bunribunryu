{"ast":null,"code":"var _jsxFileName = \"/Users/francesson/reorganize/channel-list-app/src/components/HeaderCombinationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchHeaderCombinationList } from '../services/api';\nimport Column from './Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderCombinationList = ({\n  channel,\n  selectedHeader,\n  onCombinationSelect,\n  selectedCombination\n}) => {\n  _s();\n  const [combinationHeaders, setCombinationHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getCombinationHeaders = async () => {\n      if (!channel || !selectedHeader) return;\n      setLoading(true);\n      try {\n        const headers = Array.isArray(selectedHeader) ? selectedHeader : [selectedHeader];\n        const response = await fetchHeaderCombinationList(channel, headers);\n        console.log('Combination headers response:', response);\n        setCombinationHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCombinationHeaders();\n  }, [channel, selectedHeader]);\n  const handleCombinationClick = combination => {\n    if (onCombinationSelect) {\n      onCombinationSelect(combination);\n    }\n  };\n  if (!channel || !selectedHeader) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-empty\",\n        children: \"\\uCC44\\uB110\\uACFC \\uD5E4\\uB354\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Column, {\n    title: `헤더명 조합 목록: ${selectedHeader}`,\n    items: combinationHeaders,\n    onItemClick: handleCombinationClick,\n    selectedItem: selectedCombination,\n    renderItem: {\n      display: item => item.header_group,\n      value: item => item.header_group\n    },\n    loading: loading,\n    error: error,\n    emptyMessage: \"\\uD5E4\\uB354 \\uC870\\uD569 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderCombinationList, \"MdysdxRJEs8vboRkPV6U+aAr1Co=\");\n_c = HeaderCombinationList;\nexport default HeaderCombinationList;\nvar _c;\n$RefreshReg$(_c, \"HeaderCombinationList\");","map":{"version":3,"names":["React","useState","useEffect","fetchHeaderCombinationList","Column","jsxDEV","_jsxDEV","HeaderCombinationList","channel","selectedHeader","onCombinationSelect","selectedCombination","_s","combinationHeaders","setCombinationHeaders","loading","setLoading","error","setError","getCombinationHeaders","headers","Array","isArray","response","console","log","list","err","message","handleCombinationClick","combination","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","items","onItemClick","selectedItem","renderItem","display","item","header_group","value","emptyMessage","_c","$RefreshReg$"],"sources":["/Users/francesson/reorganize/channel-list-app/src/components/HeaderCombinationList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchHeaderCombinationList } from '../services/api';\nimport Column from './Column';\n\nconst HeaderCombinationList = ({ channel, selectedHeader, onCombinationSelect, selectedCombination }) => {\n  const [combinationHeaders, setCombinationHeaders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCombinationHeaders = async () => {\n      if (!channel || !selectedHeader) return;\n      \n      setLoading(true);\n      try {\n        const headers = Array.isArray(selectedHeader) ? selectedHeader : [selectedHeader];\n        const response = await fetchHeaderCombinationList(channel, headers);\n        console.log('Combination headers response:', response);\n        setCombinationHeaders(response.list || []);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setCombinationHeaders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCombinationHeaders();\n  }, [channel, selectedHeader]);\n\n  const handleCombinationClick = (combination) => {\n    if (onCombinationSelect) {\n      onCombinationSelect(combination);\n    }\n  };\n\n  if (!channel || !selectedHeader) {\n    return (\n      <div className=\"column-container\">\n        <div className=\"column-empty\">채널과 헤더를 선택해주세요.</div>\n      </div>\n    );\n  }\n\n  return (\n    <Column\n      title={`헤더명 조합 목록: ${selectedHeader}`}\n      items={combinationHeaders}\n      onItemClick={handleCombinationClick}\n      selectedItem={selectedCombination}\n      renderItem={{\n        display: item => item.header_group,\n        value: item => item.header_group\n      }}\n      loading={loading}\n      error={error}\n      emptyMessage=\"헤더 조합 정보가 없습니다.\"\n    />\n  );\n};\n\nexport default HeaderCombinationList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,0BAA0B,QAAQ,iBAAiB;AAC5D,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,cAAc;EAAEC,mBAAmB;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACvG,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMiB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI,CAACX,OAAO,IAAI,CAACC,cAAc,EAAE;MAEjCO,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMI,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACb,cAAc,CAAC,GAAGA,cAAc,GAAG,CAACA,cAAc,CAAC;QACjF,MAAMc,QAAQ,GAAG,MAAMpB,0BAA0B,CAACK,OAAO,EAAEY,OAAO,CAAC;QACnEI,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;QACtDT,qBAAqB,CAACS,QAAQ,CAACG,IAAI,IAAI,EAAE,CAAC;QAC1CR,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;QACrBd,qBAAqB,CAAC,EAAE,CAAC;MAC3B,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACX,OAAO,EAAEC,cAAc,CAAC,CAAC;EAE7B,MAAMoB,sBAAsB,GAAIC,WAAW,IAAK;IAC9C,IAAIpB,mBAAmB,EAAE;MACvBA,mBAAmB,CAACoB,WAAW,CAAC;IAClC;EACF,CAAC;EAED,IAAI,CAACtB,OAAO,IAAI,CAACC,cAAc,EAAE;IAC/B,oBACEH,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B1B,OAAA;QAAKyB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAEV;EAEA,oBACE9B,OAAA,CAACF,MAAM;IACLiC,KAAK,EAAE,cAAc5B,cAAc,EAAG;IACtC6B,KAAK,EAAEzB,kBAAmB;IAC1B0B,WAAW,EAAEV,sBAAuB;IACpCW,YAAY,EAAE7B,mBAAoB;IAClC8B,UAAU,EAAE;MACVC,OAAO,EAAEC,IAAI,IAAIA,IAAI,CAACC,YAAY;MAClCC,KAAK,EAAEF,IAAI,IAAIA,IAAI,CAACC;IACtB,CAAE;IACF7B,OAAO,EAAEA,OAAQ;IACjBE,KAAK,EAAEA,KAAM;IACb6B,YAAY,EAAC;EAAiB;IAAAb,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEN,CAAC;AAACxB,EAAA,CAxDIL,qBAAqB;AAAAwC,EAAA,GAArBxC,qBAAqB;AA0D3B,eAAeA,qBAAqB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}