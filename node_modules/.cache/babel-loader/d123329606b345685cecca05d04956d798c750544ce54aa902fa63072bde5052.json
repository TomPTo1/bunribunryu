{"ast":null,"code":"import { getFileContent } from './fileSystemService';\n\n/**\n * Parse an XLSX file and extract its data structure\n * @param {string} filePath - The XLSX file path to parse\n * @returns {Object} The parsed data structure with sheets, headers, and data\n */\nexport const parseXLSXFile = async filePath => {\n  try {\n    // API를 통해 파일 내용 가져오기\n    const xlsxData = await getFileContent(filePath);\n    return xlsxData;\n  } catch (error) {\n    console.error(\"Error parsing XLSX file:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getFileContent","parseXLSXFile","filePath","xlsxData","error","console"],"sources":["/Users/francesson/Documents/github/bunribunryu/src/services/xlsxParserService.js"],"sourcesContent":["import { getFileContent } from './fileSystemService';\n\n/**\n * Parse an XLSX file and extract its data structure\n * @param {string} filePath - The XLSX file path to parse\n * @returns {Object} The parsed data structure with sheets, headers, and data\n */\nexport const parseXLSXFile = async (filePath) => {\n  try {\n    // API를 통해 파일 내용 가져오기\n    const xlsxData = await getFileContent(filePath);\n    return xlsxData;\n  } catch (error) {\n    console.error(\"Error parsing XLSX file:\", error);\n    throw error;\n  }\n}; "],"mappings":"AAAA,SAASA,cAAc,QAAQ,qBAAqB;;AAEpD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMH,cAAc,CAACE,QAAQ,CAAC;IAC/C,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}